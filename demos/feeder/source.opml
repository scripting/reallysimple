<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Thu, 21 Aug 2025 21:53:07 GMT -->

<!-- 
   Hi this is Dave Winer. I write all my project code in an outliner, which 
   generates all the files that make up this GitHub project. You'll see a 
   source.opml file like this in each of my projects. It contains the outline 
   source that the repo files were generated from. This is the most logical place 
   to store them. You can read the code in any outliner that supports OPML, which 
   includes https://drummer.land. You can use the Open URL command in 
   Drummer's File menu to open the "raw" version of this file straight from the 
   GitHub repo.
 -->

<opml version="2.0">
	<head>
		<title>nodeEditor: feeder</title>
		<dateCreated>Fri, 19 Nov 2021 16:45:29 GMT</dateCreated>
		<dateModified>Thu, 21 Aug 2025 21:53:07 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 2, 18, 28, 50, 69</expansionState>
		<vertScrollState>4</vertScrollState>
		<windowTop>77</windowTop>
		<windowLeft>778</windowLeft>
		<windowBottom>1001</windowBottom>
		<windowRight>1811</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/feeder/" created="Sun, 29 Aug 2021 15:07:43 GMT">
			<outline text="worknotes.md" created="Sun, 12 Jun 2022 13:52:22 GMT">
				<outline text="#### 1/11/25; 11:01:56 AM by DW" created="Sat, 11 Jan 2025 16:01:55 GMT">
					<outline text="In the jsonify template we were including http files when the app is served via https." created="Sat, 11 Jan 2025 16:01:57 GMT"/>
					<outline text="This way of calling it should work, but doesn't --" created="Sat, 11 Jan 2025 16:08:08 GMT">
						<outline text="* https://feeder.scripting.com/?feedurl=https://news.ycombinator.com/rss" created="Sat, 11 Jan 2025 16:08:18 GMT"/>
						</outline>
					<outline text="What we do --" created="Sat, 11 Jan 2025 16:09:01 GMT">
						<outline text="* if a request is made for / and no template was specified, we do the same thing we do as if returnjson had been called" created="Sat, 11 Jan 2025 16:09:04 GMT"/>
						<outline text="* this is what i always expect it to do, when using it as a utility, so let's make it work that way." created="Sat, 11 Jan 2025 16:09:54 GMT"/>
						</outline>
					</outline>
				<outline text="#### 4/20/23; 9:26:31 AM by DW -- v0.5.0" created="Thu, 20 Apr 2023 13:26:30 GMT">
					<outline text="More new calls:" created="Thu, 20 Apr 2023 13:26:31 GMT">
						<outline text="/returnlinkblogjson" created="Thu, 20 Apr 2023 13:26:37 GMT">
							<outline text="Example of call --" created="Thu, 20 Apr 2023 13:36:58 GMT">
								<outline text="&lt;a href=&quot;http://feeder.scripting.com/returnlinkblogjson?feedurl=http://data.feedland.org/feeds/davewiner.xml&quot;&gt;http://feeder.scripting.com/returnlinkblogjson?feedurl=http://data.feedland.org/feeds/davewiner.xml&lt;/a&gt;" created="Thu, 20 Apr 2023 13:37:18 GMT"/>
								</outline>
							<outline text="This is the format that Radio3 saves a user's linkblog to. At first I thought I'd need this format, but later decided to create a different endpoint that put all the rendering code in feeder, so I didn't need to replicate it in the apps." created="Thu, 20 Apr 2023 13:37:43 GMT"/>
							</outline>
						<outline text="/returnlinkbloghtml" created="Thu, 20 Apr 2023 13:38:30 GMT">
							<outline text="Example of call -- " created="Thu, 20 Apr 2023 16:20:29 GMT">
								<outline text="&lt;a href=&quot;http://feeder.scripting.com/returnlinkbloghtml?feedurl=http://data.feedland.org/feeds/davewiner.xml&quot;&gt;http://feeder.scripting.com/returnlinkbloghtml?feedurl=http://data.feedland.org/feeds/davewiner.xml&lt;/a&gt;" created="Thu, 20 Apr 2023 13:37:18 GMT"/>
								</outline>
							<outline text="This renders an RSS feed, probably generated by FeedLand, as a linkblog. " created="Thu, 20 Apr 2023 16:20:38 GMT"/>
							<outline text="It's how the Links panel on Scripting News is rendered, and also how we do the linkblog panel for Drummer blogs. " created="Thu, 20 Apr 2023 16:21:01 GMT"/>
							<outline text="The Feeder app has become a pretty useful tool, it's a good place to put code for rendering feeds that's needed for browser-based apps. ;-)" created="Thu, 20 Apr 2023 16:21:29 GMT"/>
							</outline>
						</outline>
					</outline>
				<outline text="#### 4/19/23; 9:36:56 AM by DW" created="Wed, 19 Apr 2023 13:36:55 GMT">
					<outline text="New call -- /returnlinkblogday" created="Wed, 19 Apr 2023 13:36:56 GMT">
						<outline text="Example of call --" created="Wed, 19 Apr 2023 13:37:22 GMT">
							<outline text="&lt;a href=&quot;http://feeder.scripting.com/returnlinkblog?feedurl=http://data.feedland.org/feeds/davewiner.xml&quot;&gt;http://feeder.scripting.com/returnlinkblog?feedurl=http://data.feedland.org/feeds/davewiner.xml&lt;/a&gt;" created="Wed, 19 Apr 2023 13:37:07 GMT"/>
							</outline>
						<outline text="We return the HTML text you'd display if you wanted to display the links for the current day, as we do in the nightly email." created="Wed, 19 Apr 2023 13:37:29 GMT"/>
						<outline text="I needed a place to test this code before including it in the server app. " created="Wed, 19 Apr 2023 13:39:15 GMT"/>
						<outline text="Increasingly that's a role the Feeder app is taking on. A nice development testbed for feed renderings built on the reallysimple package. " created="Wed, 19 Apr 2023 13:39:27 GMT"/>
						<outline text="Note if you want a full linkblog-style rendering, use the endpoint I added on the 20th, returnlinkbloghtml." created="Thu, 20 Apr 2023 16:23:02 GMT"/>
						</outline>
					</outline>
				<outline text="#### 4/7/23; 10:00:28 AM by DW" created="Fri, 07 Apr 2023 14:00:27 GMT">
					<outline text="Return text/plain with  charset=utf-8." created="Fri, 07 Apr 2023 14:00:28 GMT"/>
					</outline>
				<outline text="#### 3/29/23; 12:36:50 PM by DW" created="Wed, 29 Mar 2023 16:36:48 GMT">
					<outline text="Add /returnmarkdown endpoint." created="Wed, 29 Mar 2023 16:36:51 GMT"/>
					</outline>
				<outline text="#### 7/15/22; 9:41:22 AM by DW" created="Fri, 15 Jul 2022 13:41:20 GMT">
					<outline text="Included the &lt;a href=&quot;https://github.com/scripting/feeder/blob/main/templates/mailbox.html&quot;&gt;mailbox template&lt;/a&gt;, also &lt;a href=&quot;https://github.com/scripting/feeder/blob/main/docs/templates.md#the-mailbox-template&quot;&gt;documented&lt;/a&gt; it." created="Fri, 15 Jul 2022 13:41:26 GMT"/>
					</outline>
				<outline text="#### 6/23/22; 11:38:44 AM by DW -- v0.4.10 " created="Thu, 23 Jun 2022 15:38:44 GMT">
					<outline text="A new template, jsonify." created="Thu, 23 Jun 2022 15:38:46 GMT"/>
					<outline text="Two new values returned in serverConfig -- " created="Thu, 23 Jun 2022 15:39:01 GMT">
						<outline text="feedUrl -- the url of the feed we're asking you to render" created="Thu, 23 Jun 2022 15:39:15 GMT"/>
						<outline text="ctSecs -- how many seconds it took to read the feed" created="Thu, 23 Jun 2022 15:39:27 GMT"/>
						</outline>
					</outline>
				<outline text="#### 6/23/22; 9:55:17 AM by DW -- v0.4.9" isComment="true" created="Thu, 23 Jun 2022 13:55:17 GMT">
					<outline text="We weren't checking for errors when rendering through a template, so if a server was responding too slowly the process would continue as if we had the feed structure, but we don't, and it would crash. " created="Thu, 23 Jun 2022 14:21:35 GMT"/>
					</outline>
				<outline text="#### 6/22/22; 10:19:39 AM by DW -- v0.4.8" created="Wed, 22 Jun 2022 14:19:38 GMT">
					<outline text="Mopping up, fixing little things. Today's project is to write docs for the Hello World template. " created="Wed, 22 Jun 2022 14:19:39 GMT"/>
					</outline>
				<outline text="#### 6/21/22; 11:32:20 AM by DW-- v0.4.7" created="Tue, 21 Jun 2022 15:32:19 GMT">
					<outline text="the helloworld template" created="Tue, 21 Jun 2022 15:32:20 GMT">
						<outline text="it's in the templates folder" created="Tue, 21 Jun 2022 15:32:43 GMT"/>
						<outline text="here's how you access it" created="Tue, 21 Jun 2022 15:32:48 GMT">
							<outline text="&lt;a href=&quot;http://feeder.scripting.com/?template=helloworld&amp;feedurl=http%3A%2F%2Fscripting.com%2Frss.xml&quot;&gt;http://feeder.scripting.com/?template=helloworld&amp;feedurl=http%3A%2F%2Fscripting.com%2Frss.xml&lt;/a&gt;" created="Tue, 21 Jun 2022 15:41:39 GMT"/>
							</outline>
						<outline text="have a look at the template source." created="Tue, 21 Jun 2022 16:45:38 GMT"/>
						<outline text="i made it as simple as possible, but I did use jQuery. It wasn't worth the time imho to figure out how to not use jQuery. ;-)" created="Tue, 21 Jun 2022 16:45:49 GMT"/>
						<outline text="The next step is to do a bit of docs. Need a fresh start for that. " created="Tue, 21 Jun 2022 16:46:31 GMT"/>
						<outline text="And then I want to get some people reviewing this stuff. I don't want all the suggestions to come two months from now. " created="Tue, 21 Jun 2022 16:46:46 GMT"/>
						<outline text="We still have a lot of ground to cover, this is just the beginning." created="Tue, 21 Jun 2022 16:47:13 GMT"/>
						</outline>
					</outline>
				<outline text="#### 6/20/22; 12:21:34 PM by DW -- v0.4.6" created="Sat, 18 Jun 2022 15:36:53 GMT">
					<outline text="feeder now supports templates, so it's easy to add a new way to view a feed. " created="Sat, 18 Jun 2022 15:38:21 GMT"/>
					<outline text="here's an example. I implemented the mailbox viewer as a template, it was previously a built-in command." created="Mon, 20 Jun 2022 15:58:55 GMT">
						<outline text="&lt;a href=&quot;http://feeder.scripting.com/?template=mailbox&amp;url=https://fallows.substack.com/feed&quot;&gt;http://feeder.scripting.com/?template=mailbox&amp;url=https://fallows.substack.com/feed&lt;/a&gt;" created="Mon, 20 Jun 2022 15:59:13 GMT"/>
						</outline>
					<outline text="there's a viewers subfolder, to add a template named hello, you'd add a file hello.html to the folder." created="Mon, 20 Jun 2022 16:16:18 GMT"/>
					<outline text="before serving the text, we do some macro substitutions, with the title of the feed, the name and version number of the feeder app, and most important, a JSON structure with the contents of the feed as produced by the reallysimple package. " created="Mon, 20 Jun 2022 16:16:44 GMT"/>
					<outline text="next step -- write a hello world template and document it. this will be clearer when that's provided." created="Mon, 20 Jun 2022 15:59:25 GMT"/>
					<outline text="still feeder is just a testbed. these templates will become applications in their own right. " created="Mon, 20 Jun 2022 16:17:48 GMT"/>
					</outline>
				<outline text="#### 6/13/22; 12:06:18 PM by DW -- v0.4.5" created="Mon, 13 Jun 2022 16:06:17 GMT">
					<outline text="Include the charset in the content-type header when returning JSON and XML. " created="Mon, 13 Jun 2022 16:06:18 GMT"/>
					</outline>
				<outline text="#### 6/12/22; 6:56:43 PM by DW -- v0.4.4" created="Sun, 12 Jun 2022 22:56:39 GMT">
					<outline text="We now keep a stats.json file, with info on number of reads, errors, and reads per feed." created="Sun, 12 Jun 2022 22:56:56 GMT"/>
					</outline>
				<outline text="#### 6/12/22; 9:52:26 AM by DW" created="Sun, 12 Jun 2022 13:52:25 GMT">
					<outline text="I need this functionality for the reallysimple project. " created="Sun, 12 Jun 2022 13:52:27 GMT"/>
					<outline text="This predates the package, it's basically where it was developed." created="Sun, 12 Jun 2022 13:52:45 GMT"/>
					<outline text="So I rewrote it to use the package. " created="Sun, 12 Jun 2022 13:52:56 GMT"/>
					</outline>
				</outline>
			<outline text="package.json">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;feeder&quot;,"/>
					<outline text="&quot;description&quot;: &quot;A Node server app that hooks the reallysimple package up to the web.&quot;," created="Sun, 12 Jun 2022 15:30:26 GMT"/>
					<outline text="&quot;version&quot;: &quot;0.5.0&quot;, "/>
					<outline text="&quot;author&quot;: &quot;Dave Winer &lt;dave@scripting.com&gt;&quot;,"/>
					<outline text="&quot;license&quot;: &quot;MIT&quot;,"/>
					<outline text="&quot;main&quot;: &quot;feeder.js&quot;,"/>
					<outline text="&quot;repository&quot;: {">
						<outline text="&quot;type&quot;: &quot;git&quot;,"/>
						<outline text="&quot;url&quot;: &quot;https://github.com/scripting/feeder.git&quot;"/>
						<outline text="},"/>
						</outline>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;daveutils&quot;: &quot;*&quot;,"/>
						<outline text="&quot;reallysimple&quot;: &quot;*&quot;,"/>
						<outline text="&quot;request&quot;: &quot;*&quot;,"/>
						<outline text="&quot;dateformat&quot;: &quot;4.5.1&quot;,"/>
						<outline text="&quot;davehttp&quot;: &quot;*&quot;"/>
						<outline text="},"/>
						</outline>
					<outline text="&quot;engines&quot;: { ">
						<outline text="&quot;node&quot;: &quot;*&quot;"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="feeder.js" created="Mon, 06 Jun 2022 15:08:02 GMT">
				<outline text="const myVersion = &quot;0.5.0&quot;, myProductName = &quot;feeder&quot;;      "/>
				<outline text="" created="Sat, 05 Mar 2022 17:19:07 GMT"/>
				<outline text="const fs = require (&quot;fs&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const utils = require (&quot;daveutils&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const dateformat = require (&quot;dateformat&quot;);"/>
				<outline text="const request = require (&quot;request&quot;); "/>
				<outline text="const davehttp = require (&quot;davehttp&quot;); "/>
				<outline text="const reallysimple = require (&quot;reallysimple&quot;);" created="Sat, 05 Mar 2022 17:19:07 GMT"/>
				<outline text="" created="Wed, 08 Jun 2022 15:36:28 GMT"/>
				<outline text="var config = {">
					<outline text="port: process.env.PORT || 1403,"/>
					<outline text="flAllowAccessFromAnywhere: true,"/>
					<outline text="flLogToConsole: true,"/>
					<outline text="defaultFeedUrl: &quot;http://nytimes.com/timeswire/feeds/&quot;," created="Sun, 12 Jun 2022 13:31:26 GMT"/>
					<outline text="fnameStats: &quot;stats.json&quot;," created="Sun, 12 Jun 2022 22:45:30 GMT"/>
					<outline text="templatesFolderPath: &quot;templates/&quot;" created="Mon, 20 Jun 2022 15:13:29 GMT"/>
					<outline text="}"/>
					</outline>
				<outline text="" created="Sun, 12 Jun 2022 22:40:46 GMT"/>
				<outline text="var stats = {" created="Sun, 12 Jun 2022 22:40:46 GMT">
					<outline text="ctLaunches: 0," created="Sun, 12 Jun 2022 22:53:47 GMT"/>
					<outline text="whenLastLaunch: undefined," created="Sun, 12 Jun 2022 22:54:40 GMT"/>
					<outline text="ctFeedReads: 0," created="Sun, 12 Jun 2022 22:40:58 GMT"/>
					<outline text="whenLastFeedRead: undefined," created="Sun, 12 Jun 2022 22:41:04 GMT"/>
					<outline text="ctFeedReadErrors: 0," created="Sun, 12 Jun 2022 22:43:50 GMT"/>
					<outline text="whenLastFeedReadError: undefined," created="Sun, 12 Jun 2022 22:41:04 GMT"/>
					<outline text="ctSecsLastRequest: undefined," created="Mon, 13 Jun 2022 12:17:16 GMT"/>
					<outline text="feeds: new Object ()" created="Sun, 12 Jun 2022 22:41:14 GMT"/>
					<outline text="}" created="Sun, 12 Jun 2022 22:40:52 GMT"/>
					</outline>
				<outline text="var flStatsChanged = false;"/>
				<outline text="" created="Sun, 12 Jun 2022 22:40:46 GMT"/>
				<outline text="function statsChanged () {" created="Sun, 12 Jun 2022 22:40:47 GMT">
					<outline text="flStatsChanged = true;" created="Sun, 12 Jun 2022 22:45:07 GMT"/>
					<outline text="}" created="Sun, 12 Jun 2022 22:45:03 GMT"/>
					</outline>
				<outline text="function buildParamList (params) {" created="Sat, 09 Aug 2014 15:39:08 GMT" pgfnum="43181">
					<outline text="var s = &quot;&quot;;" created="Sat, 09 Aug 2014 15:39:47 GMT" pgfnum="43188"/>
					<outline text="for (var x in params) {" created="Sat, 09 Aug 2014 15:39:38 GMT" pgfnum="43186">
						<outline text="if (params [x] !== undefined) {" created="Wed, 04 Aug 2021 14:48:52 GMT">
							<outline text="if (s.length &gt; 0) {" created="Sat, 09 Aug 2014 15:40:02 GMT" pgfnum="43189">
								<outline text="s += &quot;&amp;&quot;;" created="Sat, 09 Aug 2014 15:40:08 GMT" pgfnum="43190"/>
								<outline text="}" created="Sat, 09 Aug 2014 15:40:14 GMT" pgfnum="43191"/>
								</outline>
							<outline text="s += x + &quot;=&quot; + encodeURIComponent (params [x]);" created="Sat, 09 Aug 2014 15:40:19 GMT" pgfnum="43192"/>
							<outline text="}" created="Wed, 04 Aug 2021 14:49:01 GMT"/>
							</outline>
						<outline text="}" created="Sat, 09 Aug 2014 15:39:43 GMT" pgfnum="43187"/>
						</outline>
					<outline text="return (s);" created="Sat, 09 Aug 2014 15:40:54 GMT" pgfnum="43193"/>
					<outline text="}" created="Sat, 09 Aug 2014 15:39:35 GMT" pgfnum="43185"/>
					</outline>
				<outline text="function readFeed (feedUrl=config.defaultFeedUrl, callback) {" created="Sun, 12 Jun 2022 13:32:03 GMT">
					<outline text="const whenstart = new Date ();" created="Sun, 12 Jun 2022 22:51:51 GMT"/>
					<outline text="reallysimple.readFeed (feedUrl, function (err, theFeed) {">
						<outline text="stats.ctFeedReads++;" created="Sun, 12 Jun 2022 22:47:14 GMT"/>
						<outline text="stats.whenLastFeedRead = whenstart;" created="Sun, 12 Jun 2022 22:47:59 GMT"/>
						<outline text="stats.ctSecsLastRequest = utils.secondsSince (whenstart);" created="Mon, 13 Jun 2022 12:17:47 GMT"/>
						<outline text="if (err) {" created="Sun, 12 Jun 2022 22:46:54 GMT">
							<outline text="stats.ctFeedReadErrors++;" created="Sun, 12 Jun 2022 22:47:14 GMT"/>
							<outline text="stats.whenLastFeedReadError = whenstart;" created="Sun, 12 Jun 2022 22:47:59 GMT"/>
							<outline text="callback (err);" created="Sun, 12 Jun 2022 22:48:44 GMT"/>
							<outline text="}" created="Sun, 12 Jun 2022 22:46:57 GMT"/>
							</outline>
						<outline text="else {" created="Sun, 12 Jun 2022 22:46:58 GMT">
							<outline text="if (stats.feeds [feedUrl] === undefined) {" created="Sun, 12 Jun 2022 22:49:30 GMT">
								<outline text="stats.feeds [feedUrl] = {" created="Sun, 12 Jun 2022 22:49:59 GMT">
									<outline text="ct: 1," created="Sun, 12 Jun 2022 22:50:12 GMT"/>
									<outline text="when: whenstart" created="Sun, 12 Jun 2022 22:50:16 GMT"/>
									<outline text="}" created="Sun, 12 Jun 2022 22:50:08 GMT"/>
									</outline>
								<outline text="}" created="Sun, 12 Jun 2022 22:49:43 GMT"/>
								</outline>
							<outline text="else {" created="Sun, 12 Jun 2022 22:50:35 GMT">
								<outline text="let thisFeed = stats.feeds [feedUrl];" created="Sun, 12 Jun 2022 22:50:44 GMT"/>
								<outline text="thisFeed.ct++;" created="Sun, 12 Jun 2022 22:51:18 GMT"/>
								<outline text="thisFeed.when = whenstart;" created="Sun, 12 Jun 2022 22:51:21 GMT"/>
								<outline text="}" created="Sun, 12 Jun 2022 22:50:37 GMT"/>
								</outline>
							<outline text="callback (undefined, theFeed);" created="Sun, 12 Jun 2022 22:48:44 GMT"/>
							<outline text="}" created="Sun, 12 Jun 2022 22:46:59 GMT"/>
							</outline>
						<outline text="statsChanged ();" created="Sun, 12 Jun 2022 22:48:42 GMT"/>
						<outline text="});" created="Sun, 12 Jun 2022 22:46:50 GMT"/>
						</outline>
					<outline text="}" created="Sun, 12 Jun 2022 13:32:15 GMT"/>
					</outline>
				<outline text="function viewFeedInTemplate (feedUrl, templateName, callback) { //6/20/22 by DW" created="Mon, 20 Jun 2022 15:06:20 GMT">
					<outline text="Changes" isComment="true" created="Tue, 21 Jun 2022 15:34:01 GMT">
						<outline text="6/23/22; 11:13:41 AM by DW" created="Thu, 23 Jun 2022 15:13:40 GMT">
							<outline text="Added two new elements to serverConfig, feedUrl and ctSecs, the number of secs it took to read the feed." created="Thu, 23 Jun 2022 15:13:41 GMT"/>
							</outline>
						<outline text="6/23/22; 10:23:12 AM by DW" created="Thu, 23 Jun 2022 14:23:12 GMT">
							<outline text="We weren't checking for errors when rendering through a template, so if a server was responding too slowly the process would continue as if we had the feed structure, but we don't, and it would crash. " created="Thu, 23 Jun 2022 14:23:13 GMT"/>
							</outline>
						<outline text="6/22/22; 10:16:29 AM by DW" created="Wed, 22 Jun 2022 14:16:29 GMT">
							<outline text="I had moved the productName from the pagetable to the serverConfig, but this broke the mailbox template which uses it in constructing the page title. Rather than break the template, or force two versions of it, I added productnameForDisplay back to the pagetable. " created="Wed, 22 Jun 2022 14:16:29 GMT"/>
							</outline>
						<outline text="6/21/22; 11:34:05 AM by DW" created="Tue, 21 Jun 2022 15:34:04 GMT">
							<outline text="We use the term riverJsonText for historic reasons, the mailbox template was originally designed to work in River6, and I don't want to break anything over there unnecessarily. " created="Tue, 21 Jun 2022 15:34:05 GMT"/>
							<outline text="But in this context, it should be called feedJsonText." created="Tue, 21 Jun 2022 15:34:55 GMT"/>
							<outline text="To avoid breakage, we define both in the pagetable." created="Tue, 21 Jun 2022 15:35:17 GMT"/>
							<outline text="We will use feedJsonText in our work in reallysimpleland. " created="Tue, 21 Jun 2022 15:35:32 GMT"/>
							</outline>
						</outline>
					<outline text="const whenstart = new Date ();" created="Thu, 23 Jun 2022 15:13:19 GMT"/>
					<outline text="function servePage (templatetext, theFeed) {" created="Fri, 04 Feb 2022 20:59:16 GMT">
						<outline text="const feedJsonText = utils.jsonStringify (theFeed);" created="Tue, 21 Jun 2022 15:36:32 GMT"/>
						<outline text="const serverConfig = {" created="Tue, 21 Jun 2022 15:50:53 GMT">
							<outline text="productName: myProductName, "/>
							<outline text="version: myVersion,"/>
							<outline text="ctSecs: utils.secondsSince (whenstart), //6/23/22 by DW" created="Thu, 23 Jun 2022 15:12:52 GMT"/>
							<outline text="feedUrl //6/23/22 by DW" created="Thu, 23 Jun 2022 15:12:23 GMT"/>
							<outline text="};" created="Tue, 21 Jun 2022 15:50:58 GMT"/>
							</outline>
						<outline text="var pagetable = {">
							<outline text="feedTitle: theFeed.title," created="Sat, 18 Jun 2022 15:17:18 GMT"/>
							<outline text="productnameForDisplay: myProductName, //it appears in the mailbox template -- 6/22/22 AM by DW" created="Wed, 22 Jun 2022 14:15:28 GMT"/>
							<outline text="config: utils.jsonStringify (serverConfig)," created="Sat, 18 Jun 2022 15:59:49 GMT"/>
							<outline text="riverJsonText: feedJsonText, //for compatibility with River6" created="Sat, 18 Jun 2022 15:52:00 GMT"/>
							<outline text="feedJsonText" created="Tue, 21 Jun 2022 15:36:58 GMT"/>
							<outline text="};"/>
							</outline>
						<outline text="var pagetext = utils.multipleReplaceAll (templatetext.toString (), pagetable, false, &quot;[%&quot;, &quot;%]&quot;);"/>
						<outline text="callback (pagetext);"/>
						<outline text="}" created="Fri, 04 Feb 2022 21:02:43 GMT"/>
						</outline>
					<outline text="readFeed (feedUrl, function (err, theFeed) {" created="Sun, 12 Jun 2022 13:58:30 GMT">
						<outline text="if (err) { //6/23/22 by DW" created="Thu, 23 Jun 2022 14:19:00 GMT">
							<outline text="callback (&quot;Can't view the feed because there was an error reading it: &quot; + err.message + &quot;.&quot;);" created="Thu, 23 Jun 2022 14:19:17 GMT"/>
							<outline text="}" created="Thu, 23 Jun 2022 14:19:03 GMT"/>
							</outline>
						<outline text="else {" created="Thu, 23 Jun 2022 14:19:04 GMT">
							<outline text="var flnotfound = true;" created="Mon, 20 Jun 2022 15:16:28 GMT"/>
							<outline text="utils.sureFolder (config.templatesFolderPath, function () {" created="Mon, 20 Jun 2022 15:28:47 GMT">
								<outline text="var f = config.templatesFolderPath + templateName + &quot;.html&quot;;" created="Mon, 20 Jun 2022 15:33:52 GMT"/>
								<outline text="fs.readFile (f, function (err, templatetext) {" created="Mon, 20 Jun 2022 15:18:06 GMT">
									<outline text="if (err) {" created="Mon, 20 Jun 2022 15:18:33 GMT">
										<outline text="callback (&quot;Can't view the feed because there was an error reading the template.&quot;);" created="Mon, 20 Jun 2022 15:18:41 GMT"/>
										<outline text="}" created="Mon, 20 Jun 2022 15:18:35 GMT"/>
										</outline>
									<outline text="else {" created="Mon, 20 Jun 2022 15:18:36 GMT">
										<outline text="servePage (templatetext, theFeed);" created="Fri, 04 Feb 2022 21:01:42 GMT"/>
										<outline text="}" created="Mon, 20 Jun 2022 15:18:38 GMT"/>
										</outline>
									<outline text="});" created="Mon, 20 Jun 2022 15:18:19 GMT"/>
									</outline>
								<outline text="});" created="Mon, 20 Jun 2022 15:29:34 GMT"/>
								</outline>
							<outline text="}" created="Thu, 23 Jun 2022 14:19:07 GMT"/>
							</outline>
						<outline text="});" created="Mon, 20 Jun 2022 15:07:11 GMT"/>
						</outline>
					<outline text="}" created="Mon, 20 Jun 2022 15:06:34 GMT"/>
					</outline>
				<outline text="function readConfig (f, config, callback) {" created="Mon, 08 Mar 2021 15:19:44 GMT">
					<outline text="fs.readFile (f, function (err, jsontext) {" created="Mon, 08 Mar 2021 15:19:57 GMT">
						<outline text="if (!err) {" created="Mon, 08 Mar 2021 15:20:27 GMT">
							<outline text="try {" created="Mon, 08 Mar 2021 15:20:49 GMT">
								<outline text="var jstruct = JSON.parse (jsontext);" created="Mon, 08 Mar 2021 15:21:07 GMT"/>
								<outline text="for (var x in jstruct) {" created="Mon, 08 Mar 2021 15:21:14 GMT">
									<outline text="config [x] = jstruct [x];" created="Mon, 08 Mar 2021 15:21:20 GMT"/>
									<outline text="}" created="Mon, 08 Mar 2021 15:21:25 GMT"/>
									</outline>
								<outline text="}" created="Mon, 08 Mar 2021 15:20:58 GMT"/>
								</outline>
							<outline text="catch (err) {" created="Mon, 08 Mar 2021 15:20:59 GMT">
								<outline text="console.log (&quot;Error reading &quot; + f);" created="Mon, 08 Mar 2021 15:20:35 GMT"/>
								<outline text="}" created="Mon, 08 Mar 2021 15:21:03 GMT"/>
								</outline>
							<outline text="}" created="Mon, 08 Mar 2021 15:20:30 GMT"/>
							</outline>
						<outline text="callback ();" created="Mon, 08 Mar 2021 15:22:15 GMT"/>
						<outline text="});" created="Mon, 08 Mar 2021 15:20:25 GMT"/>
						</outline>
					<outline text="}" created="Mon, 08 Mar 2021 15:19:56 GMT"/>
					</outline>
				<outline text="function convertFeedToMarkdown (theOutline) { //3/29/23 by DW" created="Wed, 29 Mar 2023 16:28:51 GMT">
					<outline text="var mdtext = &quot;&quot;;" created="Wed, 29 Mar 2023 16:31:09 GMT"/>
					<outline text="function add (s) {" created="Wed, 29 Mar 2023 16:32:16 GMT">
						<outline text="mdtext += s + &quot;\n\n&quot;;" created="Wed, 29 Mar 2023 16:32:25 GMT"/>
						<outline text="}" created="Wed, 29 Mar 2023 16:32:24 GMT"/>
						</outline>
					<outline text="theOutline.items.forEach (function (item) {" created="Wed, 29 Mar 2023 16:31:09 GMT">
						<outline text="if (item.pubDate !== undefined) {" created="Wed, 29 Mar 2023 16:34:00 GMT">
							<outline text="add (&quot;# &quot; + item.pubDate.toUTCString ());" created="Wed, 29 Mar 2023 16:31:42 GMT"/>
							<outline text="}" created="Wed, 29 Mar 2023 16:34:05 GMT"/>
							</outline>
						<outline text="if (item.title === undefined) {" created="Wed, 29 Mar 2023 14:43:53 GMT">
							<outline text="if (item.description !== undefined) {" created="Wed, 29 Mar 2023 14:43:53 GMT">
								<outline text="add (&quot;## &quot; + item.description);" created="Wed, 29 Mar 2023 14:33:12 GMT"/>
								<outline text="}" created="Wed, 29 Mar 2023 14:44:04 GMT"/>
								</outline>
							<outline text="}" created="Wed, 29 Mar 2023 14:44:04 GMT"/>
							</outline>
						<outline text="else {" created="Wed, 29 Mar 2023 16:41:50 GMT">
							<outline text="add (&quot;## &quot; + item.title);" created="Wed, 29 Mar 2023 14:33:12 GMT"/>
							<outline text="if (item.description !== undefined) {" created="Wed, 29 Mar 2023 14:43:53 GMT">
								<outline text="add (&quot;- &quot; + item.description);" created="Wed, 29 Mar 2023 14:33:12 GMT"/>
								<outline text="}" created="Wed, 29 Mar 2023 14:44:04 GMT"/>
								</outline>
							<outline text="}" created="Wed, 29 Mar 2023 16:41:52 GMT"/>
							</outline>
						<outline text="});" created="Wed, 29 Mar 2023 16:31:24 GMT"/>
						</outline>
					<outline text="return (mdtext);" created="Wed, 29 Mar 2023 16:38:59 GMT"/>
					<outline text="}" created="Wed, 29 Mar 2023 16:29:01 GMT"/>
					</outline>
				<outline text="" created="Thu, 18 May 2023 16:08:56 GMT"/>
				<outline text="function cleanDescription (desc) { //4/19/23 by DW" created="Wed, 19 Apr 2023 02:35:15 GMT">
					<outline text="if (utils.beginsWith (desc, &quot;&lt;p&gt;&quot;)) {" created="Wed, 19 Apr 2023 02:35:25 GMT">
						<outline text="desc = utils.stringDelete (desc, 1, 3);" created="Wed, 19 Apr 2023 02:35:49 GMT"/>
						<outline text="}" created="Wed, 19 Apr 2023 02:35:45 GMT"/>
						</outline>
					<outline text="if (utils.endsWith (desc, &quot;&lt;/p&gt;\n&quot;)) {" created="Wed, 19 Apr 2023 02:35:25 GMT">
						<outline text="desc = utils.stringMid (desc, 1, desc.length - 5);" created="Wed, 19 Apr 2023 02:35:49 GMT"/>
						<outline text="}" created="Wed, 19 Apr 2023 02:35:45 GMT"/>
						</outline>
					<outline text="return (desc);" created="Wed, 19 Apr 2023 02:36:40 GMT"/>
					<outline text="}" created="Wed, 19 Apr 2023 02:35:22 GMT"/>
					</outline>
				<outline text="function everySecond () {" created="Thu, 29 Apr 2021 21:20:46 GMT">
					<outline text="if (flStatsChanged) {" created="Sat, 01 May 2021 19:58:33 GMT">
						<outline text="flStatsChanged = false;" created="Sat, 01 May 2021 19:58:39 GMT"/>
						<outline text="fs.writeFile (config.fnameStats, utils.jsonStringify (stats), function (err) {" created="Sat, 01 May 2021 19:58:46 GMT">
							<outline text="});" created="Sat, 01 May 2021 19:59:14 GMT"/>
							</outline>
						<outline text="}" created="Sat, 01 May 2021 19:58:38 GMT"/>
						</outline>
					<outline text="}" created="Sat, 01 May 2021 19:58:31 GMT"/>
					</outline>
				<outline text="" created="Wed, 19 Apr 2023 02:07:04 GMT"/>
				<outline text="function handleHttpRequest (theRequest) {" created="Mon, 20 Jun 2022 15:06:20 GMT">
					<outline text="Changes" isComment="true" created="Mon, 20 Jun 2022 22:08:02 GMT">
						<outline text="6/20/22; 6:08:04 PM by DW" created="Mon, 20 Jun 2022 22:08:03 GMT">
							<outline text="We're changing &quot;url&quot; as a param to &quot;feedurl&quot; to make the examples easier to understand. " created="Mon, 20 Jun 2022 22:08:05 GMT"/>
							</outline>
						</outline>
					<outline text="var params = theRequest.params;" created="Wed, 08 Jun 2022 15:38:09 GMT"/>
					<outline text="function returnNotFound () {">
						<outline text="theRequest.httpReturn (404, &quot;text/plain&quot;, &quot;Not found.&quot;);"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnRedirect (url) {">
						<outline text="const code = 302;" created="Mon, 20 Jun 2022 16:15:04 GMT"/>
						<outline text="theRequest.httpReturn (code, &quot;text/plain&quot;, code + &quot; REDIRECT&quot;, {location: url});"/>
						<outline text="}"/>
						<outline text=""/>
						</outline>
					<outline text="function returnString (s) {">
						<outline text="theRequest.httpReturn (200, &quot;text/plain; charset=utf-8&quot;, s); //4/7/23 by DW"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnHtml (htmltext) {">
						<outline text="theRequest.httpReturn (200, &quot;text/html; charset=utf-8&quot;, htmltext); //6/13/22 by DW"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnOpml (opmltext) {">
						<outline text="theRequest.httpReturn (200, &quot;text/xml; charset=utf-8&quot;, opmltext); //6/13/22 by DW"/>
						<outline text="}"/>
						</outline>
					<outline text="" created="Wed, 19 Apr 2023 02:08:00 GMT"/>
					<outline text="function returnLinkblogDay (feedUrl, callback) {" created="Wed, 19 Apr 2023 02:08:00 GMT">
						<outline text="Changes" isComment="true" created="Wed, 19 Apr 2023 02:09:51 GMT">
							<outline text="4/18/23; 10:09:53 PM by DW" created="Wed, 19 Apr 2023 02:09:52 GMT">
								<outline text="I need basic linkblog rendering code for the Links page on scripting.com and for the nightly email. This is where I'm developing the code." created="Wed, 19 Apr 2023 02:09:53 GMT"/>
								</outline>
							</outline>
						<outline text="const theDay = new Date (); //get the linkblog html for today" created="Wed, 19 Apr 2023 02:18:19 GMT"/>
						<outline text="readFeed (feedUrl, function (err, theFeed) { " created="Sun, 12 Jun 2022 13:32:48 GMT">
							<outline text="if (err) {" created="Wed, 19 Apr 2023 02:11:14 GMT">
								<outline text="returnError (err);" created="Wed, 19 Apr 2023 02:11:17 GMT"/>
								<outline text="}" created="Wed, 19 Apr 2023 02:11:22 GMT"/>
								</outline>
							<outline text="else {" created="Wed, 19 Apr 2023 02:11:22 GMT">
								<outline text="var htmltext = &quot;&quot;;"/>
								<outline text="function add (s) {">
									<outline text="htmltext += s + &quot;\n&quot;;"/>
									<outline text="}"/>
									</outline>
								<outline text="var ctitems = 0;"/>
								<outline text="theFeed.items.forEach (function (item) {">
									<outline text="if (utils.sameDay (theDay, item.pubDate)) {">
										<outline text="var pubdatestring = new Date (item.pubDate).toLocaleTimeString ();"/>
										<outline text="" created="Fri, 13 Jan 2023 13:10:13 GMT"/>
										<outline text="var link = &quot;&quot;;" created="Fri, 13 Jan 2023 13:10:13 GMT"/>
										<outline text="if (typeof item.link == &quot;string&quot;) { //1/13/23 by DW" created="Fri, 13 Jan 2023 13:10:33 GMT">
											<outline text="link = &quot;&lt;a href=\&quot;&quot; + item.link + &quot;\&quot;&gt;&quot; + utils.getDomainFromUrl (item.link) + &quot;&lt;/a&gt;&quot;;"/>
											<outline text="}" created="Fri, 13 Jan 2023 13:10:50 GMT"/>
											</outline>
										<outline text="" created="Fri, 13 Jan 2023 13:10:14 GMT"/>
										<outline text="add (&quot;&lt;div class=\&quot;divLinkblogItem\&quot;&gt;&quot; + cleanDescription (item.description) + &quot; &quot; + link + &quot;&lt;/div&gt;&quot;);" created="Wed, 19 Apr 2023 02:32:29 GMT"/>
										<outline text="add (&quot;&lt;div class=\&quot;divLinkblogItem\&quot;&gt;&quot; + item.description + &quot; &quot; + link + &quot;&lt;/div&gt;&quot;);" isComment="true"/>
										<outline text="ctitems++;"/>
										<outline text="}"/>
										</outline>
									<outline text="});"/>
									</outline>
								<outline text="if (ctitems &gt; 0) {">
									<outline text="htmltext = &quot;&lt;h4&gt;Linkblog items for the day.&lt;/h4&gt;\n&quot; + htmltext;"/>
									<outline text="}"/>
									</outline>
								<outline text="callback (undefined, htmltext);"/>
								<outline text="}" created="Wed, 19 Apr 2023 02:11:24 GMT"/>
								</outline>
							<outline text="});" created="Wed, 19 Apr 2023 02:11:11 GMT"/>
							</outline>
						<outline text="}" created="Wed, 19 Apr 2023 02:08:24 GMT"/>
						</outline>
					<outline text="function returnLinkblogJson (feedUrl, callback) { //4/19/23 by DW" created="Wed, 19 Apr 2023 16:39:49 GMT">
						<outline text="Changes" isComment="true" created="Wed, 19 Apr 2023 16:41:32 GMT">
							<outline text="4/19/23; 12:41:35 PM by DW" created="Wed, 19 Apr 2023 16:41:34 GMT">
								<outline text="Return the format that old school is looking for when you're reading the linkblog.json file produced by Radio3. " created="Wed, 19 Apr 2023 16:41:35 GMT"/>
								</outline>
							</outline>
						<outline text="readFeed (feedUrl, function (err, theFeed) { " created="Sun, 12 Jun 2022 13:32:48 GMT">
							<outline text="if (err) {" created="Wed, 19 Apr 2023 02:11:14 GMT">
								<outline text="callback (err);" created="Wed, 19 Apr 2023 02:11:17 GMT"/>
								<outline text="}" created="Wed, 19 Apr 2023 02:11:22 GMT"/>
								</outline>
							<outline text="else {" created="Wed, 19 Apr 2023 02:11:22 GMT">
								<outline text="var daysArray = new Array ();" created="Wed, 19 Apr 2023 13:52:31 GMT"/>
								<outline text="theFeed.items.forEach (function (item) {" created="Wed, 19 Apr 2023 13:54:54 GMT">
									<outline text="const convertedItem = {" created="Wed, 19 Apr 2023 16:50:40 GMT">
										<outline text="text: cleanDescription (item.description)," created="Wed, 19 Apr 2023 16:50:56 GMT"/>
										<outline text="title: item.title," created="Wed, 19 Apr 2023 16:51:01 GMT"/>
										<outline text="link: item.link," created="Wed, 19 Apr 2023 16:51:05 GMT"/>
										<outline text="linkShort: &quot;&quot;," created="Wed, 19 Apr 2023 16:51:10 GMT"/>
										<outline text="whenLastEdit: item.pubDate," created="Wed, 19 Apr 2023 16:51:16 GMT"/>
										<outline text="flDirty: false," created="Wed, 19 Apr 2023 16:51:28 GMT"/>
										<outline text="when: item.pubDate" created="Wed, 19 Apr 2023 16:51:33 GMT"/>
										<outline text="};" created="Wed, 19 Apr 2023 16:50:43 GMT"/>
										</outline>
									<outline text="const pubDate = new Date (item.pubDate);" created="Wed, 19 Apr 2023 14:04:49 GMT"/>
									<outline text="const datestring = pubDate.toLocaleDateString (); //something like 4/19/2023" created="Wed, 19 Apr 2023 13:56:02 GMT"/>
									<outline text="var flfound = false;" created="Wed, 19 Apr 2023 16:46:12 GMT"/>
									<outline text="daysArray.forEach (function (theDay) {" created="Wed, 19 Apr 2023 16:45:03 GMT">
										<outline text="if (utils.sameDay (pubDate, theDay.when)) {" created="Wed, 19 Apr 2023 16:45:36 GMT">
											<outline text="flfound = true;" created="Wed, 19 Apr 2023 16:46:04 GMT"/>
											<outline text="theDay.jstruct.dayHistory.push (convertedItem);" created="Wed, 19 Apr 2023 16:49:37 GMT"/>
											<outline text="}" created="Wed, 19 Apr 2023 16:45:52 GMT"/>
											</outline>
										<outline text="});" created="Wed, 19 Apr 2023 16:45:31 GMT"/>
										</outline>
									<outline text="if (!flfound) {" created="Wed, 19 Apr 2023 16:47:08 GMT">
										<outline text="daysArray.push ({" created="Wed, 19 Apr 2023 16:47:17 GMT">
											<outline text="when: pubDate," created="Wed, 19 Apr 2023 16:47:36 GMT"/>
											<outline text="jstruct: {" created="Wed, 19 Apr 2023 16:47:44 GMT">
												<outline text="version: &quot;1.0&quot;," created="Wed, 19 Apr 2023 16:47:53 GMT"/>
												<outline text="when: new Date ()," created="Wed, 19 Apr 2023 16:47:58 GMT"/>
												<outline text="whenLastUpdate: new Date ()," created="Wed, 19 Apr 2023 16:48:13 GMT"/>
												<outline text="dayHistory: [convertedItem]" created="Wed, 19 Apr 2023 16:48:33 GMT"/>
												<outline text="}" created="Wed, 19 Apr 2023 16:47:47 GMT"/>
												</outline>
											<outline text="});" created="Wed, 19 Apr 2023 16:47:31 GMT"/>
											</outline>
										<outline text="}" created="Wed, 19 Apr 2023 16:47:12 GMT"/>
										</outline>
									<outline text="});" created="Wed, 19 Apr 2023 13:55:02 GMT"/>
									</outline>
								<outline text="callback (undefined, daysArray);" created="Wed, 19 Apr 2023 16:52:28 GMT"/>
								<outline text="}" created="Wed, 19 Apr 2023 02:11:24 GMT"/>
								</outline>
							<outline text="});" created="Wed, 19 Apr 2023 02:11:11 GMT"/>
							</outline>
						<outline text="}" created="Wed, 19 Apr 2023 16:40:00 GMT"/>
						</outline>
					<outline text="function returnLinkblogHtml (feedUrl, callback) { //4/20/23 by DW" created="Wed, 19 Apr 2023 16:39:49 GMT">
						<outline text="Changes" isComment="true" created="Wed, 19 Apr 2023 16:41:32 GMT">
							<outline text="4/19/23; 12:41:35 PM by DW" created="Wed, 19 Apr 2023 16:41:34 GMT">
								<outline text="Return the HTML that I show in the Links tab on scripting.com." created="Wed, 19 Apr 2023 16:41:35 GMT"/>
								</outline>
							</outline>
						<outline text="const firstLinkblogDay = new Date (&quot;April 17, 2023&quot;);" created="Wed, 19 Apr 2023 14:52:29 GMT"/>
						<outline text="" created="Thu, 20 Apr 2023 13:55:00 GMT"/>
						<outline text="function getDayTitle (when) {">
							<outline text="return (dateformat (when, &quot;dddd, mmmm d, yyyy&quot;));"/>
							<outline text="}"/>
							</outline>
						<outline text="" created="Thu, 20 Apr 2023 13:55:01 GMT"/>
						<outline text="function buildDaysTable (theFeed) {" created="Wed, 19 Apr 2023 13:52:07 GMT">
							<outline text="var daysTable = new Object ();" created="Wed, 19 Apr 2023 13:52:31 GMT"/>
							<outline text="theFeed.items.forEach (function (item) {" created="Wed, 19 Apr 2023 13:54:54 GMT">
								<outline text="const pubDate = new Date (item.pubDate);" created="Wed, 19 Apr 2023 14:04:49 GMT"/>
								<outline text="if (utils.dayGreaterThanOrEqual (pubDate, firstLinkblogDay)) {" created="Wed, 19 Apr 2023 14:53:43 GMT">
									<outline text="const datestring = pubDate.toLocaleDateString (); //something like 4/19/2023" created="Wed, 19 Apr 2023 13:56:02 GMT"/>
									<outline text="var bucket = daysTable [datestring];" created="Wed, 19 Apr 2023 13:58:14 GMT"/>
									<outline text="if (bucket === undefined) {" created="Wed, 19 Apr 2023 13:58:37 GMT">
										<outline text="daysTable [datestring] = new Array ();" created="Wed, 19 Apr 2023 13:58:47 GMT"/>
										<outline text="bucket = daysTable [datestring];" created="Wed, 19 Apr 2023 13:59:24 GMT"/>
										<outline text="}" created="Wed, 19 Apr 2023 13:58:43 GMT"/>
										</outline>
									<outline text="bucket.push (item);" created="Wed, 19 Apr 2023 13:59:35 GMT"/>
									<outline text="}" created="Wed, 19 Apr 2023 14:53:58 GMT"/>
									</outline>
								<outline text="});" created="Wed, 19 Apr 2023 13:55:02 GMT"/>
								</outline>
							<outline text="return (daysTable);" created="Wed, 19 Apr 2023 13:52:31 GMT"/>
							<outline text="}" created="Wed, 19 Apr 2023 13:52:11 GMT"/>
							</outline>
						<outline text="function appendDay (dayString, theDayItems) {">
							<outline text="Changes " isComment="true">
								<outline text="4/19/23; 10:28:13 AM by DW" created="Wed, 19 Apr 2023 14:28:13 GMT">
									<outline text="Adapt to the new reality." created="Wed, 19 Apr 2023 14:28:13 GMT"/>
									</outline>
								<outline text="9/11/17; 9:36:39 AM by DW">
									<outline text="Use divDayTitle to format the day title, so it agrees with the blog format."/>
									</outline>
								<outline text="5/28/17; 9:25:59 AM by DW">
									<outline text="Remove dependency on pagetable.homePageDateFormat."/>
									</outline>
								<outline text="10/15/14; 1:47:22 PM by DW">
									<outline text="urlSplitter doesn't do nice things with links that begin with a blank. It also shouldn't be possible for one badly formed item to kill the whole day. "/>
									</outline>
								</outline>
							<outline text="const when = new Date (dayString); //turn something like 4/19/2023 to a date object" created="Wed, 19 Apr 2023 14:29:43 GMT"/>
							<outline text="var daytext = &quot;&quot;, indentlevel = 0;"/>
							<outline text="" created="Thu, 20 Apr 2023 13:53:24 GMT"/>
							<outline text="function add (s) {" created="Wed, 19 Jun 2013 18:21:56 GMT" pgfnum="26656">
								<outline text="daytext += utils.filledString (&quot;\t&quot;, indentlevel) + s + &quot;\n&quot;;" created="Wed, 19 Jun 2013 18:22:33 GMT" pgfnum="26661"/>
								<outline text="}" created="Wed, 19 Jun 2013 18:22:01 GMT" pgfnum="26658"/>
								</outline>
							<outline text="add (&quot;&lt;div class=\&quot;divLinkblogDayTitle\&quot;&gt;&quot; + getDayTitle (when) + &quot;&lt;/div&gt;&quot;);"/>
							<outline text="add (&quot;&lt;div class=\&quot;divLinkblogDay\&quot;&gt;&quot;); indentlevel++;"/>
							<outline text="theDayItems.forEach (function (item) {" created="Wed, 19 Apr 2023 14:32:49 GMT">
								<outline text="var link = &quot;&quot;;" created="Fri, 13 Jan 2023 13:10:13 GMT"/>
								<outline text="if (typeof item.link == &quot;string&quot;) { //1/13/23 by DW" created="Fri, 13 Jan 2023 13:10:33 GMT">
									<outline text="link = &quot;&lt;a href=\&quot;&quot; + item.link + &quot;\&quot;&gt;&quot; + utils.getDomainFromUrl (item.link) + &quot;&lt;/a&gt;&quot;;"/>
									<outline text="}" created="Fri, 13 Jan 2023 13:10:50 GMT"/>
									</outline>
								<outline text="add (&quot;&lt;p&gt;&quot; + cleanDescription (item.description) + &quot; &quot; + link + &quot;&lt;/p&gt;&quot;); //4/18/23 by DW"/>
								<outline text="});" created="Wed, 19 Apr 2023 14:32:57 GMT"/>
								</outline>
							<outline text="add (&quot;&lt;/div&gt;&quot;); indentlevel--;"/>
							<outline text="return (daytext)"/>
							<outline text="}"/>
							</outline>
						<outline text="readFeed (feedUrl, function (err, theFeed) { " created="Sun, 12 Jun 2022 13:32:48 GMT">
							<outline text="if (err) {" created="Wed, 19 Apr 2023 02:11:14 GMT">
								<outline text="callback (err);" created="Wed, 19 Apr 2023 02:11:17 GMT"/>
								<outline text="}" created="Wed, 19 Apr 2023 02:11:22 GMT"/>
								</outline>
							<outline text="else {" created="Wed, 19 Apr 2023 02:11:22 GMT">
								<outline text="var daysTable = buildDaysTable (theFeed), htmltext = &quot;&quot;;" created="Wed, 19 Apr 2023 13:51:56 GMT"/>
								<outline text="for (var x in daysTable) {" created="Wed, 19 Apr 2023 14:26:35 GMT">
									<outline text="htmltext += appendDay (x, daysTable [x]);"/>
									<outline text="}" created="Wed, 19 Apr 2023 14:26:44 GMT"/>
									</outline>
								<outline text="callback (undefined, htmltext);" created="Wed, 19 Apr 2023 02:11:17 GMT"/>
								<outline text="}" created="Wed, 19 Apr 2023 02:11:24 GMT"/>
								</outline>
							<outline text="});" created="Wed, 19 Apr 2023 02:11:11 GMT"/>
							</outline>
						<outline text="}" created="Wed, 19 Apr 2023 16:40:00 GMT"/>
						</outline>
					<outline text="" created="Wed, 19 Apr 2023 02:08:00 GMT"/>
					<outline text="function returnError (jstruct) {">
						<outline text="theRequest.httpReturn (500, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnMailbox (err, theFeed) {" isComment="true" created="Sat, 18 Jun 2022 15:40:56 GMT">
						<outline text="function servePage (templatetext) {" created="Fri, 04 Feb 2022 20:59:16 GMT">
							<outline text="var pagetable = {">
								<outline text="productNameForDisplay: myProductName, "/>
								<outline text="version: myVersion,"/>
								<outline text="feedTitle: theFeed.title," created="Sat, 18 Jun 2022 15:17:18 GMT"/>
								<outline text="config: utils.jsonStringify ({})," created="Sat, 18 Jun 2022 15:59:49 GMT"/>
								<outline text="riverJsonText: utils.jsonStringify (theFeed)" created="Sat, 18 Jun 2022 15:52:00 GMT"/>
								<outline text="};"/>
								</outline>
							<outline text="var pagetext = utils.multipleReplaceAll (templatetext.toString (), pagetable, false, &quot;[%&quot;, &quot;%]&quot;);"/>
							<outline text="returnHtml (pagetext);"/>
							<outline text="}" created="Fri, 04 Feb 2022 21:02:43 GMT"/>
							</outline>
						<outline text="if (err) {" created="Sat, 18 Jun 2022 15:45:50 GMT">
							<outline text="returnError (err);" created="Sat, 18 Jun 2022 15:46:16 GMT"/>
							<outline text="}" created="Sat, 18 Jun 2022 15:45:52 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 18 Jun 2022 15:45:53 GMT">
							<outline text="request (config.urlMailboxTemplate, function (err, response, templatetext) {">
								<outline text="if (err) {" created="Sat, 18 Jun 2022 15:46:27 GMT">
									<outline text="returnError (err);" created="Sat, 18 Jun 2022 15:46:31 GMT"/>
									<outline text="}" created="Sat, 18 Jun 2022 15:46:34 GMT"/>
									</outline>
								<outline text="else {" created="Sat, 18 Jun 2022 15:46:36 GMT">
									<outline text="if (response.statusCode != 200) {">
										<outline text="returnError ({message: &quot;Can't view the feed mailbox because there was an error: code == &quot; + response.statusCode});" created="Sat, 18 Jun 2022 15:47:01 GMT"/>
										<outline text="}"/>
										</outline>
									<outline text="else {" created="Sat, 18 Jun 2022 15:47:44 GMT">
										<outline text="servePage (templatetext);" created="Fri, 04 Feb 2022 21:01:42 GMT"/>
										<outline text="}" created="Sat, 18 Jun 2022 15:47:45 GMT"/>
										</outline>
									<outline text="}" created="Sat, 18 Jun 2022 15:46:38 GMT"/>
									</outline>
								<outline text="});"/>
								</outline>
							<outline text="}" created="Sat, 18 Jun 2022 15:45:56 GMT"/>
							</outline>
						<outline text="}" created="Sat, 18 Jun 2022 15:41:12 GMT"/>
						</outline>
					<outline text="function returnData (jstruct) {">
						<outline text="if (jstruct === undefined) {">
							<outline text="jstruct = {};"/>
							<outline text="}"/>
							</outline>
						<outline text="theRequest.httpReturn (200, &quot;application/json; charset=utf-8&quot;, utils.jsonStringify (jstruct)); //6/13/22 by DW"/>
						<outline text="}"/>
						</outline>
					<outline text="function httpReturn (err, jstruct) {">
						<outline text="if (err) {">
							<outline text="returnError (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="returnData (jstruct);"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="function mailboxRedirect () {" created="Mon, 20 Jun 2022 16:10:32 GMT">
						<outline text="var newUrl = &quot;/?template=mailbox&quot;;" created="Mon, 20 Jun 2022 16:10:40 GMT"/>
						<outline text="if (params.url !== undefined) {" created="Wed, 22 Jun 2022 14:07:21 GMT">
							<outline text="params.feedurl = params.url;" created="Wed, 22 Jun 2022 14:07:38 GMT"/>
							<outline text="}" created="Wed, 22 Jun 2022 14:07:42 GMT"/>
							</outline>
						<outline text="if (params.feedurl !== undefined) {" created="Mon, 20 Jun 2022 16:10:57 GMT">
							<outline text="newUrl += &quot;&amp;feedurl=&quot; + encodeURIComponent (params.feedurl);" created="Mon, 20 Jun 2022 16:11:25 GMT"/>
							<outline text="}" created="Mon, 20 Jun 2022 16:11:47 GMT"/>
							</outline>
						<outline text="returnRedirect (newUrl);" created="Mon, 20 Jun 2022 16:11:51 GMT"/>
						<outline text="}" created="Mon, 20 Jun 2022 16:10:40 GMT"/>
						</outline>
					<outline text="" created="Mon, 20 Jun 2022 22:07:57 GMT"/>
					<outline text="if (params.url !== undefined) { //6/20/22 by DW" created="Mon, 20 Jun 2022 22:07:58 GMT">
						<outline text="params.feedurl = params.url;" created="Mon, 20 Jun 2022 22:08:58 GMT"/>
						<outline text="delete params.url;" created="Mon, 20 Jun 2022 22:09:52 GMT"/>
						<outline text="let newUrl = theRequest.lowerpath + &quot;?&quot; + buildParamList (params);" created="Mon, 20 Jun 2022 22:08:58 GMT"/>
						<outline text="returnRedirect (newUrl);" created="Mon, 20 Jun 2022 22:08:50 GMT"/>
						<outline text="}" created="Mon, 20 Jun 2022 22:08:36 GMT"/>
						</outline>
					<outline text="else {" created="Mon, 20 Jun 2022 22:13:56 GMT">
						<outline text="switch (theRequest.lowerpath) {">
							<outline text="case &quot;/&quot;: //6/20/22 by DW" created="Mon, 20 Jun 2022 15:04:37 GMT">
								<outline text="if (params.template === undefined) { //1/11/25 by DW -- don't use a template, just return the json" created="Sat, 11 Jan 2025 16:11:03 GMT">
									<outline text="readFeed (params.feedurl, httpReturn);" created="Sun, 12 Jun 2022 13:32:48 GMT"/>
									<outline text="}" created="Sat, 11 Jan 2025 16:11:15 GMT"/>
									</outline>
								<outline text="else {" created="Sat, 11 Jan 2025 16:11:15 GMT">
									<outline text="viewFeedInTemplate (params.feedurl, params.template, returnHtml);" created="Mon, 20 Jun 2022 15:04:54 GMT"/>
									<outline text="}" created="Sat, 11 Jan 2025 16:11:17 GMT"/>
									</outline>
								<outline text="break;" created="Mon, 20 Jun 2022 15:04:45 GMT"/>
								</outline>
							<outline text="case &quot;/stats&quot;: ">
								<outline text="returnData (stats); " created="Sun, 12 Jun 2022 13:32:48 GMT"/>
								<outline text="break;"/>
								</outline>
							<outline text="case &quot;/returnjson&quot;: ">
								<outline text="readFeed (params.feedurl, httpReturn);" created="Sun, 12 Jun 2022 13:32:48 GMT"/>
								<outline text="break;"/>
								</outline>
							<outline text="case &quot;/returnopml&quot;:" created="Fri, 19 Nov 2021 15:43:41 GMT">
								<outline text="readFeed (params.feedurl, function (err, theFeed) {" created="Sun, 12 Jun 2022 13:58:30 GMT">
									<outline text="if (err) {" created="Sun, 12 Jun 2022 13:58:48 GMT">
										<outline text="returnError (err);" created="Sun, 12 Jun 2022 13:58:50 GMT"/>
										<outline text="}" created="Sun, 12 Jun 2022 13:58:55 GMT"/>
										</outline>
									<outline text="else {" created="Sun, 12 Jun 2022 13:58:55 GMT">
										<outline text="returnOpml (reallysimple.convertFeedToOpml (theFeed));" created="Fri, 19 Nov 2021 17:10:05 GMT"/>
										<outline text="}" created="Sun, 12 Jun 2022 13:58:57 GMT"/>
										</outline>
									<outline text="});" created="Sun, 12 Jun 2022 13:58:44 GMT"/>
									</outline>
								<outline text="break;" created="Fri, 19 Nov 2021 15:43:48 GMT"/>
								</outline>
							<outline text="case &quot;/returnmarkdown&quot;: //3/29/23 by DW" created="Fri, 19 Nov 2021 15:43:41 GMT">
								<outline text="readFeed (params.feedurl, function (err, theFeed) {" created="Sun, 12 Jun 2022 13:58:30 GMT">
									<outline text="if (err) {" created="Sun, 12 Jun 2022 13:58:48 GMT">
										<outline text="returnError (err);" created="Sun, 12 Jun 2022 13:58:50 GMT"/>
										<outline text="}" created="Sun, 12 Jun 2022 13:58:55 GMT"/>
										</outline>
									<outline text="else {" created="Sun, 12 Jun 2022 13:58:55 GMT">
										<outline text="returnString (convertFeedToMarkdown (theFeed));" created="Fri, 19 Nov 2021 17:10:05 GMT"/>
										<outline text="}" created="Sun, 12 Jun 2022 13:58:57 GMT"/>
										</outline>
									<outline text="});" created="Sun, 12 Jun 2022 13:58:44 GMT"/>
									</outline>
								<outline text="break;" created="Fri, 19 Nov 2021 15:43:48 GMT"/>
								</outline>
							<outline text="case &quot;/returnmailbox&quot;: //6/18/22 by DW" created="Sat, 18 Jun 2022 15:38:38 GMT">
								<outline text="mailboxRedirect ();" created="Mon, 20 Jun 2022 16:09:50 GMT"/>
								<outline text="break;" created="Sat, 18 Jun 2022 15:38:46 GMT"/>
								</outline>
							<outline text="case &quot;/returnlinkblogday&quot;: //4/18/23 by DW">
								<outline text="returnLinkblogDay (params.feedurl, function (err, htmltext) {" created="Sun, 12 Jun 2022 13:32:48 GMT">
									<outline text="if (err) {" created="Wed, 19 Apr 2023 02:19:57 GMT">
										<outline text="returnError (err);" created="Wed, 19 Apr 2023 02:19:59 GMT"/>
										<outline text="}" created="Wed, 19 Apr 2023 02:20:03 GMT"/>
										</outline>
									<outline text="else {" created="Wed, 19 Apr 2023 02:20:04 GMT">
										<outline text="returnHtml (htmltext);" created="Wed, 19 Apr 2023 02:20:05 GMT"/>
										<outline text="}" created="Wed, 19 Apr 2023 02:20:09 GMT"/>
										</outline>
									<outline text="});" created="Wed, 19 Apr 2023 02:20:10 GMT"/>
									</outline>
								<outline text="break;"/>
								</outline>
							<outline text="case &quot;/returnlinkblogjson&quot;: //4/19/23 by DW">
								<outline text="returnLinkblogJson (params.feedurl, httpReturn);" created="Sun, 12 Jun 2022 13:32:48 GMT"/>
								<outline text="break;"/>
								</outline>
							<outline text="case &quot;/returnlinkbloghtml&quot;: //4/20/23 by DW">
								<outline text="returnLinkblogHtml (params.feedurl, function (err, htmltext) {" created="Sun, 12 Jun 2022 13:32:48 GMT">
									<outline text="if (err) {" created="Wed, 19 Apr 2023 02:19:57 GMT">
										<outline text="returnError (err);" created="Wed, 19 Apr 2023 02:19:59 GMT"/>
										<outline text="}" created="Wed, 19 Apr 2023 02:20:03 GMT"/>
										</outline>
									<outline text="else {" created="Wed, 19 Apr 2023 02:20:04 GMT">
										<outline text="returnHtml (htmltext);" created="Wed, 19 Apr 2023 02:20:05 GMT"/>
										<outline text="}" created="Wed, 19 Apr 2023 02:20:09 GMT"/>
										</outline>
									<outline text="});" created="Thu, 20 Apr 2023 13:59:11 GMT"/>
									</outline>
								<outline text="break;"/>
								</outline>
							<outline text="default:" created="Wed, 08 Jun 2022 15:37:23 GMT">
								<outline text="returnNotFound ();"/>
								<outline text="break;"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="}" created="Mon, 20 Jun 2022 22:13:58 GMT"/>
						</outline>
					<outline text="}" created="Mon, 20 Jun 2022 22:07:16 GMT"/>
					</outline>
				<outline text="" created="Wed, 08 Jun 2022 15:43:34 GMT"/>
				<outline text="readConfig (config.fnameStats, stats, function () {" created="Sun, 12 Jun 2022 22:43:01 GMT">
					<outline text="stats.ctLaunches++;" created="Thu, 06 May 2021 13:42:48 GMT"/>
					<outline text="stats.whenLastLaunch = new Date ();" created="Thu, 06 May 2021 13:42:54 GMT"/>
					<outline text="statsChanged ();" created="Tue, 04 May 2021 16:23:20 GMT"/>
					<outline text="davehttp.start (config, handleHttpRequest)"/>
					<outline text="setInterval (everySecond, 1000); "/>
					<outline text="});" created="Sun, 12 Jun 2022 22:43:20 GMT"/>
					</outline>
				</outline>
			<outline text="docs/templates.md" created="Wed, 22 Jun 2022 14:38:25 GMT">
				<outline text="# How feeder templates work" created="Wed, 22 Jun 2022 14:38:40 GMT">
					<outline text="The basic function of &lt;a href=&quot;https://github.com/scripting/feeder&quot;&gt;feeder&lt;/a&gt; is to provide an &lt;a href=&quot;http://feeder.scripting.com/returnjson?feedurl=https%3A%2F%2Frss.nytimes.com%2Fservices%2Fxml%2Frss%2Fnyt%2FTheater.xml&quot;&gt;HTTP interface&lt;/a&gt; to the &lt;a href=&quot;https://github.com/scripting/reallysimple&quot;&gt;reallysimple&lt;/a&gt; package, so you can access its functionality from a browser-based app without having to run a server. " created="Wed, 22 Jun 2022 14:38:45 GMT"/>
					<outline text="You can also run the contents of a reallysimple request through a template, which is just a web page, which has the result of the request as a local object you can use JavaScript to render." created="Wed, 22 Jun 2022 14:39:45 GMT"/>
					<outline text="This doc walks you through the Hello World template first, it's a tour of the basic features, and then the Titled Items template that works with the reallysimple object in code. " created="Wed, 22 Jun 2022 14:40:50 GMT"/>
					</outline>
				<outline text="### The Hello World template" created="Wed, 22 Jun 2022 14:41:21 GMT">
					<outline text="This is the &lt;a href=&quot;https://github.com/scripting/feeder/blob/main/templates/helloworld.html&quot;&gt;template&lt;/a&gt;." created="Wed, 22 Jun 2022 14:41:31 GMT"/>
					<outline text="This is how you invoke it:" created="Wed, 22 Jun 2022 14:41:58 GMT">
						<outline text="&lt;a href=&quot;http://feeder.scripting.com/?template=helloworld&amp;feedurl=https://news.ycombinator.com/rss&quot;&gt;http://feeder.scripting.com/?template=helloworld&amp;feedurl=https://news.ycombinator.com/rss&lt;/a&gt;" created="Wed, 22 Jun 2022 14:42:05 GMT"/>
						</outline>
					<outline text="The template refers to 3 macros which are filled in by the feeder app serving it." created="Wed, 22 Jun 2022 14:45:56 GMT">
						<outline text="1. [%feedTitle%] -- the title of the feed, displayed in the &amp;lt;title&gt; element in the HTML." created="Wed, 22 Jun 2022 14:46:39 GMT"/>
						<outline text="2. [%config%] -- configuration info from the server, assigned to a local variable &lt;i&gt;config.&lt;/i&gt;" created="Wed, 22 Jun 2022 14:47:09 GMT"/>
						<outline text="3. [%feedJsonText%] -- the JSON object returned by the reallysimple package, assigned to a local variable, &lt;i&gt;theFeed.&lt;/i&gt;" created="Wed, 22 Jun 2022 14:47:56 GMT"/>
						</outline>
					<outline text="From there, the primary job of the template is to display and allow the user to interact with the contents of the feed, which is accessed locally through &lt;i&gt;theFeed,&lt;/i&gt; which is just a JavaScript object. " created="Wed, 22 Jun 2022 14:49:35 GMT"/>
					<outline text="&lt;i&gt;config&lt;/i&gt; is there mostly for the future, if there's information we might want to send to all templates from the server that's hosting the template. Initially it just has the name of the feeder app and its version. " created="Wed, 22 Jun 2022 15:09:16 GMT"/>
					<outline text="The Hello World app just displays what's in theFeed by stringifying it and assigning it to the &lt;i&gt;idFeedInfo&lt;/i&gt; DOM object. " created="Wed, 22 Jun 2022 14:48:07 GMT"/>
					</outline>
				<outline text="### The Mailbox template" created="Fri, 15 Jul 2022 13:24:05 GMT">
					<outline text="Here's the &lt;a href=&quot;https://github.com/scripting/feeder/blob/main/templates/mailbox.html&quot;&gt;template&lt;/a&gt;." created="Fri, 15 Jul 2022 13:25:13 GMT"/>
					<outline text="It displays the contents in a feed in the common mailbox format used by readers such as Feedly and NetNewsWire. " created="Fri, 15 Jul 2022 13:28:34 GMT"/>
					<outline text="This is how you invoke it:" created="Wed, 22 Jun 2022 14:41:58 GMT">
						<outline text="&lt;a href=&quot;http://feeder.scripting.com/?template=mailbox&amp;feedurl=https://johnnaughton.substack.com/feed&quot;&gt;http://feeder.scripting.com/?template=mailbox&amp;feedurl=https://johnnaughton.substack.com/feed&lt;/a&gt;" created="Wed, 22 Jun 2022 14:42:05 GMT"/>
						</outline>
					<outline text="The mailbox form works well with feeds with lots of titled longform posts, not so well with items that don't have titles, or are short." created="Fri, 15 Jul 2022 13:34:32 GMT"/>
					</outline>
				<outline text="### The Titled Items template" created="Wed, 22 Jun 2022 14:54:31 GMT">
					<outline text="Here's the &lt;a href=&quot;https://github.com/scripting/feeder/blob/main/templates/titleditems.html&quot;&gt;template&lt;/a&gt;." created="Wed, 22 Jun 2022 14:41:31 GMT"/>
					<outline text="This template &lt;a href=&quot;http://scripting.com/images/2022/07/15/memexScreenFull.png&quot;&gt;displays&lt;/a&gt; items that have titles and links to their &amp;lt;link&gt; value, if it has one. " created="Wed, 22 Jun 2022 14:54:41 GMT"/>
					<outline text="This is how you invoke it:" created="Wed, 22 Jun 2022 14:41:58 GMT">
						<outline text="&lt;a href=&quot;http://feeder.scripting.com/?template=titleditems&amp;feedurl=https://news.ycombinator.com/rss&quot;&gt;http://feeder.scripting.com/?template=titleditems&amp;feedurl=https://news.ycombinator.com/rss&lt;/a&gt;" created="Wed, 22 Jun 2022 14:42:05 GMT"/>
						</outline>
					<outline text="Here's the code that builds the list." created="Wed, 22 Jun 2022 15:18:03 GMT">
						<outline text="&lt;%includeExample (&quot;titledItemExample&quot;)%&gt;"/>
						</outline>
					<outline text="This is the punchline for the whole &lt;a href=&quot;https://github.com/scripting/reallysimple&quot;&gt;reallysimple&lt;/a&gt; stack up to this point. The goal was to make using info from a feed as simple as working with a JavaScript object. At this point you have the full power of JavaScript and the web to work with the info in a feed. "/>
					</outline>
				<outline text="### The JSONify Feed template" created="Thu, 23 Jun 2022 15:17:49 GMT">
					<outline text="Here's the &lt;a href=&quot;https://github.com/scripting/feeder/blob/main/templates/jsonify.html&quot;&gt;template&lt;/a&gt;." created="Wed, 22 Jun 2022 14:41:31 GMT"/>
					<outline text="This is how you invoke it:" created="Thu, 23 Jun 2022 15:19:43 GMT">
						<outline text="&lt;a href=&quot;http://feeder.scripting.com/?template=jsonify&amp;feedurl=http://scripting.com/rss.xml&quot;&gt;http://feeder.scripting.com/?template=jsonify&amp;feedurl=http://scripting.com/rss.xml&lt;/a&gt;" created="Thu, 23 Jun 2022 15:44:04 GMT"/>
						</outline>
					<outline text="It displays the JSONified feed in a nice Concord outline. The top level of the object is expanded. The list of items is collapsed. It's a fun way to browse the JSON that the &lt;a href=&quot;https://github.com/scripting/reallysimple&quot;&gt;reallysimple&lt;/a&gt; package generates." created="Thu, 23 Jun 2022 15:18:34 GMT"/>
					</outline>
				<outline text="### Questions, comments" created="Wed, 22 Jun 2022 16:51:11 GMT">
					<outline text="Please post an item in &lt;a href=&quot;https://github.com/scripting/feeder/issues/2&quot;&gt;this thread&lt;/a&gt;. " created="Wed, 22 Jun 2022 16:51:15 GMT"/>
					</outline>
				</outline>
			<outline text="templates/helloworld.html" created="Mon, 20 Jun 2022 21:56:20 GMT">
				<outline text="&lt;html&gt;" created="Mon, 20 Jun 2022 21:56:34 GMT">
					<outline text="&lt;head&gt;" created="Mon, 20 Jun 2022 21:56:34 GMT">
						<outline text="&lt;title&gt;[%feedTitle%]&lt;/title&gt;"/>
						<outline text="&lt;script src=&quot;https://code.jquery.com/jquery-1.12.4.min.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;style&gt;" created="Tue, 21 Jun 2022 16:23:34 GMT">
							<outline text=".divPageBody {">
								<outline text="width: 85%;"/>
								<outline text="margin-top: 50px;"/>
								<outline text="margin-left: auto;"/>
								<outline text="margin-right: auto;"/>
								<outline text="margin-bottom: 400px;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divFeedInfo {" created="Tue, 21 Jun 2022 16:24:25 GMT">
								<outline text="border: 1px solid silver;" created="Tue, 21 Jun 2022 16:24:35 GMT"/>
								<outline text="padding: 3px;" created="Tue, 21 Jun 2022 16:25:08 GMT"/>
								<outline text="overflow: scroll;" created="Tue, 21 Jun 2022 16:26:16 GMT"/>
								<outline text="}" created="Tue, 21 Jun 2022 16:24:32 GMT"/>
								</outline>
							<outline text="&lt;/style&gt;" created="Tue, 21 Jun 2022 16:23:38 GMT"/>
							</outline>
						<outline text="&lt;script&gt;">
							<outline text="const config = [%config%];"/>
							<outline text="const theFeed = [%feedJsonText%];"/>
							<outline text="" created="Tue, 21 Jun 2022 16:19:02 GMT"/>
							<outline text="function startup () {" created="Tue, 21 Jun 2022 16:19:02 GMT">
								<outline text="console.log (config.productName + &quot; v&quot; + config.version);" created="Tue, 21 Jun 2022 15:54:30 GMT"/>
								<outline text="$(&quot;#idFeedInfo&quot;).text (JSON.stringify (theFeed, undefined, 4));" created="Tue, 21 Jun 2022 16:14:42 GMT"/>
								<outline text="}" created="Tue, 21 Jun 2022 16:19:08 GMT"/>
								</outline>
							<outline text="&lt;/script&gt;"/>
							</outline>
						<outline text="&lt;/head&gt;" created="Mon, 20 Jun 2022 21:56:39 GMT"/>
						</outline>
					<outline text="&lt;body&gt;" created="Mon, 20 Jun 2022 21:56:34 GMT">
						<outline text="&lt;div class=&quot;divPageBody&quot;&gt;" created="Tue, 21 Jun 2022 16:22:25 GMT">
							<outline text="&lt;h1&gt;Hello World&lt;/h1&gt;" created="Tue, 21 Jun 2022 15:26:59 GMT"/>
							<outline text="&lt;h4&gt;This is a very simple bare-bones template for the feeder app. More info &lt;a href=&quot;https://github.com/scripting/feeder/blob/main/docs/templates.md#the-hello-world-template&quot;&gt;here&lt;/a&gt;.&lt;/h4&gt;" created="Tue, 21 Jun 2022 16:26:53 GMT"/>
							<outline text="&lt;pre class=&quot;divFeedInfo&quot; id=&quot;idFeedInfo&quot;&gt;" created="Tue, 21 Jun 2022 15:57:29 GMT">
								<outline text="&lt;/pre&gt;" created="Tue, 21 Jun 2022 15:57:42 GMT"/>
								</outline>
							<outline text="&lt;script&gt;">
								<outline text="$(document).ready (function () {">
									<outline text="startup ();" created="Wed, 30 Oct 2013 15:20:06 GMT" pgfnum="30656"/>
									<outline text="});"/>
									</outline>
								<outline text="&lt;/script&gt;"/>
								</outline>
							<outline text="&lt;/div&gt;" created="Tue, 21 Jun 2022 16:22:54 GMT"/>
							</outline>
						<outline text="&lt;/body&gt;" created="Mon, 20 Jun 2022 21:56:39 GMT"/>
						</outline>
					<outline text="&lt;/html&gt;" created="Mon, 20 Jun 2022 21:56:39 GMT"/>
					</outline>
				</outline>
			<outline text="templates/titleditems.html" created="Mon, 20 Jun 2022 21:56:20 GMT">
				<outline text="&lt;html&gt;" created="Mon, 20 Jun 2022 21:56:34 GMT">
					<outline text="&lt;head&gt;" created="Mon, 20 Jun 2022 21:56:34 GMT">
						<outline text="&lt;title&gt;Titled Items: [%feedTitle%]&lt;/title&gt;"/>
						<outline text="&lt;script src=&quot;https://code.jquery.com/jquery-1.12.4.min.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;style&gt;" created="Tue, 21 Jun 2022 16:23:34 GMT">
							<outline text=".divPageBody {">
								<outline text="width: 85%;"/>
								<outline text="margin-top: 50px;"/>
								<outline text="margin-left: auto;"/>
								<outline text="margin-right: auto;"/>
								<outline text="margin-bottom: 400px;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divItemList {" isComment="true" created="Tue, 21 Jun 2022 16:24:25 GMT">
								<outline text="border: 1px solid silver;" created="Tue, 21 Jun 2022 16:24:35 GMT"/>
								<outline text="padding: 3px;" created="Tue, 21 Jun 2022 16:25:08 GMT"/>
								<outline text="overflow: scroll;" created="Tue, 21 Jun 2022 16:26:16 GMT"/>
								<outline text="}" created="Tue, 21 Jun 2022 16:24:32 GMT"/>
								</outline>
							<outline text=".divItemList li {" created="Tue, 21 Jun 2022 16:24:25 GMT">
								<outline text="margin-bottom: 10px;" created="Wed, 22 Jun 2022 15:15:06 GMT"/>
								<outline text="}" created="Tue, 21 Jun 2022 16:24:32 GMT"/>
								</outline>
							<outline text="&lt;/style&gt;" created="Tue, 21 Jun 2022 16:23:38 GMT"/>
							</outline>
						<outline text="&lt;script&gt;">
							<outline text="const config = [%config%];"/>
							<outline text="const theFeed = [%feedJsonText%];"/>
							<outline text="" created="Tue, 21 Jun 2022 16:19:02 GMT"/>
							<outline text="function viewTitledItems () {" created="Wed, 22 Jun 2022 15:16:47 GMT">
								<outline text="var htmltext = &quot;&quot;;" created="Wed, 22 Jun 2022 15:03:16 GMT"/>
								<outline text="function add (s) {" created="Wed, 22 Jun 2022 15:02:47 GMT">
									<outline text="htmltext += s + &quot;\n&quot;;" created="Wed, 22 Jun 2022 15:02:55 GMT"/>
									<outline text="}" created="Wed, 22 Jun 2022 15:02:54 GMT"/>
									</outline>
								<outline text="add (&quot;&lt;ul&gt;&quot;); " created="Wed, 22 Jun 2022 15:03:49 GMT"/>
								<outline text="theFeed.items.forEach (function (item) {" created="Wed, 22 Jun 2022 14:59:21 GMT">
									<outline text="if (item.title !== undefined) {" created="Wed, 22 Jun 2022 14:59:51 GMT">
										<outline text="var link = item.title;" created="Wed, 22 Jun 2022 15:03:35 GMT"/>
										<outline text="if (item.link !== undefined) {" created="Wed, 22 Jun 2022 15:04:32 GMT">
											<outline text="link = &quot;&lt;a href=\&quot;&quot; + item.link + &quot;\&quot;&gt;&quot; + link + &quot;&lt;/a&gt;&quot;;" created="Wed, 22 Jun 2022 15:04:41 GMT"/>
											<outline text="}" created="Wed, 22 Jun 2022 15:04:38 GMT"/>
											</outline>
										<outline text="add (&quot;&lt;li&gt;&quot; + link + &quot;&lt;/li&gt;&quot;);" created="Wed, 22 Jun 2022 15:05:12 GMT"/>
										<outline text="}" created="Wed, 22 Jun 2022 15:00:01 GMT"/>
										</outline>
									<outline text="});" created="Wed, 22 Jun 2022 14:59:43 GMT"/>
									</outline>
								<outline text="add (&quot;&lt;/ul&gt;&quot;); " created="Wed, 22 Jun 2022 15:03:49 GMT"/>
								<outline text="return (htmltext);" created="Wed, 22 Jun 2022 15:17:09 GMT"/>
								<outline text="}" created="Wed, 22 Jun 2022 15:16:51 GMT"/>
								</outline>
							<outline text="function startup () {" created="Tue, 21 Jun 2022 16:19:02 GMT">
								<outline text="console.log (&quot;startup&quot;);" created="Tue, 21 Jun 2022 15:54:30 GMT"/>
								<outline text="$(&quot;#idItemList&quot;).html (viewTitledItems ());" created="Tue, 21 Jun 2022 16:14:42 GMT"/>
								<outline text="}" created="Tue, 21 Jun 2022 16:19:08 GMT"/>
								</outline>
							<outline text="&lt;/script&gt;"/>
							</outline>
						<outline text="&lt;/head&gt;" created="Mon, 20 Jun 2022 21:56:39 GMT"/>
						</outline>
					<outline text="&lt;body&gt;" created="Mon, 20 Jun 2022 21:56:34 GMT">
						<outline text="&lt;div class=&quot;divPageBody&quot;&gt;" created="Tue, 21 Jun 2022 16:22:25 GMT">
							<outline text="&lt;h1&gt;The &lt;i&gt;Titled Items&lt;/i&gt; template&lt;/h1&gt;" created="Tue, 21 Jun 2022 15:26:59 GMT"/>
							<outline text="&lt;h4&gt;This is a very simple template for the feeder app. More info &lt;a href=&quot;https://github.com/scripting/feeder/blob/main/docs/templates.md#the-titled-items-template&quot;&gt;here&lt;/a&gt;.&lt;/h4&gt;" created="Tue, 21 Jun 2022 16:26:53 GMT"/>
							<outline text="&lt;div class=&quot;divItemList&quot; id=&quot;idItemList&quot;&gt;" created="Tue, 21 Jun 2022 15:57:29 GMT">
								<outline text="&lt;/div&gt;" created="Tue, 21 Jun 2022 15:57:42 GMT"/>
								</outline>
							<outline text="&lt;script&gt;">
								<outline text="$(document).ready (function () {">
									<outline text="startup ();" created="Wed, 30 Oct 2013 15:20:06 GMT" pgfnum="30656"/>
									<outline text="});"/>
									</outline>
								<outline text="&lt;/script&gt;"/>
								</outline>
							<outline text="&lt;/div&gt;" created="Tue, 21 Jun 2022 16:22:54 GMT"/>
							</outline>
						<outline text="&lt;/body&gt;" created="Mon, 20 Jun 2022 21:56:39 GMT"/>
						</outline>
					<outline text="&lt;/html&gt;" created="Mon, 20 Jun 2022 21:56:39 GMT"/>
					</outline>
				</outline>
			<outline text="templates/jsonify.html" created="Thu, 23 Jun 2022 15:02:24 GMT">
				<outline text="&lt;html&gt;">
					<outline text="&lt;head&gt;">
						<outline text="&lt;title&gt;JSONify Feed: [%feedTitle%]&lt;/title&gt;"/>
						<outline text="&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;"/>
						<outline text="&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;"/>
						<outline text="&lt;%basicIncludes2%&gt;"/>
						<outline text="&lt;script src=&quot;//s3.amazonaws.com/scripting.com/code/concord/testing/3.0.6/concord.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;link rel=&quot;stylesheet&quot; href=&quot;//s3.amazonaws.com/scripting.com/code/concord/testing/3.0.6/concordstyles.css&quot;/&gt;"/>
						<outline text="&lt;script src=&quot;//s3.amazonaws.com/fargo.io/code/shared/outliner.js&quot;&gt;&lt;/script&gt;" created="Thu, 08 May 2014 14:04:18 GMT" pgfnum="41269"/>
						<outline text="&lt;script src=&quot;//s3.amazonaws.com/fargo.io/code/shared/xml.js&quot;&gt;&lt;/script&gt;" created="Thu, 08 May 2014 14:04:18 GMT" pgfnum="41269"/>
						<outline text="&lt;script src=&quot;//s3.amazonaws.com/fargo.io/code/keypress.js&quot; /&gt;&lt;/script&gt;"/>
						<outline text="&lt;style&gt;" created="Thu, 23 Jun 2022 15:06:16 GMT">
							<outline text="body {">
								<outline text="font-family: Ubuntu;"/>
								<outline text="font-size: 18px;"/>
								<outline text="background-color: whitesmoke;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divPageBody {">
								<outline text="width: 80%;"/>
								<outline text="margin-top: 40px;"/>
								<outline text="margin-left: auto;"/>
								<outline text="margin-right: auto;"/>
								<outline text="}"/>
								</outline>
							<outline text="h1, h4 {" created="Thu, 23 Jun 2022 15:24:36 GMT">
								<outline text="margin-bottom: 15px;" created="Thu, 23 Jun 2022 15:24:40 GMT"/>
								<outline text="}" created="Thu, 23 Jun 2022 15:24:45 GMT"/>
								</outline>
							<outline text=".divOutlineContainer {" created="Thu, 23 Jun 2022 15:25:33 GMT">
								<outline text="border: 1px solid silver;" created="Thu, 23 Jun 2022 15:25:40 GMT"/>
								<outline text="background-color: white;" created="Thu, 23 Jun 2022 15:25:46 GMT"/>
								<outline text="padding: 4px;" created="Thu, 23 Jun 2022 15:26:03 GMT"/>
								<outline text="overflow: scroll;" created="Thu, 23 Jun 2022 15:26:23 GMT"/>
								<outline text="}" created="Thu, 23 Jun 2022 15:25:36 GMT"/>
								</outline>
							<outline text="&lt;/style&gt;" created="Thu, 23 Jun 2022 15:06:24 GMT"/>
							</outline>
						<outline text="&lt;script&gt;" created="Thu, 23 Jun 2022 15:06:27 GMT">
							<outline text="const config = [%config%];"/>
							<outline text="const theFeed = [%feedJsonText%];"/>
							<outline text="" created="Thu, 23 Jun 2022 15:10:53 GMT"/>
							<outline text="var appPrefs = {" created="Thu, 23 Jun 2022 15:10:54 GMT">
								<outline text="outlineFontSize: 16," created="Thu, 23 Jun 2022 15:28:43 GMT"/>
								<outline text="outlineLineHeight: 24" created="Thu, 23 Jun 2022 15:30:48 GMT"/>
								<outline text="};" created="Thu, 23 Jun 2022 15:10:57 GMT"/>
								</outline>
							<outline text="" created="Thu, 23 Jun 2022 15:08:27 GMT"/>
							<outline text="function encodeText (theFeed) {" created="Wed, 08 Jun 2022 19:04:22 GMT">
								<outline text="theFeed.items.forEach (function (item) {" created="Wed, 08 Jun 2022 19:05:29 GMT">
									<outline text="function encode (name) {" isComment="true" created="Wed, 08 Jun 2022 19:05:59 GMT">
										<outline text="item [name] = encodeXml (item [name]);" created="Wed, 08 Jun 2022 19:06:22 GMT"/>
										<outline text="}" created="Wed, 08 Jun 2022 19:06:17 GMT"/>
										</outline>
									<outline text="encode (&quot;description&quot;);" isComment="true" created="Wed, 08 Jun 2022 19:05:47 GMT"/>
									<outline text="item.description = replaceAll (item.description, &quot;&lt;img &quot;, &quot;&amp;lt;img &quot;);" created="Wed, 08 Jun 2022 19:09:05 GMT"/>
									<outline text="});" created="Wed, 08 Jun 2022 19:05:45 GMT"/>
									</outline>
								<outline text="}" created="Wed, 08 Jun 2022 19:04:32 GMT"/>
								</outline>
							<outline text="function startup () {" created="Mon, 06 Jun 2022 15:20:24 GMT">
								<outline text="console.log (&quot;startup: it took &quot; + config.ctSecs + &quot; secs to read the feed.&quot;);" created="Mon, 06 Jun 2022 15:21:52 GMT"/>
								<outline text="opInitOutliner (initialOpmltext, false, true);"/>
								<outline text="encodeText (theFeed);" created="Wed, 08 Jun 2022 19:03:51 GMT"/>
								<outline text="opInsertObject (undefined, theFeed, right);" created="Sun, 09 May 2021 15:33:18 GMT"/>
								<outline text="opExpand (1)" created="Wed, 08 Jun 2022 16:25:49 GMT"/>
								<outline text="opFirstSummit ();" created="Wed, 08 Jun 2022 16:23:51 GMT"/>
								<outline text="opSetLineText (config.feedUrl);" created="Wed, 08 Jun 2022 16:23:57 GMT"/>
								<outline text="}" created="Mon, 06 Jun 2022 15:21:50 GMT"/>
								</outline>
							<outline text="&lt;/script&gt;" created="Thu, 23 Jun 2022 15:06:30 GMT"/>
							</outline>
						<outline text="&lt;/head&gt;"/>
						</outline>
					<outline text="&lt;body&gt;">
						<outline text="&lt;div class=&quot;divPageBody&quot;&gt;">
							<outline text="&lt;h1&gt;The &lt;i&gt;JSONify Feed&lt;/i&gt; template&lt;/h1&gt;"/>
							<outline text="&lt;h4&gt;A very simple template for the feeder app. More info &lt;a href=&quot;https://github.com/scripting/feeder/blob/main/docs/templates.md#the-jsonify-feed-template&quot;&gt;here&lt;/a&gt;.&lt;/h4&gt;" created="Tue, 21 Jun 2022 16:26:53 GMT"/>
							<outline text="&lt;div class=&quot;divOutlineContainer&quot;&gt;">
								<outline text="&lt;div id=&quot;outliner&quot;&gt;">
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;/div&gt;"/>
								</outline>
							<outline text="&lt;/div&gt;"/>
							</outline>
						<outline text="&lt;script&gt;">
							<outline text="$(document).ready (function () {">
								<outline text="startup ();" created="Wed, 30 Oct 2013 15:20:06 GMT" pgfnum="30656"/>
								<outline text="});"/>
								</outline>
							<outline text="&lt;/script&gt;"/>
							</outline>
						<outline text="&lt;/body&gt;"/>
						</outline>
					<outline text="&lt;/html&gt;"/>
					</outline>
				</outline>
			<outline text="readme.md" created="Sun, 12 Jun 2022 15:35:51 GMT">
				<outline text="# feeder" created="Sun, 12 Jun 2022 15:35:53 GMT">
					<outline text="A Node server app that hooks the &lt;a href=&quot;https://github.com/scripting/reallysimple&quot;&gt;reallysimple&lt;/a&gt; package up to the web." created="Sun, 12 Jun 2022 15:36:02 GMT"/>
					</outline>
				<outline text="### Why?" created="Sun, 12 Jun 2022 15:37:49 GMT">
					<outline text="To provide service to &lt;a href=&quot;http://drummer.scripting.com/&quot;&gt;Drummer&lt;/a&gt; and possibly other apps that run in the browser." created="Sun, 12 Jun 2022 15:37:57 GMT"/>
					</outline>
				<outline text="### Two calls" created="Sun, 12 Jun 2022 15:42:56 GMT">
					<outline text="Two calls are supported: /returnjson and /returnopml. Both take a &lt;i&gt;url&lt;/i&gt; parameter. " created="Sun, 12 Jun 2022 15:43:01 GMT"/>
					<outline text="http://feeder.scripting.com/returnjson?url=http://scripting.com/rss.xml " created="Sun, 12 Jun 2022 15:44:40 GMT">
						<outline text="* Returns a JSON structure containing the information in the feed, as processed by reallysimple. " created="Sun, 12 Jun 2022 15:45:25 GMT"/>
						</outline>
					<outline text="http://feeder.scripting.com/returnopml?url=http://scripting.com/rss.xml " created="Sun, 12 Jun 2022 15:45:12 GMT">
						<outline text="* Returns an OPML structure which you can insert into an outline, with all the items from the feed. " created="Sun, 12 Jun 2022 15:45:52 GMT"/>
						</outline>
					<outline text="These calls are used from &lt;a href=&quot;http://drummer.scripting.com/&quot;&gt;Drummer&lt;/a&gt; to implement the &lt;a href=&quot;http://docserver.scripting.com/?verb=rss.readFeed&quot;&gt;rss.readFeed&lt;/a&gt; verb and to allow &lt;a href=&quot;https://www.youtube.com/watch?v=j7L1bvP0dQc&quot;&gt;expanding of rss node types&lt;/a&gt;. " created="Sun, 12 Jun 2022 15:54:57 GMT"/>
					</outline>
				<outline text="### Templates" created="Wed, 22 Jun 2022 16:52:01 GMT">
					<outline text="You an also run the contents of a reallysimple query through a template, which is just a web page, which has the result of the query as a local object you can use JavaScript to render." created="Wed, 22 Jun 2022 14:39:45 GMT"/>
					<outline text="Here's the &lt;a href=&quot;https://github.com/scripting/reallysimple/blob/main/demos/feeder/docs/templates.md&quot;&gt;docs page&lt;/a&gt; for templates. " created="Wed, 22 Jun 2022 16:52:30 GMT"/>
					</outline>
				<outline text="### Caveats" created="Sun, 12 Jun 2022 15:44:21 GMT">
					<outline text="If you're deploying a real application, please run your own copy of this app. " created="Sun, 12 Jun 2022 15:46:43 GMT"/>
					<outline text="It's fine to use feeder.scripting.com for testing. " created="Sun, 12 Jun 2022 15:55:36 GMT"/>
					</outline>
				<outline text="### Questions or comments" created="Sun, 12 Jun 2022 15:47:36 GMT">
					<outline text="Please respond in &lt;a href=&quot;https://github.com/scripting/reallysimple/issues/1&quot;&gt;this thread&lt;/a&gt; on the reallysimple issues section. " created="Sun, 12 Jun 2022 15:47:48 GMT"/>
					</outline>
				</outline>
			<outline text="old stuff -- 6/12/22 by DW" isComment="true" created="Sun, 12 Jun 2022 13:55:02 GMT">
				<outline text="feeder.js" created="Mon, 08 Mar 2021 15:16:10 GMT">
					<outline text="const myVersion = &quot;0.4.3&quot;, myProductName = &quot;feeder&quot;;  " created="Mon, 03 Feb 2014 03:21:03 GMT" pgfnum="36831"/>
					<outline text="" created="Mon, 08 Mar 2021 15:16:36 GMT"/>
					<outline text="const fs = require (&quot;fs&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
					<outline text="const utils = require (&quot;daveutils&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
					<outline text="const davehttp = require (&quot;davehttp&quot;);"/>
					<outline text="const reallysimple = require (&quot;reallysimple&quot;);" created="Sat, 05 Mar 2022 17:19:07 GMT"/>
					<outline text="" created="Sat, 13 Mar 2021 15:42:13 GMT"/>
					<outline text="var config = {">
						<outline text="port: process.env.PORT || 1801,"/>
						<outline text="flLogToConsole: true,"/>
						<outline text="flAllowAccessFromAnywhere: true,"/>
						<outline text="timeOutSecs: 3" created="Fri, 19 Nov 2021 15:47:33 GMT"/>
						<outline text="}"/>
						</outline>
					<outline text="" created="Fri, 19 Nov 2021 15:44:30 GMT"/>
					<outline text="const allowedHeadNames = [" created="Fri, 19 Nov 2021 16:17:57 GMT">
						<outline text="&quot;title&quot;, &quot;link&quot;, &quot;description&quot;, &quot;language&quot;, &quot;copyright&quot;, &quot;managingEditor&quot;, &quot;webMaster&quot;, &quot;lastBuildDate&quot;, &quot;pubDate&quot;, &quot;category&quot;," created="Fri, 19 Nov 2021 16:18:14 GMT"/>
						<outline text="&quot;generator&quot;, &quot;docs&quot;, &quot;cloud&quot;, &quot;ttl&quot;, &quot;image&quot;, &quot;rating&quot;, &quot;textInput&quot;, &quot;skipHours&quot;, &quot;skipDays&quot;, &quot;source:account&quot;, &quot;source:localtime&quot;, " created="Fri, 19 Nov 2021 16:18:53 GMT"/>
						<outline text="&quot;source:likes&quot;" created="Fri, 19 Nov 2021 16:26:02 GMT"/>
						<outline text="];" created="Fri, 19 Nov 2021 16:18:06 GMT"/>
						</outline>
					<outline text="const allowedItemNames = [" created="Fri, 19 Nov 2021 16:17:57 GMT">
						<outline text="&quot;title&quot;, &quot;link&quot;, &quot;description&quot;, &quot;author&quot;, &quot;category&quot;, &quot;comments&quot;, &quot;enclosure&quot;, &quot;guid&quot;, &quot;pubDate&quot;, &quot;source&quot;, &quot;outline&quot;" created="Fri, 19 Nov 2021 16:18:14 GMT"/>
						<outline text="];" created="Fri, 19 Nov 2021 16:18:06 GMT"/>
						</outline>
					<outline text="" created="Fri, 19 Nov 2021 16:47:14 GMT"/>
					<outline text="function isEmptyObject (obj) {">
						<outline text="return (Object.keys (obj).length === 0);"/>
						<outline text="}"/>
						</outline>
					<outline text="" created="Fri, 19 Nov 2021 17:16:08 GMT"/>
					<outline text="function getItemPermalink (item) { //cribbed from River6, we're going to crib other stuff too ;-)">
						<outline text="var rssguid = item [&quot;rss:guid&quot;], returnedval = undefined;"/>
						<outline text="if (rssguid !== undefined) {">
							<outline text="var atts = rssguid [&quot;@&quot;];"/>
							<outline text="if (atts.ispermalink === undefined) {">
								<outline text="returnedval = rssguid [&quot;#&quot;];"/>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="if (utils.getBoolean (atts.ispermalink)) {">
									<outline text="returnedval = rssguid [&quot;#&quot;];"/>
									<outline text="}"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="if (returnedval !== undefined) {">
							<outline text="if (utils.beginsWith (returnedval, &quot;http&quot;)) {">
								<outline text="return (returnedval);"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="return (undefined);"/>
						<outline text="}"/>
						</outline>
					<outline text="" created="Fri, 19 Nov 2021 17:01:15 GMT"/>
					<outline text="function convertFeed (oldFeed) {" created="Fri, 19 Nov 2021 15:55:43 GMT">
						<outline text="Changes" isComment="true" created="Fri, 19 Nov 2021 16:46:10 GMT">
							<outline text="11/19/21; 11:46:14 AM by DW" created="Fri, 19 Nov 2021 16:46:13 GMT">
								<outline text="The feedreader package puts all kinds of junk into the structure it creates. We filter out the junk and only allow elements that are in the RSS 2.0 spec or the source namespace. " created="Fri, 19 Nov 2021 16:46:14 GMT"/>
								<outline text="I did not include source:outline because it needs to be unmangled. I don't want to send it out in the form that feedreader creates it. " created="Fri, 19 Nov 2021 16:52:00 GMT"/>
								</outline>
							</outline>
						<outline text="var newFeed = new Object ();" created="Fri, 19 Nov 2021 15:57:09 GMT"/>
						<outline text="for (var x in oldFeed.head) {" created="Fri, 19 Nov 2021 16:00:27 GMT">
							<outline text="let val = oldFeed.head [x];" created="Fri, 19 Nov 2021 16:02:02 GMT"/>
							<outline text="if (val != null) {" created="Fri, 19 Nov 2021 16:02:13 GMT">
								<outline text="allowedHeadNames.forEach (function (name) {" created="Fri, 19 Nov 2021 16:41:41 GMT">
									<outline text="if (x == name) {" created="Fri, 19 Nov 2021 16:42:07 GMT">
										<outline text="newFeed [x] = val;" created="Fri, 19 Nov 2021 16:00:48 GMT"/>
										<outline text="}" created="Fri, 19 Nov 2021 16:42:13 GMT"/>
										</outline>
									<outline text="});" created="Fri, 19 Nov 2021 16:42:01 GMT"/>
									</outline>
								<outline text="}" created="Fri, 19 Nov 2021 16:02:19 GMT"/>
								</outline>
							<outline text="}" created="Fri, 19 Nov 2021 16:00:40 GMT"/>
							</outline>
						<outline text="if (isEmptyObject (newFeed.image)) {" created="Fri, 19 Nov 2021 17:12:24 GMT">
							<outline text="delete newFeed.image;" created="Fri, 19 Nov 2021 17:16:39 GMT"/>
							<outline text="}" created="Fri, 19 Nov 2021 17:16:43 GMT"/>
							</outline>
						<outline text="" created="Fri, 19 Nov 2021 16:02:47 GMT"/>
						<outline text="newFeed.items = new Array ();" created="Fri, 19 Nov 2021 16:08:19 GMT"/>
						<outline text="oldFeed.items.forEach (function (item) {" created="Fri, 19 Nov 2021 16:02:48 GMT">
							<outline text="var newItem = new Object ();" created="Fri, 19 Nov 2021 16:44:26 GMT"/>
							<outline text="for (var x in item) {" created="Fri, 19 Nov 2021 16:16:21 GMT">
								<outline text="val = item [x];" created="Fri, 19 Nov 2021 16:43:17 GMT"/>
								<outline text="if (val != null) {" created="Fri, 19 Nov 2021 16:43:22 GMT">
									<outline text="allowedItemNames.forEach (function (name) {" created="Fri, 19 Nov 2021 16:41:41 GMT">
										<outline text="if (x == name) {" created="Fri, 19 Nov 2021 16:42:07 GMT">
											<outline text="newItem [x] = val;" created="Fri, 19 Nov 2021 16:00:48 GMT"/>
											<outline text="}" created="Fri, 19 Nov 2021 16:42:13 GMT"/>
											</outline>
										<outline text="});" created="Fri, 19 Nov 2021 16:42:01 GMT"/>
										</outline>
									<outline text="}" created="Fri, 19 Nov 2021 16:43:30 GMT"/>
									</outline>
								<outline text="}" created="Fri, 19 Nov 2021 16:43:13 GMT"/>
								</outline>
							<outline text="newItem.guid = getItemPermalink (item);" created="Fri, 19 Nov 2021 16:55:02 GMT"/>
							<outline text="if (isEmptyObject (newItem.source)) {" created="Fri, 19 Nov 2021 17:12:24 GMT">
								<outline text="delete newItem.source;" created="Fri, 19 Nov 2021 17:16:39 GMT"/>
								<outline text="}" created="Fri, 19 Nov 2021 17:16:43 GMT"/>
								</outline>
							<outline text="newFeed.items.push (newItem);" created="Fri, 19 Nov 2021 16:44:44 GMT"/>
							<outline text="});" created="Fri, 19 Nov 2021 16:03:02 GMT"/>
							</outline>
						<outline text="" created="Fri, 19 Nov 2021 16:04:38 GMT"/>
						<outline text="return (newFeed);" created="Fri, 19 Nov 2021 16:04:39 GMT"/>
						<outline text="}" created="Fri, 19 Nov 2021 15:55:55 GMT"/>
						</outline>
					<outline text="function convertToOpml (theFeed) {" created="Fri, 19 Nov 2021 17:10:23 GMT">
						<outline text="var theOutline = {" created="Fri, 19 Nov 2021 17:20:00 GMT">
							<outline text="opml: {" created="Fri, 19 Nov 2021 17:22:35 GMT">
								<outline text="head: {" created="Fri, 19 Nov 2021 17:20:09 GMT">
									<outline text="title: theFeed.title" created="Fri, 19 Nov 2021 17:20:42 GMT"/>
									<outline text="}," created="Fri, 19 Nov 2021 17:20:13 GMT"/>
									</outline>
								<outline text="body: {" created="Fri, 19 Nov 2021 17:20:14 GMT">
									<outline text="subs: new Array ()" created="Fri, 19 Nov 2021 17:20:23 GMT"/>
									<outline text="}" created="Fri, 19 Nov 2021 17:20:17 GMT"/>
									</outline>
								<outline text="}" created="Fri, 19 Nov 2021 17:22:37 GMT"/>
								</outline>
							<outline text="}" created="Fri, 19 Nov 2021 17:20:08 GMT"/>
							</outline>
						<outline text="theFeed.items.forEach (function (item) {" created="Fri, 19 Nov 2021 17:22:13 GMT">
							<outline text="var linetext, subtext;" created="Fri, 19 Nov 2021 17:23:57 GMT"/>
							<outline text="if (item.title === undefined) {" created="Fri, 19 Nov 2021 17:23:57 GMT">
								<outline text="linetext = item.description;" created="Fri, 19 Nov 2021 17:24:22 GMT"/>
								<outline text="}" created="Fri, 19 Nov 2021 17:24:07 GMT"/>
								</outline>
							<outline text="else {" created="Fri, 19 Nov 2021 17:24:08 GMT">
								<outline text="linetext = item.title;" created="Fri, 19 Nov 2021 17:24:22 GMT"/>
								<outline text="subtext = item.description;" created="Fri, 19 Nov 2021 17:24:52 GMT"/>
								<outline text="}" created="Fri, 19 Nov 2021 17:24:09 GMT"/>
								</outline>
							<outline text="theOutline.opml.body.subs.push ({" created="Fri, 19 Nov 2021 17:22:58 GMT">
								<outline text="text: linetext," created="Fri, 19 Nov 2021 17:23:39 GMT"/>
								<outline text="type: &quot;link&quot;," created="Fri, 19 Nov 2021 17:25:33 GMT"/>
								<outline text="url: item.link" created="Fri, 19 Nov 2021 17:25:37 GMT"/>
								<outline text="});" created="Fri, 19 Nov 2021 17:23:10 GMT"/>
								</outline>
							<outline text="});" created="Fri, 19 Nov 2021 17:22:28 GMT"/>
							</outline>
						<outline text="return (opml.stringify (theOutline));" created="Fri, 19 Nov 2021 17:26:29 GMT"/>
						<outline text="}" created="Fri, 19 Nov 2021 17:10:33 GMT"/>
						</outline>
					<outline text="" created="Fri, 19 Nov 2021 15:55:44 GMT"/>
					<outline text="function readFeed (url, callback) {" created="Fri, 19 Nov 2021 15:54:09 GMT">
						<outline text="feedRead.parseUrl (url, config.timeOutSecs, function (err, theFeed) {">
							<outline text="if (err) {" created="Fri, 19 Nov 2021 15:55:07 GMT">
								<outline text="callback (err);" created="Fri, 19 Nov 2021 15:55:11 GMT"/>
								<outline text="}" created="Fri, 19 Nov 2021 15:55:15 GMT"/>
								</outline>
							<outline text="else {" created="Fri, 19 Nov 2021 15:55:16 GMT">
								<outline text="callback (undefined, convertFeed (theFeed));" created="Fri, 19 Nov 2021 15:55:26 GMT"/>
								<outline text="}" created="Fri, 19 Nov 2021 15:55:18 GMT"/>
								</outline>
							<outline text="});" created="Fri, 19 Nov 2021 15:55:02 GMT"/>
							</outline>
						<outline text="}" created="Fri, 19 Nov 2021 15:54:21 GMT"/>
						</outline>
					<outline text="function viewHomePage (feedUrl, callback) {" created="Sat, 20 Nov 2021 14:27:34 GMT">
						<outline text="" created="Sat, 20 Nov 2021 14:36:46 GMT"/>
						<outline text="" created="Sat, 20 Nov 2021 14:36:46 GMT"/>
						<outline text="readFeed (feedUrl, function (err, theFeed) {">
							<outline text="if (err) {" created="Sat, 20 Nov 2021 14:31:45 GMT">
								<outline text="callback (err.message);" created="Sat, 20 Nov 2021 14:31:47 GMT"/>
								<outline text="}" created="Sat, 20 Nov 2021 14:31:54 GMT"/>
								</outline>
							<outline text="else {" created="Sat, 20 Nov 2021 14:31:54 GMT">
								<outline text="fs.readFile (&quot;template.html&quot;, function (err, templatetext) {" created="Sat, 20 Nov 2021 14:31:11 GMT">
									<outline text="if (err) {" created="Sat, 20 Nov 2021 14:31:45 GMT">
										<outline text="callback (err.message);" created="Sat, 20 Nov 2021 14:31:47 GMT"/>
										<outline text="}" created="Sat, 20 Nov 2021 14:31:54 GMT"/>
										</outline>
									<outline text="else {" created="Sat, 20 Nov 2021 14:31:54 GMT">
										<outline text="var pagetable = {">
											<outline text="url: feedUrl,"/>
											<outline text="bodytext: utils.jsonStringify (theFeed)"/>
											<outline text="};"/>
											</outline>
										<outline text="var htmltext = utils.multipleReplaceAll (templatetext.toString (), pagetable, false, &quot;[%&quot;, &quot;%]&quot;);"/>
										<outline text="callback (htmltext);" created="Sat, 20 Nov 2021 14:27:56 GMT"/>
										<outline text="}" created="Sat, 20 Nov 2021 14:31:56 GMT"/>
										</outline>
									<outline text="});" created="Sat, 20 Nov 2021 14:31:34 GMT"/>
									</outline>
								<outline text="}" created="Sat, 20 Nov 2021 14:31:56 GMT"/>
								</outline>
							<outline text="});" created="Sat, 20 Nov 2021 14:37:28 GMT"/>
							</outline>
						<outline text="" created="Sat, 20 Nov 2021 14:36:46 GMT"/>
						<outline text="}" created="Sat, 20 Nov 2021 14:27:42 GMT"/>
						</outline>
					<outline text="" created="Fri, 19 Nov 2021 15:54:10 GMT"/>
					<outline text="davehttp.start (config, function (theRequest) {">
						<outline text="function returnHtml (htmltext) {">
							<outline text="theRequest.httpReturn (200, &quot;text/html&quot;, htmltext);"/>
							<outline text="}"/>
							</outline>
						<outline text="function returnOpml (opmltext) {">
							<outline text="theRequest.httpReturn (200, &quot;text/xml&quot;, opmltext);"/>
							<outline text="}"/>
							</outline>
						<outline text="function returnData (jstruct) {">
							<outline text="if (jstruct === undefined) {">
								<outline text="jstruct = {};"/>
								<outline text="}"/>
								</outline>
							<outline text="theRequest.httpReturn (200, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
							<outline text="}"/>
							</outline>
						<outline text="function returnError (jstruct) {">
							<outline text="theRequest.httpReturn (500, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
							<outline text="}"/>
							</outline>
						<outline text="function httpReturn (err, jstruct) {">
							<outline text="if (err) {">
								<outline text="returnError (err);"/>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="returnData (jstruct);"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="switch (theRequest.lowerpath) {">
							<outline text="case &quot;/&quot;:">
								<outline text="viewHomePage (theRequest.params.url, returnHtml);"/>
								<outline text="return;"/>
								</outline>
							<outline text="case &quot;/now&quot;:">
								<outline text="theRequest.httpReturn (200, &quot;text/plain&quot;, new Date ().toUTCString ());"/>
								<outline text="return;"/>
								</outline>
							<outline text="case &quot;/returnjson&quot;:" created="Fri, 19 Nov 2021 15:43:41 GMT">
								<outline text="readFeed (theRequest.params.url, httpReturn);"/>
								<outline text="return;" created="Fri, 19 Nov 2021 15:43:48 GMT"/>
								</outline>
							<outline text="case &quot;/returnopml&quot;:" created="Fri, 19 Nov 2021 15:43:41 GMT">
								<outline text="readFeed (theRequest.params.url, function (err, theFeed) {">
									<outline text="if (err) {" created="Fri, 19 Nov 2021 17:09:41 GMT">
										<outline text="returnError (err);" created="Fri, 19 Nov 2021 17:09:44 GMT"/>
										<outline text="}" created="Fri, 19 Nov 2021 17:09:48 GMT"/>
										</outline>
									<outline text="else {" created="Fri, 19 Nov 2021 17:09:49 GMT">
										<outline text="returnOpml (convertToOpml (theFeed));" created="Fri, 19 Nov 2021 17:10:05 GMT"/>
										<outline text="}" created="Fri, 19 Nov 2021 17:09:51 GMT"/>
										</outline>
									<outline text="});" created="Fri, 19 Nov 2021 17:09:36 GMT"/>
									</outline>
								<outline text="return;" created="Fri, 19 Nov 2021 15:43:48 GMT"/>
								</outline>
							<outline text="default:" created="Fri, 19 Nov 2021 15:38:59 GMT">
								<outline text="theRequest.httpReturn (404, &quot;text/plain&quot;, &quot;Not found.&quot;);"/>
								<outline text="return;"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					</outline>
				<outline text="template.html">
					<outline text="&lt;html&gt;">
						<outline text="&lt;head&gt;">
							<outline text="&lt;title&gt;feedRead viewer&lt;/title&gt;"/>
							<outline text="&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;"/>
							<outline text="&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;"/>
							<outline text="&lt;script src=&quot;http://fargo.io/code/jquery-1.9.1.min.js&quot;&gt;&lt;/script&gt;"/>
							<outline text="&lt;link href=&quot;http://fargo.io/code/bootstrap.css&quot; rel=&quot;stylesheet&quot;&gt;"/>
							<outline text="&lt;script src=&quot;http://fargo.io/code/bootstrap.min.js&quot;&gt;&lt;/script&gt;"/>
							<outline text="&lt;link rel=&quot;stylesheet&quot; href=&quot;http://fargo.io/code/fontAwesome/css/font-awesome.min.css&quot;/&gt;"/>
							<outline text="&lt;link href=&quot;https://fonts.googleapis.com/css?family=Ubuntu&quot; rel=&quot;stylesheet&quot;&gt;"/>
							<outline text="&lt;script&gt;" created="Thu, 12 Dec 2013 17:06:51 GMT" pgfnum="33502">
								<outline text="function everySecond () {">
									<outline text="}"/>
									</outline>
								<outline text="function startup () {">
									<outline text="console.log (&quot;startup&quot;);"/>
									<outline text="self.setInterval (function () {everySecond ()}, 1000); "/>
									<outline text="}"/>
									</outline>
								<outline text="&lt;/script&gt;" created="Thu, 12 Dec 2013 17:07:17 GMT" pgfnum="33504"/>
								</outline>
							<outline text="&lt;style&gt;" created="Wed, 11 Sep 2013 14:27:45 GMT" pgfnum="30095">
								<outline text="body {">
									<outline text="font-family: Ubuntu;"/>
									<outline text="font-size: 18px;"/>
									<outline text="background-color: whitesmoke;"/>
									<outline text="}"/>
									</outline>
								<outline text=".divPageBody {">
									<outline text="width: 75%;"/>
									<outline text="margin-top: 30px;"/>
									<outline text="margin-left: auto;"/>
									<outline text="margin-right: auto;"/>
									<outline text="margin-bottom: 400px;"/>
									<outline text="}"/>
									</outline>
								<outline text=".divUrl {">
									<outline text="margin-top: 25px;"/>
									<outline text="margin-bottom: 10px;"/>
									<outline text="}"/>
									</outline>
								<outline text="pre {">
									<outline text="padding: 0;" isComment="true"/>
									<outline text="background-color: white;"/>
									<outline text="}"/>
									</outline>
								<outline text=".divWhatIsThis {">
									<outline text="float: right;"/>
									<outline text="font-size: 16px;"/>
									<outline text="}"/>
									</outline>
								<outline text="&lt;/style&gt;" created="Wed, 11 Sep 2013 14:30:17 GMT" pgfnum="30105"/>
								</outline>
							<outline text="&lt;/head&gt;"/>
							</outline>
						<outline text="&lt;body&gt;">
							<outline text="&lt;div class=&quot;divPageBody&quot;&gt;">
								<outline text="&lt;h1&gt;feedRead viewer&lt;/h1&gt;" isComment="true"/>
								<outline text="&lt;div class=&quot;divWhatIsThis&quot;&gt;">
									<outline text="&lt;a href=&quot;http://scripting.com/2019/05/16/162444.html&quot;&gt;What is this?&lt;/a&gt;"/>
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;div class=&quot;divUrl&quot;&gt;">
									<outline text="[%url%]"/>
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;pre id=&quot;idXmlViewer&quot;&gt;[%bodytext%]&lt;/pre&gt;"/>
								<outline text="&lt;/div&gt;"/>
								</outline>
							<outline text="&lt;script&gt;">
								<outline text="$(document).ready (function () {">
									<outline text="startup ();" created="Wed, 30 Oct 2013 15:20:06 GMT" pgfnum="30656"/>
									<outline text="});"/>
									</outline>
								<outline text="&lt;/script&gt;"/>
								</outline>
							<outline text="&lt;/body&gt;"/>
							</outline>
						<outline text="&lt;/html&gt;"/>
						</outline>
					</outline>
				</outline>
			</outline>
		<outline text="build script" created="Fri, 19 Nov 2021 17:45:52 GMT">
			<outline text="nodeEditorSuite.utilities.buildFeeder ()" created="Fri, 19 Nov 2021 17:45:55 GMT"/>
			</outline>
		</body>
	</opml>
