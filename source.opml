<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Sat, 23 Aug 2025 15:26:10 GMT -->

<!-- 
   Hi this is Dave Winer. I write all my project code in an outliner, which 
   generates all the files that make up this GitHub project. You'll see a 
   source.opml file like this in each of my projects. It contains the outline 
   source that the repo files were generated from. This is the most logical place 
   to store them. You can read the code in any outliner that supports OPML, which 
   includes https://drummer.land. You can use the Open URL command in 
   Drummer's File menu to open the "raw" version of this file straight from the 
   GitHub repo.
 -->

<opml version="2.0">
	<head>
		<title>nodeEditor: reallysimple</title>
		<dateCreated>Mon, 07 Mar 2022 14:28:16 GMT</dateCreated>
		<dateModified>Sat, 23 Aug 2025 15:26:09 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 2, 3, 5, 6, 34, 35, 47, 78, 84, 85, 87, 93, 97, 98, 102, 122, 133, 137, 138, 142, 163</expansionState>
		<vertScrollState>117</vertScrollState>
		<windowTop>94</windowTop>
		<windowLeft>452</windowLeft>
		<windowBottom>1166</windowBottom>
		<windowRight>1747</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/reallysimple/">
			<outline text="worknotes.md" created="Sat, 14 May 2022 15:03:57 GMT">
				<outline text="#### 8/23/25; 10:54:38 AM by DW" created="Sat, 23 Aug 2025 14:54:37 GMT">
					<outline text="wpSiteId and wpPostId are now numbers." created="Sat, 23 Aug 2025 14:54:38 GMT"/>
					</outline>
				<outline text="#### 8/22/25; 9:30:06 AM by DW -- v0.5.1" created="Fri, 22 Aug 2025 13:30:05 GMT">
					<outline text="We now look for the wordpress site id and post id, if present..." created="Fri, 22 Aug 2025 13:30:07 GMT">
						<outline text="* the site id is saved at the top level of the jstruct with the name wpSiteId" created="Fri, 22 Aug 2025 13:49:14 GMT"/>
						<outline text="* the post id is saved in the item with the name wpPostId" created="Fri, 22 Aug 2025 13:49:36 GMT"/>
						</outline>
					<outline text="This facilitates the Edit This Page function in wordpress editors, such as WordLand." created="Fri, 22 Aug 2025 13:49:09 GMT"/>
					<outline text="Thought of doing a more general solution, but that'll have to wait until other people are in the loop." created="Fri, 22 Aug 2025 14:25:54 GMT"/>
					</outline>
				<outline text="#### 5/25/24; 1:36:02 PM by DW" created="Sat, 25 May 2024 17:36:02 GMT">
					<outline text="Added support for &lt;source:self&gt; element, map it to linkToSelf, the same as atom:link, implemented on 6/15/22." created="Sat, 25 May 2024 17:36:02 GMT"/>
					<outline text="Wrote a &lt;a href=&quot;http://scripting.com/2024/05/25.html#a174503&quot;&gt;blog post&lt;/a&gt; about it. " created="Sat, 25 May 2024 17:48:16 GMT"/>
					</outline>
				<outline text="#### 3/14/24; 1:40:38 PM by DW" created="Thu, 14 Mar 2024 17:40:35 GMT">
					<outline text="Added support for &lt;source:blogroll&gt;." created="Thu, 14 Mar 2024 17:40:38 GMT"/>
					</outline>
				<outline text="#### 11/28/23; 3:41:08 PM by DW" created="Tue, 28 Nov 2023 20:41:07 GMT">
					<outline text="Added support for source:cloud element. " created="Tue, 28 Nov 2023 20:41:09 GMT"/>
					</outline>
				<outline text="#### 11/8/23; 10:20:30 AM by DW" created="Wed, 08 Nov 2023 15:20:25 GMT">
					<outline text="Changed version number on marked package to 3.0.8, the last version that worked afaik." created="Wed, 08 Nov 2023 15:20:30 GMT"/>
					</outline>
				<outline text="#### 5/16/23 by DW -- v0.4.24" created="Tue, 16 May 2023 19:52:32 GMT">
					<outline text="Believe it or not node-emoji of all things introduced a breaking change, so we have to hold at v1.11.0." created="Tue, 16 May 2023 19:52:49 GMT"/>
					</outline>
				<outline text="#### 3/22/23 by DW -- v0.4.23" created="Wed, 22 Mar 2023 14:14:45 GMT">
					<outline text="Allow for the possibility that rss:guid elements might not have atttributes. I know it happens because when it does FeedLand crashes. ;-)" created="Wed, 22 Mar 2023 14:14:46 GMT"/>
					</outline>
				<outline text="#### 11/11/22 by DW" created="Fri, 11 Nov 2022 14:23:52 GMT">
					<outline text="&lt;a href=&quot;http://scripting.com/2022/11/11.html#a141519&quot;&gt;Hack alert&lt;/a&gt;: We generate item-level link elements for items that don't have link elements. Explained &lt;a href=&quot;http://scripting.com/2022/11/11.html#a141519&quot;&gt;here&lt;/a&gt;. This isn't my code that's doing it, it's a lower-level package that I'm using. I think it was copying an even older &lt;a href=&quot;https://pythonhosted.org/feedparser/reference-entry-link.html&quot;&gt;package&lt;/a&gt;. Which did something they should not have done. " created="Fri, 11 Nov 2022 14:24:00 GMT"/>
					</outline>
				<outline text="#### 9/29/22 by DW -- v0.4.20" created="Thu, 29 Sep 2022 19:27:43 GMT">
					<outline text="I did an update to the davefeedread package, but for some reason NPM isn't picking it up. So I changed the spec in package.json to specify the exact version or greater, to &quot;force&quot; it to use the correct version, I hope. " created="Thu, 29 Sep 2022 19:27:55 GMT"/>
					</outline>
				<outline text="#### 8/25/22 by DW -- v0.4.19" created="Thu, 25 Aug 2022 16:28:20 GMT">
					<outline text="We now return the markdowntext for items that have the source:markdown element. " created="Thu, 25 Aug 2022 16:28:41 GMT"/>
					<outline text="We needed this because [app] strips markup from descriptions, by providing  markdowntext, we will have a way to regenerate it. The idea is that we can let through the styling that Markdown implements, it's harmless, where the garbage many feeds put in their text is intolerable. " created="Thu, 25 Aug 2022 16:30:05 GMT"/>
					</outline>
				<outline text="#### 7/18/22 by DW -- v0.4.17" created="Mon, 18 Jul 2022 15:28:55 GMT">
					<outline text="If we see a source:markdown element, we generate the description by processing the markdown text." created="Mon, 18 Jul 2022 15:29:00 GMT"/>
					</outline>
				<outline text="#### 7/14/22 by DW -- v0.4.16" created="Thu, 14 Jul 2022 13:51:31 GMT">
					<outline text="Created a new item-level value called permalink. Previously we were getting the permalink and overwriting the guid value. Which is all well and good if the guid is a permalink. It's possible it's not, as illustrated by &lt;a href=&quot;http://xmlviewer.scripting.com/?url=http%3A%2F%2Fscripting.com%2Fuserfeeds%2Fdavewiner.xml&quot;&gt;this feed&lt;/a&gt;, where it's just an id, not a permalink, in which case we overwrite the guid with undefined. Not really good behavior. So now instead of doing that we copy it into the permalink value. " created="Thu, 14 Jul 2022 13:46:18 GMT"/>
					</outline>
				<outline text="#### 7/2/22 by DW -- v0.4.15" created="Sat, 02 Jul 2022 14:33:31 GMT">
					<outline text="Added a new &lt;i&gt;reader&lt;/i&gt; section to the returned object, containing information that's not from the feed, rather is about the feed reader software. The first element of this object is ctSecsToRead which is the number of seconds it took to read the feed. Also included the name of the reader app and version." created="Sat, 02 Jul 2022 14:33:35 GMT"/>
					</outline>
				<outline text="#### 6/23/22 by DW -- v0.4.11" created="Thu, 23 Jun 2022 14:31:00 GMT">
					<outline text="New exported function reallySimple.setConfig." created="Thu, 23 Jun 2022 14:31:01 GMT"/>
					<outline text="Right now there is just one item in its config, timeoutSecs. " created="Thu, 23 Jun 2022 14:31:35 GMT"/>
					<outline text="We need to change it in the feeder app, and there may be other config elements to change in the future, so let's do this right. " created="Thu, 23 Jun 2022 14:31:47 GMT"/>
					<outline text="Also change the default from 3 to 10." created="Thu, 23 Jun 2022 14:32:39 GMT"/>
					</outline>
				<outline text="#### 6/20/22 by DW -- v0.4.10" created="Mon, 20 Jun 2022 13:29:36 GMT">
					<outline text="Fixed a syntax error on the first line of reallysimple.js, changing a semicolon to a comma. " created="Mon, 20 Jun 2022 13:29:41 GMT"/>
					<outline text="Oddly, this is not seen as a syntax error in my Node, whereas Scott's is reporting an error." created="Mon, 20 Jun 2022 13:30:16 GMT"/>
					<outline text="It's not good syntax no matter what. :smile:" created="Mon, 20 Jun 2022 13:30:37 GMT"/>
					</outline>
				<outline text="#### 6/15/22 by DW -- v0.4.9" created="Wed, 15 Jun 2022 16:41:42 GMT">
					<outline text="If a feed has an &amp;lt;atom:link&gt; head-level element with rel=&quot;self&quot;, we add a head-level linkToSelf value with its value. " created="Wed, 15 Jun 2022 16:42:21 GMT"/>
					<outline text="A &lt;a href=&quot;http://scripting.com/2022/06/15.html#a163715&quot;&gt;blog post&lt;/a&gt; on this addition. " created="Wed, 15 Jun 2022 16:44:02 GMT"/>
					</outline>
				<outline text="#### 6/12/22 by DW" created="Sun, 12 Jun 2022 16:29:00 GMT">
					<outline text="&lt;a href=&quot;https://github.com/scripting/feeder&quot;&gt;Feeder&lt;/a&gt; is a server app that connects to the &lt;a href=&quot;https://github.com/scripting/reallysimple&quot;&gt;reallysimple&lt;/a&gt; package via the web. " created="Sun, 12 Jun 2022 16:29:03 GMT"/>
					</outline>
				<outline text="#### 6/11/22 by DW -- v0.4.8" created="Sat, 11 Jun 2022 19:41:15 GMT">
					<outline text="Announced on &lt;a href=&quot;http://scripting.com/2022/06/11.html#a193356&quot;&gt;Scripting News&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/davewiner/status/1535708039621353472&quot;&gt;Twitter&lt;/a&gt;. " created="Sat, 11 Jun 2022 19:41:21 GMT"/>
					<outline text="If the cloud element exists but is empty, delete it. " created="Sat, 11 Jun 2022 20:55:29 GMT"/>
					<outline text="Only allow url, type and length properties in enclosure objects." created="Sat, 11 Jun 2022 21:03:46 GMT"/>
					<outline text="Don't pass through enclosure properties whose value is null. " created="Sat, 11 Jun 2022 21:05:50 GMT"/>
					</outline>
				<outline text="#### 6/5/22 by DW" created="Sun, 05 Jun 2022 16:39:32 GMT">
					<outline text="Put together the &lt;a href=&quot;http://reallysimple.org/twentyYearsAgo.opml&quot;&gt;notes&lt;/a&gt; on how RSS 0.94 became RSS 2.0 in the summer of 2002." created="Sun, 05 Jun 2022 16:39:34 GMT"/>
					<outline text="Added a menubar to the reallysimple.org website, to organize the various projects." created="Sun, 05 Jun 2022 16:40:24 GMT"/>
					</outline>
				<outline text="#### 5/17/22 by DW" created="Sat, 14 May 2022 15:05:24 GMT">
					<outline text="If an object is undefined there's no need to delete it." created="Sat, 14 May 2022 15:05:29 GMT"/>
					</outline>
				<outline text="#### 4/7/22 by DW" created="Thu, 07 Apr 2022 15:37:15 GMT">
					<outline text="Clean up the readme file. Simplify the example app. Review docs. Start to invite collaborators to the repo, still private." created="Thu, 07 Apr 2022 15:37:17 GMT"/>
					</outline>
				<outline text="#### 3/21/22 by DW" created="Mon, 21 Mar 2022 14:19:22 GMT">
					<outline text="Reviewing the way we represent links in items in the API. " created="Mon, 21 Mar 2022 14:19:22 GMT"/>
					<outline text="The question is this -- how can we get a link to the item from the item. " created="Mon, 21 Mar 2022 14:27:17 GMT"/>
					<outline text="The answer, on reflection -- rely on the link element as the permalink. " created="Mon, 21 Mar 2022 14:27:44 GMT"/>
					</outline>
				<outline text="#### 3/7/22 by DW" created="Mon, 07 Mar 2022 15:27:46 GMT">
					<outline text="Start the reallysimple repo. Publish the NPM package. " created="Mon, 07 Mar 2022 15:27:47 GMT"/>
					</outline>
				<outline text="#### 3/6/22 by DW" created="Sun, 06 Mar 2022 16:27:50 GMT">
					<outline text="It now understands various elements from the source namespace, including source:account, source:localtime and source:outline." created="Sun, 06 Mar 2022 16:27:53 GMT"/>
					<outline text="Started a new private GitHub repo for the project and saved the files. " created="Sun, 06 Mar 2022 16:28:33 GMT"/>
					<outline text="Added it to my NPM sub-menu, this is going to be a supported project." created="Sun, 06 Mar 2022 16:29:01 GMT"/>
					</outline>
				</outline>
			<outline text="package.json" created="Sat, 05 Mar 2022 16:54:16 GMT">
				<outline text="{ ">
					<outline text="&quot;name&quot;: &quot;reallysimple&quot;, "/>
					<outline text="&quot;description&quot;: &quot;A Node package that reads RSS-like feeds and calls back with a simple, consistent JavaScript object. Easy to use, hides the history.&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.5.2&quot;, "/>
					<outline text="&quot;author&quot;: &quot;Dave Winer &lt;dave@scripting.com&gt;&quot;,"/>
					<outline text="&quot;license&quot;: &quot;MIT&quot;,"/>
					<outline text="&quot;files&quot;: [">
						<outline text="&quot;reallysimple.js&quot;,"/>
						<outline text="&quot;worknotes.md&quot;" created="Thu, 25 Aug 2022 16:44:39 GMT"/>
						<outline text="],"/>
						</outline>
					<outline text="&quot;main&quot;: &quot;reallysimple.js&quot;,"/>
					<outline text="&quot;repository&quot;: {">
						<outline text="&quot;type&quot;: &quot;git&quot;,"/>
						<outline text="&quot;url&quot;: &quot;https://github.com/scripting/reallysimple.git&quot;"/>
						<outline text="},"/>
						</outline>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;marked&quot;: &quot;3.0.8&quot;,"/>
						<outline text="&quot;node-emoji&quot;: &quot;1.11.0&quot;,"/>
						<outline text="&quot;opml&quot;: &quot;*&quot;,"/>
						<outline text="&quot;daveutils&quot;: &quot;*&quot;,"/>
						<outline text="&quot;davefeedread&quot;: &quot;&gt;=0.5.23&quot;"/>
						<outline text="},"/>
						</outline>
					<outline text="&quot;engines&quot;: {">
						<outline text="&quot;node&quot;: &quot;*&quot;"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="reallysimple.js" created="Sat, 05 Mar 2022 16:54:20 GMT">
				<outline text="var myProductName = &quot;reallysimple&quot;, myVersion = &quot;0.5.2&quot;;     "/>
				<outline text="" created="Sat, 05 Mar 2022 16:58:48 GMT"/>
				<outline text="exports.readFeed = readFeed;"/>
				<outline text="exports.convertFeedToOpml = convertFeedToOpml;" created="Sat, 05 Mar 2022 17:10:21 GMT"/>
				<outline text="exports.setConfig = setConfig; //6/23/22 by DW" created="Thu, 23 Jun 2022 14:33:16 GMT"/>
				<outline text="" created="Sat, 05 Mar 2022 17:07:20 GMT"/>
				<outline text="const utils = require (&quot;daveutils&quot;);"/>
				<outline text="const request = require (&quot;request&quot;);"/>
				<outline text="const process = require (&quot;process&quot;);" created="Sat, 02 Jul 2022 20:09:55 GMT"/>
				<outline text="const opml = require (&quot;opml&quot;);"/>
				<outline text="const davefeedread = require (&quot;davefeedread&quot;);"/>
				<outline text="const marked = require (&quot;marked&quot;); //7/18/22 by DW"/>
				<outline text="const emoji = require (&quot;node-emoji&quot;);  //7/18/22 by DW"/>
				<outline text="" created="Sat, 05 Mar 2022 16:59:01 GMT"/>
				<outline text="const allowedHeadNames = [" created="Fri, 19 Nov 2021 16:17:57 GMT">
					<outline text="&quot;title&quot;, &quot;link&quot;, &quot;description&quot;, &quot;language&quot;, &quot;copyright&quot;, &quot;managingEditor&quot;, &quot;webMaster&quot;, &quot;lastBuildDate&quot;, &quot;pubDate&quot;, &quot;category&quot;," created="Fri, 19 Nov 2021 16:18:14 GMT"/>
					<outline text="&quot;generator&quot;, &quot;docs&quot;, &quot;cloud&quot;, &quot;ttl&quot;, &quot;image&quot;, &quot;rating&quot;, &quot;textInput&quot;, &quot;skipHours&quot;, &quot;skipDays&quot;, &quot;source:account&quot;, &quot;source:localtime&quot;, &quot;source:cloud&quot;, &quot;linkToSelf&quot;, &quot;source:blogroll&quot;" created="Fri, 19 Nov 2021 16:18:53 GMT"/>
					<outline text="];" created="Fri, 19 Nov 2021 16:18:06 GMT"/>
					</outline>
				<outline text="const allowedItemNames = [" created="Fri, 19 Nov 2021 16:17:57 GMT">
					<outline text="&quot;title&quot;, &quot;link&quot;, &quot;description&quot;, &quot;author&quot;, &quot;category&quot;, &quot;comments&quot;, &quot;enclosures&quot;, &quot;guid&quot;, &quot;pubDate&quot;, &quot;source&quot;, &quot;source:outline&quot;, &quot;source:likes&quot;" created="Fri, 19 Nov 2021 16:18:14 GMT"/>
					<outline text="];" created="Fri, 19 Nov 2021 16:18:06 GMT"/>
					</outline>
				<outline text="const allowedEnclosureNames = [" created="Sat, 11 Jun 2022 20:56:19 GMT">
					<outline text="&quot;url&quot;, &quot;type&quot;, &quot;length&quot;" created="Sat, 11 Jun 2022 20:56:56 GMT"/>
					<outline text="];" created="Sat, 11 Jun 2022 20:56:29 GMT"/>
					</outline>
				<outline text="" created="Fri, 22 Aug 2025 14:34:59 GMT"/>
				<outline text="const wpNamespace = &quot;com-wordpress:feed-additions:1&quot;; //8/22/25 by DW" created="Fri, 22 Aug 2025 14:34:59 GMT"/>
				<outline text="" created="Sat, 05 Mar 2022 17:26:17 GMT"/>
				<outline text="var config = {">
					<outline text="timeOutSecs: 10" created="Fri, 19 Nov 2021 15:47:33 GMT"/>
					<outline text="}"/>
					</outline>
				<outline text="" created="Sat, 05 Mar 2022 16:59:01 GMT"/>
				<outline text="function setConfig (options) { //6/23/22 by DW" created="Thu, 23 Jun 2022 14:33:34 GMT">
					<outline text="for (var x in options) {" created="Thu, 23 Jun 2022 14:33:55 GMT">
						<outline text="config [x] = options [x];" created="Thu, 23 Jun 2022 14:34:23 GMT"/>
						<outline text="}" created="Thu, 23 Jun 2022 14:34:09 GMT"/>
						</outline>
					<outline text="}" created="Thu, 23 Jun 2022 14:33:52 GMT"/>
					</outline>
				<outline text="function isEmptyObject (obj) {">
					<outline text="Changes" isComment="true" created="Wed, 08 Jun 2022 18:19:42 GMT">
						<outline text="6/8/22; 2:19:45 PM by DW" created="Wed, 08 Jun 2022 18:19:43 GMT">
							<outline text="If there's an error return true." created="Wed, 08 Jun 2022 18:19:46 GMT"/>
							</outline>
						</outline>
					<outline text="try {" created="Wed, 08 Jun 2022 18:19:17 GMT">
						<outline text="return (Object.keys (obj).length === 0);"/>
						<outline text="}" created="Wed, 08 Jun 2022 18:19:20 GMT"/>
						</outline>
					<outline text="catch (err) {" created="Wed, 08 Jun 2022 18:19:21 GMT">
						<outline text="return (true); //6/8/22 by DW" created="Wed, 08 Jun 2022 18:19:33 GMT"/>
						<outline text="}" created="Wed, 08 Jun 2022 18:19:25 GMT"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function getItemPermalink (item) { ">
					<outline text="var rssguid = item [&quot;rss:guid&quot;], returnedval = undefined;"/>
					<outline text="if (rssguid !== undefined) {">
						<outline text="var atts = rssguid [&quot;@&quot;];"/>
						<outline text="if (atts !== undefined) { //3/22/23 by DW" created="Wed, 22 Mar 2023 14:12:33 GMT">
							<outline text="if (atts.ispermalink === undefined) {">
								<outline text="returnedval = rssguid [&quot;#&quot;];"/>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="if (utils.getBoolean (atts.ispermalink)) {">
									<outline text="returnedval = rssguid [&quot;#&quot;];"/>
									<outline text="}"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="}" created="Wed, 22 Mar 2023 14:12:42 GMT"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="if (returnedval !== undefined) {">
						<outline text="if (utils.beginsWith (returnedval, &quot;http&quot;)) {">
							<outline text="return (returnedval);"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="return (undefined);"/>
					<outline text="}"/>
					</outline>
				<outline text="function markdownProcess (markdowntext) {">
					<outline text="var htmltext = marked.parse (markdowntext);"/>
					<outline text="console.log (&quot;markdownProcess: htmltext == &quot; + htmltext);" isComment="true" created="Sat, 19 Feb 2022 15:43:18 GMT"/>
					<outline text="return (htmltext);" created="Sat, 19 Feb 2022 15:43:00 GMT"/>
					<outline text="}"/>
					</outline>
				<outline text="function emojiProcess (s) {">
					<outline text="function addSpan (code, name) {">
						<outline text="return (&quot;&lt;span class=\&quot;spRssEmoji\&quot;&gt;&quot; + code + &quot;&lt;/span&gt;&quot;);"/>
						<outline text="}"/>
						</outline>
					<outline text="return (emoji.emojify (s, undefined, addSpan));"/>
					<outline text="}"/>
					</outline>
				<outline text="function stringToNum (theString) { //return a number if we can convert, otherwise return string -- 8/23/25 by DW" created="Sat, 23 Aug 2025 15:01:44 GMT">
					<outline text="const num = Number (theString);" created="Sat, 23 Aug 2025 14:57:29 GMT"/>
					<outline text="if (num == NaN) {" created="Sat, 23 Aug 2025 15:02:32 GMT">
						<outline text="return (theString);" created="Sat, 23 Aug 2025 15:02:53 GMT"/>
						<outline text="}" created="Sat, 23 Aug 2025 15:02:46 GMT"/>
						</outline>
					<outline text="else {" created="Sat, 23 Aug 2025 15:02:46 GMT">
						<outline text="return (num);" created="Sat, 23 Aug 2025 15:03:03 GMT"/>
						<outline text="}" created="Sat, 23 Aug 2025 15:02:48 GMT"/>
						</outline>
					<outline text="}" created="Sat, 23 Aug 2025 15:01:56 GMT"/>
					</outline>
				<outline text="" created="Mon, 18 Jul 2022 15:58:19 GMT"/>
				<outline text="function convertFeedToOpml (theFeed) { //use this if you want to show an RSS feed in an outline" created="Fri, 19 Nov 2021 17:10:23 GMT">
					<outline text="var theOutline = {" created="Fri, 19 Nov 2021 17:20:00 GMT">
						<outline text="opml: {" created="Fri, 19 Nov 2021 17:22:35 GMT">
							<outline text="head: {" created="Fri, 19 Nov 2021 17:20:09 GMT">
								<outline text="title: theFeed.title" created="Fri, 19 Nov 2021 17:20:42 GMT"/>
								<outline text="}," created="Fri, 19 Nov 2021 17:20:13 GMT"/>
								</outline>
							<outline text="body: {" created="Fri, 19 Nov 2021 17:20:14 GMT">
								<outline text="subs: new Array ()" created="Fri, 19 Nov 2021 17:20:23 GMT"/>
								<outline text="}" created="Fri, 19 Nov 2021 17:20:17 GMT"/>
								</outline>
							<outline text="}" created="Fri, 19 Nov 2021 17:22:37 GMT"/>
							</outline>
						<outline text="}" created="Fri, 19 Nov 2021 17:20:08 GMT"/>
						</outline>
					<outline text="theFeed.items.forEach (function (item) {" created="Fri, 19 Nov 2021 17:22:13 GMT">
						<outline text="var linetext, subtext;" created="Fri, 19 Nov 2021 17:23:57 GMT"/>
						<outline text="if (item.title === undefined) {" created="Fri, 19 Nov 2021 17:23:57 GMT">
							<outline text="linetext = item.description;" created="Fri, 19 Nov 2021 17:24:22 GMT"/>
							<outline text="}" created="Fri, 19 Nov 2021 17:24:07 GMT"/>
							</outline>
						<outline text="else {" created="Fri, 19 Nov 2021 17:24:08 GMT">
							<outline text="linetext = item.title;" created="Fri, 19 Nov 2021 17:24:22 GMT"/>
							<outline text="subtext = item.description;" created="Fri, 19 Nov 2021 17:24:52 GMT"/>
							<outline text="}" created="Fri, 19 Nov 2021 17:24:09 GMT"/>
							</outline>
						<outline text="theOutline.opml.body.subs.push ({" created="Fri, 19 Nov 2021 17:22:58 GMT">
							<outline text="text: linetext," created="Fri, 19 Nov 2021 17:23:39 GMT"/>
							<outline text="type: &quot;link&quot;," created="Fri, 19 Nov 2021 17:25:33 GMT"/>
							<outline text="url: item.link" created="Fri, 19 Nov 2021 17:25:37 GMT"/>
							<outline text="});" created="Fri, 19 Nov 2021 17:23:10 GMT"/>
							</outline>
						<outline text="});" created="Fri, 19 Nov 2021 17:22:28 GMT"/>
						</outline>
					<outline text="return (opml.stringify (theOutline));" created="Fri, 19 Nov 2021 17:26:29 GMT"/>
					<outline text="}" created="Fri, 19 Nov 2021 17:10:33 GMT"/>
					</outline>
				<outline text="function convertFeed (oldFeed, whenstart) {" created="Fri, 19 Nov 2021 15:55:43 GMT">
					<outline text="Changes" isComment="true" created="Fri, 19 Nov 2021 16:46:10 GMT">
						<outline text="11/28/23; 3:41:08 PM by DW" created="Tue, 28 Nov 2023 20:41:07 GMT">
							<outline text="Added support for source:cloud element. " created="Tue, 28 Nov 2023 20:41:09 GMT"/>
							</outline>
						<outline text="7/14/22; 9:46:17 AM by DW" created="Thu, 14 Jul 2022 13:46:16 GMT">
							<outline text="Created a new item-level value called permalink. Previously we were getting the permalink and overwriting the guid value. Which is all well and good if the guid is a permalink. It's possible it's not, as illustrated by the feed below, where it's just an id, not a permalink, in which case we overwrite the guid with undefined. Not really good behavior. So now instead of doing that we copy it into the permalink value. " created="Thu, 14 Jul 2022 13:46:18 GMT">
								<outline text="http://scripting.com/userfeeds/davewiner.xml" created="Thu, 14 Jul 2022 13:49:05 GMT"/>
								</outline>
							</outline>
						<outline text="7/2/22; 10:40:36 AM by DW" created="Sat, 02 Jul 2022 14:40:36 GMT">
							<outline text="Added top level reader object with ctSecsToRead, the time it took to read the feed." created="Sat, 02 Jul 2022 14:40:36 GMT"/>
							</outline>
						<outline text="6/11/22; 4:55:29 PM by DW" created="Sat, 11 Jun 2022 20:55:28 GMT">
							<outline text="If the cloud element exists but is empty, delete it. " created="Sat, 11 Jun 2022 20:55:29 GMT"/>
							<outline text="Only allow url, type and length properties in enclosure objects." created="Sat, 11 Jun 2022 21:03:46 GMT"/>
							<outline text="Don't pass through enclosure properties whose value is null. " created="Sat, 11 Jun 2022 21:05:50 GMT"/>
							</outline>
						<outline text="3/6/22; 9:23:18 AM by DW" created="Sun, 06 Mar 2022 14:23:17 GMT">
							<outline text="feedparser puts channel-level elements in each of the items. so we have to look for source:account and source:localtime in the first item in the items array. " created="Sun, 06 Mar 2022 14:23:19 GMT"/>
							</outline>
						<outline text="11/19/21; 11:46:14 AM by DW" created="Fri, 19 Nov 2021 16:46:13 GMT">
							<outline text="The feedparser package puts lots of extra stuff in the structure it creates. We only allow elements that are in the RSS 2.0 spec or the source namespace, as a first cut. We will probably include stuff from other namespaces to make large classes of feeds work properly." created="Fri, 19 Nov 2021 16:46:14 GMT"/>
							<outline text="I did not initially include source:outline because it needs to be unmangled. I don't want to send it out in the form that feedreader creates it. " created="Fri, 19 Nov 2021 16:52:00 GMT"/>
							</outline>
						</outline>
					<outline text="var newFeed = new Object ();" created="Fri, 19 Nov 2021 15:57:09 GMT"/>
					<outline text="" created="Sun, 06 Mar 2022 14:43:22 GMT"/>
					<outline text="function convertOutline (jstruct) { ">
						<outline text="Changes" isComment="true">
							<outline text="5/16/19; 2:21:41 PM by DW">
								<outline text="Cribbed from davereader package."/>
								</outline>
							<outline text="10/16/14; 1:22:05 PM by DW">
								<outline text="The previous version of this routine stopped working. So I wrote this in a testbed, and it works. It appears the new structure generated by FeedParser is simpler than the old one. Not sure when it changed. This is scary stuff. I'd like for this stuff *not* to change, because this is boiler-room code. I've sent an email to Dan to inquire about any possible changes. I should review their change notes (will do).">
									<outline text="https://github.com/danmactough/node-feedparser"/>
									</outline>
								</outline>
							</outline>
						<outline text="var theNewOutline = {};"/>
						<outline text="if (jstruct [&quot;@&quot;] !== undefined) {">
							<outline text="utils.copyScalars (jstruct [&quot;@&quot;], theNewOutline);"/>
							<outline text="}"/>
							</outline>
						<outline text="if (jstruct [&quot;source:outline&quot;] !== undefined) {">
							<outline text="if (jstruct [&quot;source:outline&quot;] instanceof Array) {">
								<outline text="var theArray = jstruct [&quot;source:outline&quot;];"/>
								<outline text="theNewOutline.subs = [];"/>
								<outline text="theArray.forEach (function (item) {">
									<outline text="theNewOutline.subs.push (convertOutline (item));"/>
									<outline text="});"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="theNewOutline.subs = [">
									<outline text="convertOutline (jstruct [&quot;source:outline&quot;])"/>
									<outline text="];"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="return (theNewOutline);"/>
						<outline text="}"/>
						</outline>
					<outline text="function removeExtraAttributes (theNode) {" created="Sun, 27 Mar 2022 16:10:52 GMT">
						<outline text="Changes" isComment="true" created="Sun, 27 Mar 2022 16:11:03 GMT">
							<outline text="3/27/22; 12:11:08 PM by DW" created="Sun, 27 Mar 2022 16:11:07 GMT">
								<outline text="Old School adds flincalendar and permalink attributes to outlines. At some point these should not be exported, but to quickly fix the problem, I'm removing them here. " created="Sun, 27 Mar 2022 16:11:08 GMT"/>
								<outline text="I left permalink atts, they might be useful?" created="Sun, 27 Mar 2022 16:18:11 GMT"/>
								</outline>
							</outline>
						<outline text="function visit (theNode) {" created="Sun, 27 Mar 2022 16:24:28 GMT">
							<outline text="if (theNode.flincalendar !== undefined) {" created="Sun, 27 Mar 2022 16:12:54 GMT">
								<outline text="delete theNode.flincalendar;" created="Sun, 27 Mar 2022 16:13:16 GMT"/>
								<outline text="}" created="Sun, 27 Mar 2022 16:13:22 GMT"/>
								</outline>
							<outline text="if (theNode.permalink !== undefined) {" isComment="true" created="Sun, 27 Mar 2022 16:12:54 GMT">
								<outline text="delete theNode.flincalendar;" created="Sun, 27 Mar 2022 16:13:16 GMT"/>
								<outline text="}" created="Sun, 27 Mar 2022 16:13:22 GMT"/>
								</outline>
							<outline text="if (theNode.subs !== undefined) {" created="Sun, 27 Mar 2022 16:25:05 GMT">
								<outline text="theNode.subs.forEach (function (sub) {" created="Sun, 27 Mar 2022 16:25:17 GMT">
									<outline text="visit (sub);" created="Sun, 27 Mar 2022 16:25:32 GMT"/>
									<outline text="});" created="Sun, 27 Mar 2022 16:25:26 GMT"/>
									</outline>
								<outline text="}" created="Sun, 27 Mar 2022 16:25:15 GMT"/>
								</outline>
							<outline text="}" created="Sun, 27 Mar 2022 16:24:47 GMT"/>
							</outline>
						<outline text="visit (theNode);" created="Sun, 27 Mar 2022 16:24:48 GMT"/>
						<outline text="}" created="Sun, 27 Mar 2022 16:11:02 GMT"/>
						</outline>
					<outline text="function getHeadValuesFromFirstItem () { //3/6/22 by DW" created="Sun, 06 Mar 2022 14:26:11 GMT">
						<outline text="if (oldFeed.items.length &gt; 0) {" created="Sun, 06 Mar 2022 14:26:35 GMT">
							<outline text="var item = oldFeed.items [0];" created="Sun, 06 Mar 2022 14:26:46 GMT"/>
							<outline text="if (item.meta !== undefined) {" created="Sun, 06 Mar 2022 14:28:49 GMT">
								<outline text="if (item.meta [&quot;source:account&quot;] !== undefined) {" created="Sun, 06 Mar 2022 14:40:24 GMT">
									<outline text="var account = item.meta [&quot;source:account&quot;]; " created="Sun, 06 Mar 2022 14:41:28 GMT"/>
									<outline text="newFeed.accounts = new Object ();" created="Sun, 06 Mar 2022 14:44:28 GMT"/>
									<outline text="if (Array.isArray (account)) {">
										<outline text="account.forEach (function (item) {" created="Sun, 06 Mar 2022 15:08:46 GMT">
											<outline text="var service = item  [&quot;@&quot;].service" created="Sun, 06 Mar 2022 15:09:46 GMT"/>
											<outline text="var name = item [&quot;#&quot;];" created="Sun, 06 Mar 2022 14:42:48 GMT"/>
											<outline text="newFeed.accounts [service] = name;" created="Sun, 06 Mar 2022 14:44:38 GMT"/>
											<outline text="});" created="Sun, 06 Mar 2022 15:08:55 GMT"/>
											</outline>
										<outline text="}"/>
										</outline>
									<outline text="else {" created="Sun, 06 Mar 2022 15:07:43 GMT">
										<outline text="var service = account [&quot;@&quot;].service; //something like twitter" created="Sun, 06 Mar 2022 14:42:15 GMT"/>
										<outline text="var name = account [&quot;#&quot;];" created="Sun, 06 Mar 2022 14:42:48 GMT"/>
										<outline text="newFeed.accounts [service] = name;" created="Sun, 06 Mar 2022 14:44:38 GMT"/>
										<outline text="}" created="Sun, 06 Mar 2022 15:07:46 GMT"/>
										</outline>
									<outline text="}" created="Sun, 06 Mar 2022 14:40:46 GMT"/>
									</outline>
								<outline text="if (item.meta [&quot;source:localtime&quot;] !== undefined) {" created="Sun, 06 Mar 2022 14:40:24 GMT">
									<outline text="var localtime = item.meta [&quot;source:localtime&quot;]; " created="Sun, 06 Mar 2022 14:41:28 GMT"/>
									<outline text="newFeed.localtime = localtime [&quot;#&quot;];" created="Sun, 06 Mar 2022 14:44:38 GMT"/>
									<outline text="}" created="Sun, 06 Mar 2022 14:40:46 GMT"/>
									</outline>
								<outline text="if (item.meta [&quot;source:cloud&quot;] !== undefined) { //11/28/23 by DW" created="Sun, 06 Mar 2022 14:40:24 GMT">
									<outline text="const cloud = item.meta [&quot;source:cloud&quot;]; " created="Sun, 06 Mar 2022 14:41:28 GMT"/>
									<outline text="newFeed.cloudUrl = cloud [&quot;#&quot;];" created="Sun, 06 Mar 2022 14:44:38 GMT"/>
									<outline text="}" created="Sun, 06 Mar 2022 14:40:46 GMT"/>
									</outline>
								<outline text="if (item.meta [&quot;source:blogroll&quot;] !== undefined) { //3/14/24 by DW" created="Sun, 06 Mar 2022 14:40:24 GMT">
									<outline text="var blogroll = item.meta [&quot;source:blogroll&quot;]; " created="Sun, 06 Mar 2022 14:41:28 GMT"/>
									<outline text="newFeed.blogroll = blogroll [&quot;#&quot;];" created="Sun, 06 Mar 2022 14:44:38 GMT"/>
									<outline text="}" created="Sun, 06 Mar 2022 14:40:46 GMT"/>
									</outline>
								<outline text="if (item.meta [&quot;source:self&quot;] !== undefined) { //5/25/24 by DW" created="Sun, 06 Mar 2022 14:40:24 GMT">
									<outline text="var linkToSelf = item.meta [&quot;source:self&quot;]; " created="Sun, 06 Mar 2022 14:41:28 GMT"/>
									<outline text="newFeed.linkToSelf = linkToSelf [&quot;#&quot;];" created="Sun, 06 Mar 2022 14:44:38 GMT"/>
									<outline text="}" created="Sun, 06 Mar 2022 14:40:46 GMT"/>
									</outline>
								<outline text="if (item.meta [&quot;rss:site&quot;] !== undefined) { //8/22/25 by DW" created="Fri, 22 Aug 2025 13:14:16 GMT">
									<outline text="const linkToSite = item.meta [&quot;rss:site&quot;];" created="Fri, 22 Aug 2025 13:16:05 GMT"/>
									<outline text="const linkToNamespaces = linkToSite [&quot;@&quot;];" created="Fri, 22 Aug 2025 13:17:07 GMT"/>
									<outline text="var flFoundNamespace = false;" created="Fri, 22 Aug 2025 13:18:06 GMT"/>
									<outline text="for (var x in linkToNamespaces) {" created="Fri, 22 Aug 2025 13:18:20 GMT">
										<outline text="if (linkToNamespaces [x] == wpNamespace) {" created="Fri, 22 Aug 2025 13:18:28 GMT">
											<outline text="flFoundNamespace = true;" created="Fri, 22 Aug 2025 13:18:51 GMT"/>
											<outline text="}" created="Fri, 22 Aug 2025 13:18:46 GMT"/>
											</outline>
										<outline text="}" created="Fri, 22 Aug 2025 13:18:27 GMT"/>
										</outline>
									<outline text="if (flFoundNamespace) {" created="Fri, 22 Aug 2025 13:17:07 GMT">
										<outline text="newFeed.wpSiteId = stringToNum (linkToSite [&quot;#&quot;]);" created="Sun, 06 Mar 2022 14:44:38 GMT"/>
										<outline text="newFeed.wpSiteId = linkToSite [&quot;#&quot;];" isComment="true" created="Sun, 06 Mar 2022 14:44:38 GMT"/>
										<outline text="}" created="Fri, 22 Aug 2025 13:19:41 GMT"/>
										</outline>
									<outline text="}" created="Fri, 22 Aug 2025 13:15:45 GMT"/>
									</outline>
								<outline text="}" created="Sun, 06 Mar 2022 14:28:56 GMT"/>
								</outline>
							<outline text="}" created="Sun, 06 Mar 2022 14:26:42 GMT"/>
							</outline>
						<outline text="}" created="Sun, 06 Mar 2022 14:26:16 GMT"/>
						</outline>
					<outline text="" created="Sun, 06 Mar 2022 14:26:11 GMT"/>
					<outline text="console.log (&quot;convertFeed: oldFeed == &quot; + utils.jsonStringify (oldFeed));" isComment="true" created="Sun, 06 Mar 2022 14:20:05 GMT"/>
					<outline text="for (var x in oldFeed.head) {" created="Fri, 19 Nov 2021 16:00:27 GMT">
						<outline text="let val = oldFeed.head [x];" created="Fri, 19 Nov 2021 16:02:02 GMT"/>
						<outline text="if (val != null) {" created="Fri, 19 Nov 2021 16:02:13 GMT">
							<outline text="allowedHeadNames.forEach (function (name) {" created="Fri, 19 Nov 2021 16:41:41 GMT">
								<outline text="if (x == name) {" created="Fri, 19 Nov 2021 16:42:07 GMT">
									<outline text="newFeed [x] = val;" created="Fri, 19 Nov 2021 16:00:48 GMT"/>
									<outline text="}" created="Fri, 19 Nov 2021 16:42:13 GMT"/>
									</outline>
								<outline text="});" created="Fri, 19 Nov 2021 16:42:01 GMT"/>
								</outline>
							<outline text="}" created="Fri, 19 Nov 2021 16:02:19 GMT"/>
							</outline>
						<outline text="}" created="Fri, 19 Nov 2021 16:00:40 GMT"/>
						</outline>
					<outline text="" created="Sun, 06 Mar 2022 14:25:45 GMT"/>
					<outline text="getHeadValuesFromFirstItem (); //3/6/22 by DW" created="Sun, 06 Mar 2022 14:25:45 GMT"/>
					<outline text="" created="Sun, 06 Mar 2022 14:25:46 GMT"/>
					<outline text="if (newFeed.image !== undefined) { //5/17/22 by DW" created="Tue, 17 May 2022 15:18:01 GMT">
						<outline text="if (isEmptyObject (newFeed.image)) {" created="Fri, 19 Nov 2021 17:12:24 GMT">
							<outline text="delete newFeed.image;" created="Fri, 19 Nov 2021 17:16:39 GMT"/>
							<outline text="}" created="Fri, 19 Nov 2021 17:16:43 GMT"/>
							</outline>
						<outline text="}" created="Tue, 17 May 2022 15:18:08 GMT"/>
						</outline>
					<outline text="if (newFeed.cloud !== undefined) { //6/11/22 by DW" created="Tue, 17 May 2022 15:18:01 GMT">
						<outline text="if (isEmptyObject (newFeed.cloud)) {" created="Fri, 19 Nov 2021 17:12:24 GMT">
							<outline text="delete newFeed.cloud;" created="Fri, 19 Nov 2021 17:16:39 GMT"/>
							<outline text="}" created="Fri, 19 Nov 2021 17:16:43 GMT"/>
							</outline>
						<outline text="}" created="Tue, 17 May 2022 15:18:08 GMT"/>
						</outline>
					<outline text="" created="Sat, 02 Jul 2022 14:38:59 GMT"/>
					<outline text="newFeed.reader = { //7/2/22 by DW" created="Sat, 02 Jul 2022 14:39:00 GMT">
						<outline text="app: myProductName + &quot; v&quot; + myVersion + &quot; (&quot; + process.platform + &quot;)&quot;," created="Sat, 02 Jul 2022 14:39:39 GMT"/>
						<outline text="ctSecsToRead: utils.secondsSince (whenstart)" created="Sat, 02 Jul 2022 14:40:13 GMT"/>
						<outline text="};" created="Sat, 02 Jul 2022 14:39:08 GMT"/>
						</outline>
					<outline text="" created="Fri, 19 Nov 2021 16:02:47 GMT"/>
					<outline text="newFeed.items = new Array ();" created="Fri, 19 Nov 2021 16:08:19 GMT"/>
					<outline text="oldFeed.items.forEach (function (item) {" created="Fri, 19 Nov 2021 16:02:48 GMT">
						<outline text="var newItem = new Object ();" created="Fri, 19 Nov 2021 16:44:26 GMT"/>
						<outline text="for (var x in item) {" created="Fri, 19 Nov 2021 16:16:21 GMT">
							<outline text="val = item [x];" created="Fri, 19 Nov 2021 16:43:17 GMT"/>
							<outline text="if (val != null) {" created="Fri, 19 Nov 2021 16:43:22 GMT">
								<outline text="allowedItemNames.forEach (function (name) {" created="Fri, 19 Nov 2021 16:41:41 GMT">
									<outline text="if (x == name) {" created="Fri, 19 Nov 2021 16:42:07 GMT">
										<outline text="if (x == &quot;source:outline&quot;) {" created="Sun, 06 Mar 2022 15:52:46 GMT">
											<outline text="val = convertOutline (item [&quot;source:outline&quot;]);"/>
											<outline text="removeExtraAttributes (val); //3/27/22 by DW" created="Sun, 27 Mar 2022 16:10:14 GMT"/>
											<outline text="newItem.outline = val;" created="Fri, 19 Nov 2021 16:00:48 GMT"/>
											<outline text="}" created="Sun, 06 Mar 2022 15:53:34 GMT"/>
											</outline>
										<outline text="else {" created="Mon, 07 Mar 2022 15:40:36 GMT">
											<outline text="if (x == &quot;enclosures&quot;) {" created="Sun, 20 Mar 2022 15:49:21 GMT">
												<outline text="if (item.enclosures.length &gt; 0) {" created="Sun, 20 Mar 2022 15:50:34 GMT">
													<outline text="newItem.enclosure = item.enclosures [0];" created="Sun, 20 Mar 2022 16:46:04 GMT"/>
													<outline text="}" created="Sun, 20 Mar 2022 15:50:45 GMT"/>
													</outline>
												<outline text="}" created="Sun, 20 Mar 2022 15:49:32 GMT"/>
												</outline>
											<outline text="else {" created="Sun, 20 Mar 2022 15:49:33 GMT">
												<outline text="newItem [x] = val;" created="Fri, 19 Nov 2021 16:00:48 GMT"/>
												<outline text="}" created="Sun, 20 Mar 2022 15:49:36 GMT"/>
												</outline>
											<outline text="}" created="Mon, 07 Mar 2022 15:40:38 GMT"/>
											</outline>
										<outline text="}" created="Fri, 19 Nov 2021 16:42:13 GMT"/>
										</outline>
									<outline text="});" created="Fri, 19 Nov 2021 16:42:01 GMT"/>
									</outline>
								<outline text="}" created="Fri, 19 Nov 2021 16:43:30 GMT"/>
								</outline>
							<outline text="}" created="Fri, 19 Nov 2021 16:43:13 GMT"/>
							</outline>
						<outline text="newItem.permalink = getItemPermalink (item); //7/14/22 by DW" created="Fri, 19 Nov 2021 16:55:02 GMT"/>
						<outline text="newItem.guid = getItemPermalink (item);" isComment="true" created="Fri, 19 Nov 2021 16:55:02 GMT"/>
						<outline text="if (newItem.source !== undefined) { //5/17/22 by DW" created="Tue, 17 May 2022 15:18:28 GMT">
							<outline text="if (isEmptyObject (newItem.source)) {" created="Fri, 19 Nov 2021 17:12:24 GMT">
								<outline text="delete newItem.source;" created="Fri, 19 Nov 2021 17:16:39 GMT"/>
								<outline text="}" created="Fri, 19 Nov 2021 17:16:43 GMT"/>
								</outline>
							<outline text="}" created="Tue, 17 May 2022 15:18:29 GMT"/>
							</outline>
						<outline text="" created="Sat, 11 Jun 2022 21:00:50 GMT"/>
						<outline text="if (newItem.enclosure !== undefined) { //6/11/22 by DW" created="Sat, 11 Jun 2022 20:57:23 GMT">
							<outline text="var enc = new Object ();" created="Sat, 11 Jun 2022 21:01:46 GMT"/>
							<outline text="for (var x in newItem.enclosure) {" created="Sat, 11 Jun 2022 20:57:45 GMT">
								<outline text="allowedEnclosureNames.forEach (function (name) {" created="Sat, 11 Jun 2022 20:57:45 GMT">
									<outline text="if (x == name) {" created="Sat, 11 Jun 2022 20:59:03 GMT">
										<outline text="if (newItem.enclosure [x] != null) {" created="Sat, 11 Jun 2022 21:04:40 GMT">
											<outline text="enc [x] = newItem.enclosure [x];" created="Sat, 11 Jun 2022 21:01:59 GMT"/>
											<outline text="}" created="Sat, 11 Jun 2022 21:04:46 GMT"/>
											</outline>
										<outline text="}" created="Sat, 11 Jun 2022 20:59:06 GMT"/>
										</outline>
									<outline text="});" created="Sat, 11 Jun 2022 20:58:13 GMT"/>
									</outline>
								<outline text="}" created="Sat, 11 Jun 2022 20:58:44 GMT"/>
								</outline>
							<outline text="newItem.enclosure = enc;"/>
							<outline text="}" created="Sat, 11 Jun 2022 20:57:32 GMT"/>
							</outline>
						<outline text="" created="Mon, 18 Jul 2022 15:59:22 GMT"/>
						<outline text="if (item [&quot;source:markdown&quot;] !== undefined) { //7/18/22 by DW" created="Mon, 18 Jul 2022 15:55:22 GMT">
							<outline text="let markdowntext = item [&quot;source:markdown&quot;] [&quot;#&quot;];" created="Mon, 18 Jul 2022 15:57:10 GMT"/>
							<outline text="newItem.description = markdownProcess (emojiProcess (markdowntext));" created="Mon, 18 Jul 2022 15:57:10 GMT"/>
							<outline text="newItem.markdowntext = markdowntext; //8/25/22 by DW" created="Thu, 25 Aug 2022 16:25:54 GMT"/>
							<outline text="}" created="Mon, 18 Jul 2022 15:55:39 GMT"/>
							</outline>
						<outline text="" created="Fri, 22 Aug 2025 13:35:15 GMT"/>
						<outline text="if (item [&quot;rss:post-id&quot;] !== undefined) { //8/22/25 by DW" created="Mon, 18 Jul 2022 15:55:22 GMT">
							<outline text="const linkToPostId = item [&quot;rss:post-id&quot;];" created="Fri, 22 Aug 2025 13:16:05 GMT"/>
							<outline text="const linkToNamespaces = linkToPostId [&quot;@&quot;];" created="Fri, 22 Aug 2025 13:17:07 GMT"/>
							<outline text="var flFoundNamespace = false;" created="Fri, 22 Aug 2025 13:18:06 GMT"/>
							<outline text="for (var x in linkToNamespaces) {" created="Fri, 22 Aug 2025 13:18:20 GMT">
								<outline text="if (linkToNamespaces [x] == wpNamespace) {" created="Fri, 22 Aug 2025 13:18:28 GMT">
									<outline text="flFoundNamespace = true;" created="Fri, 22 Aug 2025 13:18:51 GMT"/>
									<outline text="}" created="Fri, 22 Aug 2025 13:18:46 GMT"/>
									</outline>
								<outline text="}" created="Fri, 22 Aug 2025 13:18:27 GMT"/>
								</outline>
							<outline text="if (flFoundNamespace) {" created="Fri, 22 Aug 2025 13:17:07 GMT">
								<outline text="newItem.wpPostId = stringToNum (linkToPostId [&quot;#&quot;]);" created="Sun, 06 Mar 2022 14:44:38 GMT"/>
								<outline text="newItem.wpPostId = linkToPostId [&quot;#&quot;];" isComment="true" created="Sun, 06 Mar 2022 14:44:38 GMT"/>
								<outline text="}" created="Fri, 22 Aug 2025 13:19:41 GMT"/>
								</outline>
							<outline text="}" created="Mon, 18 Jul 2022 15:55:39 GMT"/>
							</outline>
						<outline text="" created="Mon, 18 Jul 2022 15:55:22 GMT"/>
						<outline text="newFeed.items.push (newItem);" created="Fri, 19 Nov 2021 16:44:44 GMT"/>
						<outline text="});" created="Fri, 19 Nov 2021 16:03:02 GMT"/>
						</outline>
					<outline text="" created="Fri, 19 Nov 2021 16:04:38 GMT"/>
					<outline text="return (newFeed);" created="Fri, 19 Nov 2021 16:04:39 GMT"/>
					<outline text="}" created="Fri, 19 Nov 2021 15:55:55 GMT"/>
					</outline>
				<outline text="" created="Sat, 05 Mar 2022 17:33:04 GMT"/>
				<outline text="function readFeed (url, callback) {" created="Fri, 19 Nov 2021 15:54:09 GMT">
					<outline text="const whenstart = new Date ();" created="Sat, 02 Jul 2022 14:47:19 GMT"/>
					<outline text="davefeedread.parseUrl (url, config.timeOutSecs, function (err, theFeed) {">
						<outline text="if (err) {" created="Fri, 19 Nov 2021 15:55:07 GMT">
							<outline text="callback (err);" created="Fri, 19 Nov 2021 15:55:11 GMT"/>
							<outline text="}" created="Fri, 19 Nov 2021 15:55:15 GMT"/>
							</outline>
						<outline text="else {" created="Fri, 19 Nov 2021 15:55:16 GMT">
							<outline text="callback (undefined, convertFeed (theFeed, whenstart));" created="Fri, 19 Nov 2021 15:55:26 GMT"/>
							<outline text="}" created="Fri, 19 Nov 2021 15:55:18 GMT"/>
							</outline>
						<outline text="});" created="Fri, 19 Nov 2021 15:55:02 GMT"/>
						</outline>
					<outline text="}" created="Fri, 19 Nov 2021 15:54:21 GMT"/>
					</outline>
				</outline>
			<outline text="docs/invitetotesters.md" isComment="true" created="Thu, 07 Apr 2022 15:17:59 GMT">
				<outline text="# Invite to testers" created="Sat, 11 Jun 2022 19:41:45 GMT"/>
				<outline text="I've been working on a new Node package meant to be the absolutely final top-level API for reading feeds in a Node.js app, and to serve as reference code for other platforms."/>
				<outline text="It takes all the history, in theory, and wraps it up into a concise, thoughtfully designed JavaScript object that makes no compromises to history. It won't reflect every feature in every feed out there. Make the job of using feeds as simple as it should be."/>
				<outline text="Considering that RSS 2.0 came out in September 2002, which is almost 20 years ago, and there hasn't been any activity in the community to try to fix these problems since feedparser came out, who can object if I try to simplify this making it possible to build on this foundation."/>
				<outline text="I also have a new feed reader built on top of this, that's not yet ready for testing. It handles titled and untitled posts, HTML styling, links, enclosures, unlimited length posts."/>
				</outline>
			<outline text="example/test.js" created="Sat, 05 Mar 2022 17:17:16 GMT">
				<outline text="var myProductName = &quot;test&quot;; myVersion = &quot;0.4.0&quot;;    "/>
				<outline text="" created="Sat, 05 Mar 2022 17:19:07 GMT"/>
				<outline text="const fs = require (&quot;fs&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const utils = require (&quot;daveutils&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const reallysimple = require (&quot;reallysimple&quot;);" created="Sat, 05 Mar 2022 17:19:07 GMT"/>
				<outline text="const reallysimple = require (&quot;../reallysimple.js&quot;);" isComment="true" created="Sat, 05 Mar 2022 17:19:07 GMT"/>
				<outline text="" created="Sat, 05 Mar 2022 17:19:44 GMT"/>
				<outline text="const urlfeed = &quot;http://data.feedland.org/feeds/davewiner.xml&quot;;" created="Sat, 05 Mar 2022 17:19:45 GMT"/>
				<outline text="const urlfeed = &quot;https://rss.nytimes.com/services/xml/rss/nyt/World.xml&quot;;" isComment="true" created="Sat, 05 Mar 2022 17:19:45 GMT"/>
				<outline text="const urlfeed = &quot;https://rss.nytimes.com/services/xml/rss/nyt/Movies.xml&quot;;" isComment="true" created="Sat, 05 Mar 2022 17:19:45 GMT"/>
				<outline text="const urlfeed = &quot;http://www.kenrockwell.com/rss.php&quot;;" isComment="true" created="Sat, 05 Mar 2022 17:19:45 GMT"/>
				<outline text="const urlfeed = &quot;http://feedland.org/twitterfeeds/cluelessnewbie/rss.xml&quot;;" isComment="true" created="Sat, 05 Mar 2022 17:19:45 GMT"/>
				<outline text="const urlfeed = &quot;https://blog.docuverse.com/feed/&quot;;" isComment="true" created="Sat, 05 Mar 2022 17:19:45 GMT"/>
				<outline text="const urlfeed = &quot;http://scripting.com/rss.xml&quot;;" isComment="true" created="Sat, 05 Mar 2022 17:19:45 GMT"/>
				<outline text="const urlfeed = &quot;http://scripting.com/publicfolder/tmp/rss.xml&quot;;" isComment="true" created="Sat, 05 Mar 2022 17:19:45 GMT"/>
				<outline text="" created="Sat, 05 Mar 2022 17:19:59 GMT"/>
				<outline text="reallysimple.readFeed (urlfeed, function (err, theFeed) {" created="Sat, 05 Mar 2022 17:19:59 GMT">
					<outline text="if (err) {" created="Sat, 05 Mar 2022 17:27:06 GMT">
						<outline text="console.log (err.message);" created="Sat, 05 Mar 2022 17:27:08 GMT"/>
						<outline text="}" created="Sat, 05 Mar 2022 17:27:14 GMT"/>
						</outline>
					<outline text="else {" created="Sat, 05 Mar 2022 17:27:15 GMT">
						<outline text="var jsontext = utils.jsonStringify (theFeed);" created="Mon, 07 Mar 2022 15:36:15 GMT"/>
						<outline text="console.log (&quot;theFeed == &quot; + jsontext);" created="Sat, 05 Mar 2022 17:26:42 GMT"/>
						<outline text="fs.writeFile (&quot;test.json&quot;, jsontext, function (err) {" created="Mon, 07 Mar 2022 15:36:03 GMT">
							<outline text="if (err) {" created="Mon, 07 Mar 2022 15:36:43 GMT">
								<outline text="console.log (err.message);" created="Mon, 07 Mar 2022 15:36:57 GMT"/>
								<outline text="}" created="Mon, 07 Mar 2022 15:36:46 GMT"/>
								</outline>
							<outline text="});" created="Mon, 07 Mar 2022 15:36:38 GMT"/>
							</outline>
						<outline text="}" created="Sat, 05 Mar 2022 17:27:17 GMT"/>
						</outline>
					<outline text="});" created="Sat, 05 Mar 2022 17:20:19 GMT"/>
					</outline>
				</outline>
			<outline text="example/package.json" created="Mon, 07 Mar 2022 15:44:34 GMT">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;test&quot;, "/>
					<outline text="&quot;description&quot;: &quot;Testing the reallysimple package&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.4.0&quot;, "/>
					<outline text="&quot;author&quot;: &quot;Dave Winer &lt;dave@scripting.com&gt;&quot;,"/>
					<outline text="&quot;license&quot;: &quot;MIT&quot;,"/>
					<outline text="&quot;main&quot;: &quot;test.js&quot;,"/>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;marked&quot;: &quot;3.0.8&quot;,"/>
						<outline text="&quot;node-emoji&quot;: &quot;*&quot;,"/>
						<outline text="&quot;daveutils&quot;: &quot;*&quot;,"/>
						<outline text="&quot;reallysimple&quot;: &quot;*&quot;"/>
						<outline text="},"/>
						</outline>
					<outline text="&quot;engines&quot;: {">
						<outline text="&quot;node&quot;: &quot;*&quot;"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="example/test2.js" isComment="true" created="Thu, 03 Nov 2022 13:51:25 GMT">
				<outline text="const reallysimple = require (&quot;reallysimple&quot;);"/>
				<outline text="const urlFeed = &quot;https://rss.nytimes.com/services/xml/rss/nyt/World.xml&quot;;"/>
				<outline text="reallysimple.readFeed (urlFeed, function (err, theFeed) {">
					<outline text="if (err) {">
						<outline text="console.log (err.message);"/>
						<outline text="}"/>
						</outline>
					<outline text="else {">
						<outline text="console.log (JSON.stringify (theFeed, undefined, 4));"/>
						<outline text="}"/>
						</outline>
					<outline text="});"/>
					</outline>
				</outline>
			<outline text="readme.md" created="Sat, 05 Mar 2022 16:54:13 GMT">
				<outline text="# reallysimple" created="Sat, 05 Mar 2022 16:54:15 GMT">
					<outline text="A &lt;a href=&quot;https://www.npmjs.com/package/reallysimple&quot;&gt;Node package&lt;/a&gt; that reads RSS-like feeds and calls back with a simple, consistent JavaScript object. Easy to use, hides the history." created="Sat, 11 Jun 2022 15:59:23 GMT"/>
					</outline>
				<outline text="#### Code example" created="Sat, 11 Jun 2022 16:24:18 GMT">
					<outline text="I always like to see the code first..." created="Sat, 11 Jun 2022 16:20:10 GMT"/>
					<outline text="&lt;%includeExample (&quot;example1&quot;)%&gt;"/>
					<outline text="This is &lt;a href=&quot;https://github.com/scripting/reallysimple/blob/main/example/test.json&quot;&gt;what you see&lt;/a&gt; when you run the code. " created="Mon, 07 Mar 2022 15:10:30 GMT"/>
					</outline>
				<outline text="#### Why?" created="Sat, 11 Jun 2022 16:00:30 GMT">
					<outline text="I needed a simple routine to call when I wanted to read a feed. " created="Sat, 11 Jun 2022 16:00:36 GMT"/>
					</outline>
				<outline text="#### What formats are supported?" created="Thu, 17 Mar 2022 15:42:49 GMT">
					<outline text="RSS, Atom, and RDF." created="Thu, 17 Mar 2022 15:42:57 GMT"/>
					</outline>
				<outline text="#### Demo" created="Thu, 28 Jul 2022 14:15:48 GMT">
					<outline text="Here's a &lt;a href=&quot;http://feeder.scripting.com/returnjson?feedurl=https%3A%2F%2Frss.nytimes.com%2Fservices%2Fxml%2Frss%2Fnyt%2FTheater.xml&quot;&gt;demo app&lt;/a&gt; that runs a feed through reallySimple. " created="Thu, 28 Jul 2022 14:15:51 GMT"/>
					</outline>
				<outline text="#### tinyFeedReader" created="Sat, 05 Jul 2025 21:20:42 GMT">
					<outline text="&lt;a href=&quot;https://github.com/scripting/tinyFeedReader&quot;&gt;tinyFeedReader&lt;/a&gt; is a useful Node app that builds on the reallySimple package." created="Sat, 05 Jul 2025 21:20:48 GMT"/>
					</outline>
				<outline text="#### What we build on" created="Mon, 07 Mar 2022 15:25:06 GMT">
					<outline text="Thanks to Dan MacTough for the &lt;a href=&quot;https://www.npmjs.com/package/feedparser&quot;&gt;feedparser&lt;/a&gt; package." created="Mon, 07 Mar 2022 15:25:07 GMT"/>
					</outline>
				<outline text="#### Comments, questions?" created="Mon, 07 Mar 2022 15:26:41 GMT">
					<outline text="Post comments and questions in the &lt;a href=&quot;https://github.com/scripting/reallysimple/issues/new&quot;&gt;issues section&lt;/a&gt; of this repo." created="Mon, 07 Mar 2022 15:26:47 GMT"/>
					</outline>
				</outline>
			</outline>
		<outline text="dropbox:miami:pagepark:domains:reallysimple.org:" created="Sun, 05 Jun 2022 16:02:10 GMT">
			<outline text="config.json" created="Sun, 15 Aug 2021 02:24:25 GMT">
				<outline text="{">
					<outline text="&quot;urlOpmlTemplate&quot;: &quot;http://scripting.com/code/reallysimple/templates/opml/template.txt&quot;" created="Tue, 17 Aug 2021 20:45:43 GMT"/>
					<outline text="}" created="Tue, 17 Aug 2021 20:45:26 GMT"/>
					</outline>
				</outline>
			</outline>
		<outline text="/scripting.com/code/reallysimple/templates/opml/">
			<outline text="code.js">
				<outline text="var appConsts = {">
					<outline text="domain: stringNthField (window.location.href, &quot;/&quot;, 3)"/>
					<outline text="};"/>
					</outline>
				<outline text="var savedState = { //9/22/17 by DW">
					<outline text="expansionStates: {">
						<outline text="}"/>
						</outline>
					<outline text="};"/>
					</outline>
				<outline text="function collapseEverything () {">
					<outline text="$(&quot;.aOutlineWedgeLink i&quot;).each (function () {">
						<outline text="var id = $(this).attr (&quot;id&quot;); //something like idOutlineWedge17"/>
						<outline text="var idnum = stringDelete (id, 1, &quot;idOutlineWedge&quot;.length);"/>
						<outline text="if (idnum != 0) {">
							<outline text="var idWedge = &quot;#idOutlineWedge&quot; + idnum;"/>
							<outline text="var idLevel = &quot;#idOutlineLevel&quot; + idnum;"/>
							<outline text="" isComment="true"/>
							<outline text="console.log (&quot;idWedge == &quot; + idWedge + &quot;, idLevel == &quot; + idLevel);" isComment="true"/>
							<outline text="" isComment="true"/>
							<outline text="$(idWedge).attr (&quot;class&quot;, &quot;fa fa-caret-right&quot;);"/>
							<outline text="$(idWedge).css (&quot;color&quot;, &quot;black&quot;);"/>
							<outline text="$(idLevel).css (&quot;display&quot;, &quot;none&quot;);"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function saveState () { //9/22/17 by DW">
					<outline text="localStorage.savedState = jsonStringify (savedState);"/>
					<outline text="console.log (&quot;saveState: localStorage.savedState == &quot; + localStorage.savedState);"/>
					<outline text="}"/>
					</outline>
				<outline text="function restoreExpansionState () { //9/26/17 by DW">
					<outline text="try {">
						<outline text="if (savedState.expansionStates [window.location.href] !== undefined) {">
							<outline text="collapseEverything ();"/>
							<outline text="applyExpansionState (savedState.expansionStates [window.location.href]);"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="catch (err) {">
						<outline text="console.log (&quot;restoreExpansionState: err.message == &quot; + err.message);"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function getOpmlHeadElements (xstruct) {">
					<outline text="var adropml = xmlGetAddress (xstruct, &quot;opml&quot;);" created="Wed, 30 Oct 2013 17:54:25 GMT" pgfnum="30678"/>
					<outline text="var adrhead = xmlGetAddress (adropml, &quot;head&quot;);" created="Wed, 30 Oct 2013 17:54:25 GMT" pgfnum="30678"/>
					<outline text="return (xmlGetSubValues (adrhead));"/>
					<outline text="}"/>
					</outline>
				<outline text="function startDisqus (disqusGroup) {">
					<outline text="(function() {">
						<outline text="var dsq = document.createElement ('script'); dsq.type = 'text/javascript'; dsq.async = true;"/>
						<outline text="dsq.src = '//' + disqusGroup + '.disqus.com/embed.js';"/>
						<outline text="(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);"/>
						<outline text="})();"/>
						</outline>
					<outline text="(function() {">
						<outline text="var s = document.createElement('script'); s.async = true;"/>
						<outline text="s.type = 'text/javascript';"/>
						<outline text="s.src = '//' + disqusGroup + '.disqus.com/count.js';"/>
						<outline text="(document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);"/>
						<outline text="}());"/>
						</outline>
					<outline text="}"/>
					<outline text=""/>
					</outline>
				<outline text="function typeToClass (type) {">
					<outline text="switch (type) {">
						<outline text="case &quot;blogpost&quot;:">
							<outline text="return (&quot;divtypeblogpost&quot;);"/>
							</outline>
						<outline text="case &quot;gist&quot;:">
							<outline text="return (&quot;divtypegist&quot;);"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="return (&quot;divtypedefault&quot;);"/>
					<outline text="}"/>
					</outline>
				<outline text="function readGlossary (urlOpmlFile, glossary, callback) {">
					<outline text="var whenstart = new Date ();"/>
					<outline text="if ((urlOpmlFile !== undefined) &amp;&amp; (urlOpmlFile.length &gt; 0)) {">
						<outline text="readHttpFileThruProxy (urlOpmlFile, undefined, function (opmltext) {">
							<outline text="if (opmltext != undefined) {">
								<outline text="var xstruct = $($.parseXML (opmltext)), ctread = 0;"/>
								<outline text="var adropml = xmlGetAddress (xstruct, &quot;opml&quot;);" created="Wed, 30 Oct 2013 17:54:25 GMT" pgfnum="30678"/>
								<outline text="var adrbody = xmlGetAddress (adropml, &quot;body&quot;);" created="Wed, 30 Oct 2013 17:54:25 GMT" pgfnum="30678"/>
								<outline text="xmlOneLevelVisit (adrbody, function (adrx) {" created="Tue, 26 Nov 2013 16:56:00 GMT" pgfnum="32314">
									<outline text="if (!xmlIsComment (adrx)) {" created="Wed, 06 Nov 2013 15:29:41 GMT" pgfnum="30984">
										<outline text="var name = xmlGetTextAtt (adrx);" created="Wed, 06 Nov 2013 13:33:56 GMT" pgfnum="30927"/>
										<outline text="if (name.length &gt; 0) {" created="Wed, 06 Nov 2013 13:38:57 GMT" pgfnum="30933">
											<outline text="var subtext = xmlGetSubText (adrx, false); //8/11/16 by DW -- don't add tabs and newlines to the glossary text" created="Wed, 08 Jan 2014 16:34:38 GMT" pgfnum="35513"/>
											<outline text="console.log (&quot;readGlossary: &quot; + name + &quot; == &quot; + subtext);" isComment="true"/>
											<outline text="ctread++;"/>
											<outline text="glossary [name] = subtext;" created="Wed, 06 Nov 2013 15:01:28 GMT" pgfnum="30982"/>
											<outline text="}" created="Wed, 06 Nov 2013 13:39:05 GMT" pgfnum="30934"/>
											</outline>
										<outline text="}" created="Wed, 06 Nov 2013 15:29:51 GMT" pgfnum="30985"/>
										</outline>
									<outline text="return (true);" created="Tue, 26 Nov 2013 17:10:43 GMT" pgfnum="32320"/>
									<outline text="});" created="Tue, 26 Nov 2013 16:56:16 GMT" pgfnum="32318"/>
									</outline>
								<outline text="console.log (&quot;readGlossary: read &quot; + ctread + &quot; items in &quot; + secondsSince (whenstart) + &quot; secs.&quot;);"/>
								<outline text="}"/>
								</outline>
							<outline text="if (callback !== undefined) {">
								<outline text="callback ();"/>
								<outline text="}"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="else {">
						<outline text="if (callback !== undefined) {">
							<outline text="callback ();"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function getHtmlFromOutline (theOutline) { //8/19/21 by DW" created="Thu, 19 Aug 2021 20:32:51 GMT">
					<outline text="var htmltext = &quot;&quot;, indentlevel = 0;" created="Thu, 19 Aug 2021 20:33:44 GMT"/>
					<outline text="function add (s) {" created="Thu, 19 Aug 2021 20:35:34 GMT">
						<outline text="if (s !== undefined) {" created="Thu, 19 Aug 2021 20:38:11 GMT">
							<outline text="htmltext += filledString (&quot;\t&quot;, indentlevel) + s + &quot;\n&quot;;" created="Thu, 19 Aug 2021 20:35:39 GMT"/>
							<outline text="}" created="Thu, 19 Aug 2021 20:38:15 GMT"/>
							</outline>
						<outline text="}" created="Thu, 19 Aug 2021 20:36:11 GMT"/>
						</outline>
					<outline text="function addLevel (subs) {" created="Thu, 19 Aug 2021 20:36:24 GMT">
						<outline text="if (subs !== undefined) {" created="Thu, 19 Aug 2021 20:37:32 GMT">
							<outline text="subs.forEach (function (sub) {" created="Thu, 19 Aug 2021 20:36:45 GMT">
								<outline text="add (sub.text);" created="Thu, 19 Aug 2021 20:37:53 GMT"/>
								<outline text="addLevel (sub.subs);" created="Thu, 19 Aug 2021 20:38:06 GMT"/>
								<outline text="});" created="Thu, 19 Aug 2021 20:36:54 GMT"/>
								</outline>
							<outline text="}" created="Thu, 19 Aug 2021 20:37:39 GMT"/>
							</outline>
						<outline text="}" created="Thu, 19 Aug 2021 20:36:40 GMT"/>
						</outline>
					<outline text="addLevel (theOutline.subs);" created="Thu, 19 Aug 2021 20:36:56 GMT"/>
					<outline text="return (htmltext);" created="Thu, 19 Aug 2021 20:33:44 GMT"/>
					<outline text="}" created="Thu, 19 Aug 2021 20:32:58 GMT"/>
					</outline>
				<outline text="function viewTypedOutline (head, theOutline, callback) {">
					<outline text="function ifDefinedSet (id, val) {">
						<outline text="if (val !== undefined) {">
							<outline text="$(&quot;#&quot; + id).html (val);"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="function dateString (theDate) {">
						<outline text="Changes" isComment="true" created="Wed, 18 Aug 2021 14:30:20 GMT">
							<outline text="8/18/21; 10:30:22 AM by DW" created="Wed, 18 Aug 2021 14:30:21 GMT">
								<outline text="If the OPML file is missing a header the value might be &lt;%dateModified%&gt; or somesuch." created="Wed, 18 Aug 2021 14:30:22 GMT"/>
								</outline>
							</outline>
						<outline text="if (theDate === undefined) { //5/9/20 by DW">
							<outline text="return (&quot;&quot;);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="try { //8/18/21 by DW" created="Wed, 18 Aug 2021 14:29:52 GMT">
								<outline text="return (dateFormat (new Date (theDate), &quot;dddd mmmm d, yyyy; h:MM TT Z&quot;));"/>
								<outline text="}" created="Wed, 18 Aug 2021 14:29:53 GMT"/>
								</outline>
							<outline text="catch (err) {" created="Wed, 18 Aug 2021 14:30:01 GMT">
								<outline text="return (&quot;&quot;);" created="Wed, 18 Aug 2021 14:30:05 GMT"/>
								<outline text="}" created="Wed, 18 Aug 2021 14:30:09 GMT"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="ifDefinedSet (&quot;idOutlineTitle&quot;, head.title);"/>
					<outline text="ifDefinedSet (&quot;idOutlineDescription&quot;, head.description);"/>
					<outline text="ifDefinedSet (&quot;idOutlineFooter&quot;, head.footer);"/>
					<outline text="ifDefinedSet (&quot;idWhenLastUpdate&quot;, dateString (head.dateModified));"/>
					<outline text="ifDefinedSet (&quot;idWhenCreated&quot;, dateString (head.dateCreated));"/>
					<outline text=""/>
					<outline text="var type = head.type || &quot;blogpost&quot;;"/>
					<outline text="$(&quot;#idOutlineDisplayer&quot;).addClass (typeToClass (type));"/>
					<outline text=""/>
					<outline text="var outlineHtml;" created="Thu, 19 Aug 2021 20:31:17 GMT"/>
					<outline text="switch (type) {" created="Thu, 19 Aug 2021 20:31:17 GMT">
						<outline text="case &quot;blogpost&quot;:" created="Thu, 19 Aug 2021 20:31:27 GMT">
							<outline text="outlineHtml = renderOutlineBrowser (theOutline, false, undefined, undefined, true);"/>
							<outline text="outlineHtml = emojiProcess (outlineHtml);"/>
							<outline text="break;" created="Thu, 19 Aug 2021 20:31:35 GMT"/>
							</outline>
						<outline text="case &quot;html&quot;:" created="Thu, 19 Aug 2021 20:31:39 GMT">
							<outline text="outlineHtml = getHtmlFromOutline (theOutline);" created="Thu, 19 Aug 2021 20:32:22 GMT"/>
							<outline text="break;" created="Thu, 19 Aug 2021 20:31:47 GMT"/>
							</outline>
						<outline text="}" created="Thu, 19 Aug 2021 20:31:26 GMT"/>
						</outline>
					<outline text=""/>
					<outline text="function finishStart () {">
						<outline text="if (getBoolean (head.flDisqusComments)) {">
							<outline text="var disqusGroup = head.disqusGroup || &quot;smallpict&quot;;"/>
							<outline text="startDisqus (disqusGroup);"/>
							<outline text="$(&quot;#idComments&quot;).css (&quot;display&quot;, &quot;block&quot;);"/>
							<outline text="}"/>
							</outline>
						<outline text="if (head.urlCustomCss !== undefined) {">
							<outline text="http://stackoverflow.com/questions/14028113/load-different-css-stylesheet-with-javascript" isComment="true"/>
							<outline text="console.log (&quot;Inserting custom css: &quot; + head.urlCustomCss);"/>
							<outline text="var header = document.getElementsByTagName (&quot;head&quot;) [0];"/>
							<outline text="var styleSheet = document.createElement (&quot;link&quot;);"/>
							<outline text="styleSheet.rel = &quot;stylesheet&quot;;"/>
							<outline text="styleSheet.type = &quot;text/css&quot;;"/>
							<outline text="styleSheet.href = head.urlCustomCss;"/>
							<outline text="styleSheet.media = &quot;all&quot;;" isComment="true"/>
							<outline text="header.appendChild (styleSheet);"/>
							<outline text="}"/>
							</outline>
						<outline text="$(&quot;#idOutlineDisplayer&quot;).html (outlineHtml);"/>
						<outline text="callback ();"/>
						<outline text="}"/>
						</outline>
					<outline text=""/>
					<outline text="if (head.urlGlossary !== undefined) {">
						<outline text="var glossary = new Object ();"/>
						<outline text="readGlossary (head.urlGlossary, glossary, function () {">
							<outline text="outlineHtml = multipleReplaceAll (outlineHtml, glossary);"/>
							<outline text="finishStart ();"/>
							<outline text="});"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="else {">
						<outline text="finishStart ();"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function viewTypedOutline (headElements, theOutline, callback) {" isComment="true">
					<outline text="var flDisqusComments = getBoolean (headElements.flDisqusComments), disqusGroup = &quot;smallpict&quot;;"/>
					<outline text="if (headElements.disqusGroup !== undefined) {">
						<outline text="disqusGroup = headElements.disqusGroup;"/>
						<outline text="}"/>
						</outline>
					<outline text="$(&quot;#idOutlineTitle&quot;).html (headElements.title);"/>
					<outline text=""/>
					<outline text="if (headElements.description !== undefined) { //3/18/20 by DW">
						<outline text="$(&quot;#idOutlineDescription&quot;).html (headElements.description);"/>
						<outline text="}"/>
						</outline>
					<outline text="if (headElements.footer !== undefined) { //3/18/20 by DW">
						<outline text="$(&quot;#idOutlineFooter&quot;).html (headElements.footer);"/>
						<outline text="}"/>
						</outline>
					<outline text=""/>
					<outline text="$(&quot;#idPageTitle&quot;).html (theOutline.text);" isComment="true"/>
					<outline text=""/>
					<outline text="if (headElements.dateModified !== undefined) {">
						<outline text="$(&quot;#idWhenLastUpdate&quot;).html (dateFormat (new Date (headElements.dateModified), &quot;dddd mmmm d, yyyy; h:MM TT Z&quot;));"/>
						<outline text="}"/>
						</outline>
					<outline text="if (headElements.dateCreated !== undefined) {">
						<outline text="$(&quot;#idWhenCreated&quot;).html (dateFormat (new Date (headElements.dateCreated), &quot;dddd mmmm d, yyyy; h:MM TT Z&quot;));"/>
						<outline text="}"/>
						</outline>
					<outline text=""/>
					<outline text="var type = (headElements.type === undefined) ? &quot;blogpost&quot; : headElements.type;"/>
					<outline text="$(&quot;#idOutlineDisplayer&quot;).addClass (typeToClass (type));"/>
					<outline text=""/>
					<outline text="var outlineHtml = renderOutlineBrowser (theOutline, false, undefined, undefined, true);"/>
					<outline text="outlineHtml = emojiProcess (outlineHtml);"/>
					<outline text=""/>
					<outline text="function finishStart () {">
						<outline text="if (flDisqusComments) {">
							<outline text="startDisqus (disqusGroup);"/>
							<outline text="$(&quot;#idComments&quot;).css (&quot;display&quot;, &quot;block&quot;);"/>
							<outline text="}"/>
							</outline>
						<outline text="if (headElements.urlCustomCss !== undefined) {">
							<outline text="http://stackoverflow.com/questions/14028113/load-different-css-stylesheet-with-javascript" isComment="true"/>
							<outline text="console.log (&quot;Inserting custom css: &quot; + headElements.urlCustomCss);"/>
							<outline text="var header = document.getElementsByTagName (&quot;head&quot;) [0];"/>
							<outline text="var styleSheet = document.createElement (&quot;link&quot;);"/>
							<outline text="styleSheet.rel = &quot;stylesheet&quot;;"/>
							<outline text="styleSheet.type = &quot;text/css&quot;;"/>
							<outline text="styleSheet.href = headElements.urlCustomCss;"/>
							<outline text="styleSheet.media = &quot;all&quot;;" isComment="true"/>
							<outline text="header.appendChild (styleSheet);"/>
							<outline text="}"/>
							</outline>
						<outline text="callback ();"/>
						<outline text="}"/>
						</outline>
					<outline text=""/>
					<outline text="$(&quot;#idOutlineDisplayer&quot;).html (outlineHtml);"/>
					<outline text="if (headElements.urlGlossary !== undefined) {">
						<outline text="var glossary = new Object ();"/>
						<outline text="readGlossary (headElements.urlGlossary, glossary, function () {">
							<outline text="outlineHtml = multipleReplaceAll (outlineHtml, glossary);"/>
							<outline text="$(&quot;#idOutlineDisplayer&quot;).html (outlineHtml);"/>
							<outline text="finishStart ();"/>
							<outline text="});"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="else {">
						<outline text="finishStart ();"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function everySecond () {">
					<outline text="}"/>
					</outline>
				<outline text="function setXmlIcon (urlOpml) {">
					<outline text="$(&quot;#idXmlIcon&quot;).html (&quot;&lt;a href=\&quot;&quot; + urlOpml + &quot;\&quot;&gt;&lt;img src=\&quot;http://scripting.com/images/xml.gif\&quot; widt=\&quot;36\&quot; height=\&quot;14\&quot;&gt;&lt;/a&gt;&quot;);"/>
					<outline text="console.log (&quot;setXmlIcon: urlOpmlFile == &quot; + urlOpml);"/>
					<outline text="}"/>
					</outline>
				<outline text="function addPermalinks () { //6/24/21 by DW" created="Thu, 24 Jun 2021 13:54:01 GMT">
					<outline text="Changes" isComment="true" created="Thu, 24 Jun 2021 13:54:20 GMT">
						<outline text="6/24/21; 9:54:24 AM by DW" created="Thu, 24 Jun 2021 13:54:22 GMT">
							<outline text="In previous versions we just put the permalinks at the top level. Now we're putting them on all lines in the outline. " created="Thu, 24 Jun 2021 13:54:24 GMT"/>
							</outline>
						</outline>
					<outline text="function addToSubs (theSubs) {" created="Thu, 24 Jun 2021 13:54:53 GMT">
						<outline text="theSubs.forEach (function (sub) {" created="Thu, 24 Jun 2021 13:56:41 GMT">
							<outline text="sub.flPermalink = true;"/>
							<outline text="if (sub.subs !== undefined) {" created="Thu, 24 Jun 2021 13:57:08 GMT">
								<outline text="addToSubs (sub.subs);" created="Thu, 24 Jun 2021 13:57:21 GMT"/>
								<outline text="}" created="Thu, 24 Jun 2021 13:57:15 GMT"/>
								</outline>
							<outline text="});" created="Thu, 24 Jun 2021 13:56:48 GMT"/>
							</outline>
						<outline text="}" created="Thu, 24 Jun 2021 13:56:07 GMT"/>
						</outline>
					<outline text="addToSubs (jstruct.opml.body.subs);" created="Thu, 24 Jun 2021 13:54:53 GMT"/>
					<outline text="" isComment="true" created="Thu, 24 Jun 2021 13:54:53 GMT"/>
					<outline text="//add top level permalinks" isComment="true">
						<outline text="var toplevel = jstruct.opml.body.subs;"/>
						<outline text="for (var i = 0; i &lt; toplevel.length; i++) {">
							<outline text="toplevel [i].flPermalink = true;"/>
							<outline text="}"/>
							</outline>
						</outline>
					<outline text="}" created="Thu, 24 Jun 2021 13:54:19 GMT"/>
					</outline>
				<outline text="function startup () {">
					<outline text="console.log (&quot;startup&quot;);"/>
					<outline text=""/>
					<outline text="if (localStorage.savedState !== undefined) { //9/22/17 by DW">
						<outline text="savedState = JSON.parse (localStorage.savedState);"/>
						<outline text="}"/>
						</outline>
					<outline text=""/>
					<outline text="hitCounter (); "/>
					<outline text="initGoogleAnalytics (); "/>
					<outline text=""/>
					<outline text="addPermalinks (); //6/24/21 by DW" created="Thu, 24 Jun 2021 13:55:05 GMT"/>
					<outline text="" created="Thu, 24 Jun 2021 13:55:18 GMT"/>
					<outline text="outlineBrowserData.flTextBasedPermalinks = false;"/>
					<outline text=""/>
					<outline text="viewTypedOutline (jstruct.opml.head, jstruct.opml.body, function () {">
						<outline text="setXmlIcon (getAppUrl () + &quot;?format=opml&quot;);"/>
						<outline text="restoreExpansionState (); //9/26/17 by DW" isComment="true"/>
						<outline text="outlineBrowserData.expandCollapseCallback = function (idnum) {">
							<outline text="if (savedState.expansionStates === undefined) {">
								<outline text="savedState.expansionStates = new Object ();"/>
								<outline text="}"/>
								</outline>
							<outline text="savedState.expansionStates [window.location.href] = getExpansionState ();"/>
							<outline text="saveState ();"/>
							<outline text="}"/>
							</outline>
						<outline text=""/>
						<outline text="$(&quot;#idOutlineContainer&quot;).css (&quot;display&quot;, &quot;block&quot;);"/>
						<outline text=""/>
						<outline text="self.setInterval (everySecond, 1000); "/>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="styles.css">
				<outline text="@import url('https://fonts.googleapis.com/css?family=Oswald:400,700');"/>
				<outline text=""/>
				<outline text="body {">
					<outline text="font-family: &quot;Ubuntu&quot;;"/>
					<outline text="font-size: 18px;"/>
					<outline text="line-height: 140%;"/>
					<outline text="background-color: whitesmoke;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divPageBody {">
					<outline text="width: 65%;"/>
					<outline text="margin-top: 85px;"/>
					<outline text="margin-left: auto;"/>
					<outline text="margin-right: auto;"/>
					<outline text="border: 1px solid silver;" isComment="true"/>
					<outline text="margin-bottom: 400px;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divTopPageMessage {">
					<outline text="margin-top: 45px;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divOutlineContainer {">
					<outline text="margin-left: 50px;"/>
					<outline text="margin-right: 25px;"/>
					<outline text="margin-top: 10px;"/>
					<outline text="margin-bottom: 35px;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divOutlineTitle {">
					<outline text="font-size: 52px;"/>
					<outline text="font-weight: bold;"/>
					<outline text="line-height: 110%;"/>
					<outline text=""/>
					<outline text="/* 9/27/17 DW */">
						<outline text="font-family: &quot;Oswald&quot;;"/>
						<outline text="font-weight: 700;"/>
						<outline text="font-style: normal;"/>
						<outline text="letter-spacing: -0.04em;"/>
						<outline text="line-height: 1.1;"/>
						<outline text="text-shadow: 1px 1px black;" isComment="true"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text=".divOutlineDisplayer {">
					<outline text="font-family: &quot;Georgia&quot;;"/>
					<outline text="font-size: 24px;"/>
					<outline text="line-height: 140%;"/>
					<outline text="margin-left: -25px;"/>
					<outline text="margin-top: 28px;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divOutlineHead {">
					<outline text="display: none;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divOutlineText {">
					<outline text="line-height: 145%;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divLastUpdate {">
					<outline text="margin-top: 30px;"/>
					<outline text="margin-bottom: 30px;"/>
					<outline text="letter-spacing: -0.01em;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divWhenCreated {">
					<outline text="margin-top: 50px;"/>
					<outline text="border-top: 1px solid silver;"/>
					<outline text="padding-top: 5px;"/>
					<outline text="margin-bottom: 30px;"/>
					<outline text="letter-spacing: -0.01em;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divOutlineDescription {">
					<outline text="font-family: &quot;Georgia&quot;;" isComment="true"/>
					<outline text="font-size: 20px;"/>
					<outline text="line-height: 140%;"/>
					<outline text="margin-left: 3px;"/>
					<outline text="margin-top: 5px;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divOutlineDescription {" isComment="true">
					<outline text="margin-top: 2px;" isComment="true"/>
					<outline text="margin-left: 4px;" isComment="true"/>
					<outline text="margin-bottom: 5px;" isComment="true"/>
					<outline text="" isComment="true"/>
					<outline text="font-size: 1.15em;" isComment="true"/>
					<outline text="line-height: 130%;"/>
					<outline text="margin-top: 10px;"/>
					<outline text="margin-bottom: 35px;"/>
					<outline text="margin-left: 7%;" isComment="true"/>
					<outline text="margin-right: 7%;" isComment="true"/>
					<outline text=""/>
					<outline text="previous version -- 7/9/20 by DW" isComment="true">
						<outline text="font-size: 1.5em;"/>
						<outline text="line-height: 120%;"/>
						<outline text="margin-top: 35px;"/>
						<outline text="margin-bottom: 35px;"/>
						<outline text="margin-left: 7%;"/>
						<outline text="margin-right: 7%;"/>
						</outline>
					<outline text=""/>
					<outline text="color: black;"/>
					<outline text="opacity: 0.7;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divOutlineFooter {">
					<outline text="}"/>
					</outline>
				<outline text=""/>
				<outline text="/* blogpost type */">
					<outline text=".divtypeblogpost .ulLevel0 {">
						<outline text="font-weight: bold;"/>
						<outline text="font-family: &quot;Ubuntu&quot;;"/>
						<outline text="margin-bottom: 10px;"/>
						<outline text="margin-left: 32px;"/>
						<outline text=""/>
						<outline text="/* 9/27/17 DW */">
							<outline text="font-family: &quot;Oswald&quot;;" isComment="true"/>
							<outline text="letter-spacing: -0.01em;"/>
							</outline>
						<outline text=""/>
						<outline text=""/>
						<outline text=""/>
						<outline text="}"/>
						</outline>
					<outline text=".divtypeblogpost .ulLevel1 {">
						<outline text="font-family: &quot;Georgia&quot;;"/>
						<outline text="font-weight: normal;"/>
						<outline text="margin-left: 0;"/>
						<outline text="margin-bottom: 25px;"/>
						<outline text="}"/>
						</outline>
					<outline text=".divtypeblogpost .ulLevel2, .divtypeblogpost .ulLevel3, .divtypeblogpost .ulLevel4, .divtypeblogpost .ulLevel5 {">
						<outline text="font-family: &quot;Georgia&quot;;"/>
						<outline text="font-weight: normal;"/>
						<outline text="margin-bottom: 10px;"/>
						<outline text="}"/>
						</outline>
					</outline>
				<outline text="/* default type  */">
					<outline text=".divtypedefault .ulLevel0 {">
						<outline text="margin-left: 30px;"/>
						<outline text="}"/>
						</outline>
					<outline text=".divtypedefault .ulLevel1 {">
						<outline text="font-family: &quot;Georgia&quot;;"/>
						<outline text="font-weight: normal;"/>
						<outline text="margin-left: 0;" isComment="true"/>
						<outline text="margin-bottom: 25px;"/>
						<outline text="}"/>
						</outline>
					<outline text=".divtypedefault .ulLevel2, .divtypedefault .ulLevel3, .divtypedefault .ulLevel4, .divtypedefault .ulLevel5 {">
						<outline text="font-family: &quot;Georgia&quot;;"/>
						<outline text="font-weight: normal;"/>
						<outline text="margin-bottom: 10px;"/>
						<outline text="}"/>
						</outline>
					</outline>
				<outline text=""/>
				<outline text=".divComments {">
					<outline text="display: none;"/>
					<outline text="border: 1px solid silver;" created="Fri, 07 Mar 2014 17:08:19 GMT" pgfnum="38600"/>
					<outline text="padding: 8px;"/>
					<outline text="background-color: whitesmoke;"/>
					<outline text="margin-top: 60px;"/>
					<outline text="margin-bottom: 50px;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divXmlIcon {">
					<outline text="float: right;"/>
					<outline text="padding-top: 2px;"/>
					<outline text="}"/>
					</outline>
				<outline text=".spNodePermalink a {">
					<outline text="font-weight: normal;"/>
					<outline text="font-size: 14px;"/>
					<outline text="vertical-align: middle;"/>
					<outline text="margin-top: 2px;"/>
					<outline text="opacity: 0.2;"/>
					<outline text="}"/>
					</outline>
				<outline text=""/>
				<outline text="/* 9/3/18 by DW */">
					<outline text=".spIndexFileLink {">
						<outline text="color: black;"/>
						<outline text="cursor: pointer;"/>
						<outline text="}"/>
						</outline>
					</outline>
				<outline text="/* 8/18/21 by DW */" created="Wed, 18 Aug 2021 14:17:29 GMT">
					<outline text=".divControlPanel {" created="Thu, 19 Aug 2021 13:25:32 GMT">
						<outline text="width: 100%;" created="Thu, 19 Aug 2021 13:25:40 GMT"/>
						<outline text="height: 55px;" created="Thu, 19 Aug 2021 13:25:47 GMT"/>
						<outline text="color: #777777;" created="Thu, 19 Aug 2021 13:39:27 GMT"/>
						<outline text="background-color: #FCFCFC;" created="Thu, 19 Aug 2021 13:25:53 GMT"/>
						<outline text="border-bottom: 1px solid silver;" created="Thu, 19 Aug 2021 13:39:36 GMT"/>
						<outline text="}" created="Thu, 19 Aug 2021 13:25:36 GMT"/>
						</outline>
					<outline text=".divControlPanel .divContainer {" created="Thu, 19 Aug 2021 14:07:10 GMT">
						<outline text="width: 65%;" created="Thu, 19 Aug 2021 13:25:40 GMT"/>
						<outline text="margin-left: auto;"/>
						<outline text="margin-right: auto;"/>
						<outline text="}" created="Thu, 19 Aug 2021 14:07:25 GMT"/>
						</outline>
					<outline text=".spSiteTitle {" created="Thu, 19 Aug 2021 13:31:41 GMT">
						<outline text="font-family: &quot;Rancho&quot;;" created="Thu, 19 Aug 2021 13:31:46 GMT"/>
						<outline text="font-size: 38px;" created="Thu, 19 Aug 2021 13:31:56 GMT"/>
						<outline text="line-height: 50px;" created="Thu, 19 Aug 2021 13:37:01 GMT"/>
						<outline text="vertical-align: middle;" created="Thu, 19 Aug 2021 13:37:10 GMT"/>
						<outline text="margin-left: 50px;" created="Thu, 19 Aug 2021 13:40:17 GMT"/>
						<outline text="}" created="Thu, 19 Aug 2021 13:32:02 GMT"/>
						</outline>
					<outline text=".spSiteTitle a {" created="Thu, 19 Aug 2021 14:16:21 GMT">
						<outline text="color: inherit;" created="Thu, 19 Aug 2021 14:16:24 GMT"/>
						<outline text="}" created="Thu, 19 Aug 2021 14:16:28 GMT"/>
						</outline>
					<outline text=".divTheMenu {" created="Thu, 19 Aug 2021 13:46:04 GMT">
						<outline text="display: inline-block;" created="Thu, 19 Aug 2021 13:46:17 GMT"/>
						<outline text="margin-top: 6px;" created="Thu, 19 Aug 2021 14:20:27 GMT"/>
						<outline text="line-height: 50px;" created="Thu, 19 Aug 2021 13:37:01 GMT"/>
						<outline text="vertical-align: middle;" created="Thu, 19 Aug 2021 13:37:10 GMT"/>
						<outline text="margin-left: 30px;" created="Thu, 19 Aug 2021 13:54:18 GMT"/>
						<outline text="font-size: 16px;" created="Thu, 19 Aug 2021 13:55:08 GMT"/>
						<outline text="font-weight: bold;" created="Thu, 19 Aug 2021 13:55:15 GMT"/>
						<outline text="}" created="Thu, 19 Aug 2021 13:46:09 GMT"/>
						</outline>
					<outline text=".divTheMenu a {">
						<outline text="color: inherit;" created="Thu, 19 Aug 2021 13:54:33 GMT"/>
						<outline text="}" created="Thu, 19 Aug 2021 13:54:37 GMT"/>
						</outline>
					<outline text=".divTheMenu .nav {" created="Thu, 19 Aug 2021 13:52:47 GMT">
						<outline text="margin-bottom: 0;" created="Thu, 19 Aug 2021 13:53:01 GMT"/>
						<outline text="}" created="Thu, 19 Aug 2021 13:52:59 GMT"/>
						</outline>
					<outline text=".divTheMenu .dropdown-menu {" created="Thu, 19 Aug 2021 14:09:18 GMT">
						<outline text="font-size: 15px;" created="Thu, 19 Aug 2021 14:09:20 GMT"/>
						<outline text="}" created="Thu, 19 Aug 2021 14:09:27 GMT"/>
						</outline>
					<outline text=".divTheMenu .caret {" created="Thu, 19 Aug 2021 14:10:37 GMT">
						<outline text="color: inherit;" created="Thu, 19 Aug 2021 14:10:42 GMT"/>
						<outline text="}" created="Thu, 19 Aug 2021 14:10:46 GMT"/>
						</outline>
					<outline text=".divTheMenu .nav .dropdown-toggle .caret {">
						<outline text="margin-top: 10px;"/>
						<outline text="border-top-color: inherit;"/>
						<outline text="border-bottom-color: inherit;"/>
						<outline text="}"/>
						</outline>
					<outline text=".divPageBody {">
						<outline text="width: 65%;"/>
						<outline text="margin-left: auto;"/>
						<outline text="margin-right: auto;"/>
						<outline text="margin-top: 0;"/>
						<outline text="border: 1px solid silver;" isComment="true"/>
						<outline text="margin-bottom: 400px;"/>
						<outline text="}"/>
						</outline>
					<outline text="" created="Thu, 19 Aug 2021 13:25:32 GMT"/>
					<outline text=".navbar-inner {" isComment="true" created="Wed, 18 Aug 2021 14:18:10 GMT">
						<outline text="margin-top: -24;" created="Wed, 18 Aug 2021 14:18:22 GMT"/>
						<outline text="}" created="Wed, 18 Aug 2021 14:18:12 GMT"/>
						</outline>
					<outline text=".divMenubar .brand {" isComment="true" created="Wed, 18 Aug 2021 14:17:31 GMT">
						<outline text="margin-top: 2px;" created="Wed, 18 Aug 2021 14:17:34 GMT"/>
						<outline text="}" created="Wed, 18 Aug 2021 14:17:39 GMT"/>
						</outline>
					</outline>
				<outline text=""/>
				<outline text="/* styles for tablet */" created="Sun, 09 Mar 2014 19:11:13 GMT" pgfnum="38719">
					<outline text="@media only screen "/>
					<outline text="and (min-device-width : 481px) "/>
					<outline text="and (max-device-width : 800px) {">
						<outline text=".divPageBody {">
							<outline text="width: 80%;"/>
							<outline text="margin-top: 0px;"/>
							<outline text="}"/>
							</outline>
						<outline text=".divControlPanel .divContainer {" created="Thu, 19 Aug 2021 14:07:10 GMT">
							<outline text="width: 80%;" created="Thu, 19 Aug 2021 13:25:40 GMT"/>
							<outline text="}" created="Thu, 19 Aug 2021 14:07:25 GMT"/>
							</outline>
						<outline text=".spSiteTitle { " created="Sun, 12 Sep 2021 13:55:00 GMT">
							<outline text="margin-left: 0;" created="Sun, 12 Sep 2021 13:55:03 GMT"/>
							<outline text="}" created="Sun, 12 Sep 2021 13:55:14 GMT"/>
							</outline>
						<outline text=".divOutlineContainer {">
							<outline text="margin-left: 0;"/>
							<outline text="margin-right: 0;"/>
							<outline text="}"/>
							</outline>
						<outline text=".divWhenCreated, .divLastUpdate {">
							<outline text="font-size: .9em;"/>
							<outline text="}"/>
							</outline>
						<outline text=".divOutlineText {">
							<outline text="font-size: .8em;"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					</outline>
				<outline text="/* styles for phone */">
					<outline text="@media only screen "/>
					<outline text="and (min-device-width : 320px) "/>
					<outline text="and (max-device-width : 480px) {">
						<outline text=".divPageBody {">
							<outline text="width: 85%;"/>
							<outline text="margin-top: 10px;"/>
							<outline text="}"/>
							</outline>
						<outline text=".divControlPanel .divContainer {" created="Thu, 19 Aug 2021 14:07:10 GMT">
							<outline text="width: 85%;" created="Thu, 19 Aug 2021 13:25:40 GMT"/>
							<outline text="}" created="Thu, 19 Aug 2021 14:07:25 GMT"/>
							</outline>
						<outline text=".spSiteTitle { " created="Sun, 12 Sep 2021 13:55:00 GMT">
							<outline text="margin-left: 0;" created="Sun, 12 Sep 2021 13:55:03 GMT"/>
							<outline text="}" created="Sun, 12 Sep 2021 13:55:14 GMT"/>
							</outline>
						<outline text=".divOutlineContainer {">
							<outline text="margin-left: 0;"/>
							<outline text="margin-right: 0;"/>
							<outline text="}"/>
							</outline>
						<outline text=".divWhenCreated, .divLastUpdate {">
							<outline text="font-size: .7em;"/>
							<outline text="margin-top: 0;"/>
							<outline text="margin-bottom: 20px;"/>
							<outline text="}"/>
							</outline>
						<outline text=".divOutlineTitle {">
							<outline text="font-size: 36px;"/>
							<outline text="0.7 * 52" isComment="true">
								<outline text="36.4" isComment="true"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					</outline>
				</outline>
			<outline text="template.txt" created="Wed, 18 Aug 2021 13:28:44 GMT">
				<outline text="&lt;html&gt;">
					<outline text="&lt;head&gt;">
						<outline text="&lt;title id=&quot;idPageTitle&quot;&gt;[%title%]&lt;/title&gt;"/>
						<outline text="&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;"/>
						<outline text="&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;"/>
						<outline text=""/>
						<outline text="&lt;%basicIncludes2%&gt;"/>
						<outline text="&lt;%riverBrowserIncludesCdn%&gt;" isComment="true"/>
						<outline text="&lt;script src=&quot;http://api.nodestorage.io/api.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;script src=&quot;http://fargo.io/code/shared/emojify.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;link rel=&quot;stylesheet&quot; href=&quot;http://fargo.io/code/shared/emojify.css&quot;/&gt;"/>
						<outline text="&lt;script src=&quot;http://fargo.io/code/markdownConverter.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;script src=&quot;http://fargo.io/cms/dateFormat.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;script src=&quot;http://fargo.io/code/browsers/outlinebrowser.js&quot;&gt;&lt;/script&gt;" created="Thu, 08 May 2014 14:04:18 GMT" pgfnum="41269"/>
						<outline text="&lt;link href=&quot;http://fargo.io/code/browsers/outlinebrowser.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;"/>
						<outline text="&lt;link href=&quot;http://fargo.io/code/shared/menus.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;" isComment="true"/>
						<outline text=""/>
						<outline text="&lt;%basicIncludesCdn%&gt;" isComment="true"/>
						<outline text="&lt;%riverBrowserIncludesCdn%&gt;" isComment="true"/>
						<outline text="" isComment="true"/>
						<outline text="&lt;script src=&quot;http://fargo.io/code/shared/xml.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;script src=&quot;http://fargo.io/code/shared/reader.js&quot;&gt;&lt;/script&gt;" created="Thu, 08 May 2014 14:04:18 GMT" pgfnum="41269"/>
						<outline text=""/>
						<outline text="&lt;script src=&quot;http://reallysimple.org/templates/opml/code.js&quot;&gt;&lt;/script&gt;" isComment="true" created="Thu, 08 May 2014 14:04:18 GMT" pgfnum="41269"/>
						<outline text="&lt;link href=&quot;http://reallysimple.org/templates/opml/styles.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;" isComment="true"/>
						<outline text="" created="Wed, 18 Aug 2021 13:42:41 GMT"/>
						<outline text="&lt;script src=&quot;http://scripting.com/code/reallysimple/templates/opml/code.js&quot;&gt;&lt;/script&gt;" created="Thu, 08 May 2014 14:04:18 GMT" pgfnum="41269"/>
						<outline text="&lt;link href=&quot;http://scripting.com/code/reallysimple/templates/opml/styles.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;"/>
						<outline text=""/>
						<outline text="&lt;!-- Facebook metadata --&gt;">
							<outline text="&lt;meta property=&quot;og:url&quot; content=&quot;[%url%]&quot; /&gt;"/>
							<outline text="&lt;meta property=&quot;og:type&quot; content=&quot;website&quot; /&gt;"/>
							<outline text="&lt;meta property=&quot;og:title&quot; content=&quot;[%title%]&quot; /&gt;"/>
							<outline text="&lt;meta property=&quot;og:description&quot; content=&quot;[%description%]&quot; /&gt;"/>
							<outline text="&lt;meta property=&quot;og:image&quot; content=&quot;[%image%]&quot; /&gt;"/>
							<outline text="&lt;meta property=&quot;og:site_name&quot; content=&quot;[%sitename%]&quot; /&gt;"/>
							</outline>
						<outline text="&lt;!-- Twitter metadata --&gt;">
							<outline text="&lt;meta name=&quot;twitter:card&quot; content=&quot;summary_large_image&quot;&gt;"/>
							<outline text="&lt;meta name=&quot;twitter:site&quot; content=&quot;@[%ownerTwitterScreenName%]&quot;&gt;"/>
							<outline text="&lt;meta name=&quot;twitter:title&quot; content=&quot;[%title%]&quot;&gt;"/>
							<outline text="&lt;meta name=&quot;twitter:description&quot; content=&quot;[%description%]&quot;&gt;"/>
							<outline text="&lt;meta name=&quot;twitter:image:src&quot; content=&quot;[%image%]&quot;&gt;"/>
							</outline>
						<outline text=""/>
						<outline text="&lt;script&gt;" created="Thu, 12 Dec 2013 17:06:51 GMT" pgfnum="33502">
							<outline text="var jstruct = [%bodytext%];"/>
							<outline text="&lt;/script&gt;" created="Thu, 12 Dec 2013 17:07:17 GMT" pgfnum="33504"/>
							</outline>
						<outline text="&lt;style&gt;" isComment="true" created="Tue, 17 Aug 2021 21:29:28 GMT">
							<outline text=".divMenubar {">
								<outline text="margin-top: -45px;"/>
								<outline text="}"/>
								</outline>
							<outline text="&lt;/style&gt;" created="Tue, 17 Aug 2021 21:29:37 GMT"/>
							</outline>
						<outline text="&lt;style&gt;" isComment="true" created="Wed, 11 Sep 2013 14:27:45 GMT" pgfnum="30095">
							<outline text="body {">
								<outline text="font-family: &quot;Ubuntu&quot;;"/>
								<outline text="font-size: 18px;"/>
								<outline text="background-color: whitesmoke;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divTopPageMessage {">
								<outline text="margin-top: 45px;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divPageBody {">
								<outline text="width: 60%;"/>
								<outline text="margin-top: 45px;"/>
								<outline text="margin-left: auto;"/>
								<outline text="margin-right: auto;"/>
								<outline text="border: 1px solid silver;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divOutlineContainer {">
								<outline text="margin-left: 50px;"/>
								<outline text="margin-right: 25px;"/>
								<outline text="margin-top: 10px;"/>
								<outline text="margin-bottom: 35px;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divOutlineTitle {">
								<outline text="font-size: 52px;"/>
								<outline text="font-weight: bold;"/>
								<outline text="line-height: 110%;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divOutlineDisplayer {">
								<outline text="font-family: &quot;Georgia&quot;;"/>
								<outline text="font-size: 24px;"/>
								<outline text="line-height: 140%;"/>
								<outline text="margin-left: -25px;"/>
								<outline text="margin-top: 1em;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divOutlineHead {">
								<outline text="display: none;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divRenderedOutline .divOutlineText {">
								<outline text="line-height: 145%;"/>
								<outline text="}"/>
								</outline>
							<outline text="&lt;/style&gt;" created="Wed, 11 Sep 2013 14:30:17 GMT" pgfnum="30105"/>
							</outline>
						<outline text="&lt;/head&gt;"/>
						</outline>
					<outline text="&lt;body&gt;">
						<outline text="&lt;div class=&quot;divControlPanel&quot;&gt;" created="Thu, 19 Aug 2021 13:25:01 GMT">
							<outline text="&lt;div class=&quot;divContainer&quot;&gt; " created="Thu, 19 Aug 2021 14:07:50 GMT">
								<outline text="&lt;span class=&quot;spSiteTitle&quot;&gt;&lt;a href=&quot;/&quot;&gt;reallysimple.org&lt;/a&gt;&lt;/span&gt;" created="Thu, 19 Aug 2021 13:31:12 GMT"/>
								<outline text="&lt;div class=&quot;divTheMenu&quot;&gt;">
									<outline text="&lt;ul class=&quot;nav&quot; id=&quot;idMainMenuList&quot;&gt;" created="Thu, 19 Aug 2021 13:48:01 GMT">
										<outline text="&lt;li class=&quot;dropdown&quot;&gt;" created="Thu, 19 Aug 2021 13:51:22 GMT">
											<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;Menu&amp;nbsp;&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;"/>
											<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
												<outline text="&lt;li&gt;&lt;a href=&quot;/&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;"/>
												<outline text="&lt;li&gt;&lt;a href=&quot;twentyYearsAgo.opml&quot;&gt;RSS 2.0 timeline&lt;/a&gt;&lt;/li&gt;"/>
												<outline text="&lt;li&gt;&lt;a href=&quot;https://github.com/scripting/reallysimple&quot; target=&quot;_blank&quot;&gt;Node package&lt;/a&gt;&lt;/li&gt;"/>
												<outline text="&lt;li&gt;&lt;a href=&quot;https://github.com/scripting/feeder&quot; target=&quot;_blank&quot;&gt;Feeder app&lt;/a&gt;&lt;/li&gt;"/>
												<outline text="&lt;li&gt;&lt;a href=&quot;https://cyber.harvard.edu/rss/rss.html&quot;&gt;RSS 2.0 spec&lt;/a&gt;&lt;/li&gt;" isComment="true"/>
												<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;" isComment="true"/>
												<outline text="&lt;li&gt;&lt;a href=&quot;/compatibleApps.opml&quot;&gt;OPML-compatible apps&lt;/a&gt;&lt;/li&gt;" isComment="true"/>
												<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;" isComment="true"/>
												<outline text="&lt;li class=&quot;dropdown-submenu&quot;&gt;" isComment="true">
													<outline text="&lt;a href=&quot;#&quot; tabindex=&quot;-1&quot;&gt;Examples...&lt;/a&gt;">
														<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
															<outline text="&lt;li&gt;&lt;a href=&quot;/examples/states.opml?format=opml&quot; tabindex=&quot;-1&quot; target=&quot;_blank&quot;&gt;states.opml&lt;/a&gt;&lt;/li&gt;"/>
															<outline text="&lt;li&gt;&lt;a href=&quot;/examples/subscriptionList.opml?format=opml&quot; tabindex=&quot;-1&quot; target=&quot;_blank&quot;&gt;subscriptionList.opml&lt;/a&gt;&lt;/li&gt;"/>
															<outline text="&lt;li&gt;&lt;a href=&quot;/examples/directory.opml?format=opml&quot; tabindex=&quot;-1&quot; target=&quot;_blank&quot;&gt;directory.opml&lt;/a&gt;&lt;/li&gt;"/>
															<outline text="&lt;li&gt;&lt;a href=&quot;/examples/category.opml?format=opml&quot; tabindex=&quot;-1&quot; target=&quot;_blank&quot;&gt;category.opml&lt;/a&gt;&lt;/li&gt;"/>
															<outline text="&lt;li&gt;&lt;a href=&quot;/examples/simpleScript.opml?format=opml&quot; tabindex=&quot;-1&quot; target=&quot;_blank&quot;&gt;simpleScript.opml&lt;/a&gt;&lt;/li&gt;"/>
															<outline text="&lt;li&gt;&lt;a href=&quot;/examples/placesLived.opml?format=opml&quot; tabindex=&quot;-1&quot; target=&quot;_blank&quot;&gt;placesLived.opml&lt;/a&gt;&lt;/li&gt;"/>
															<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
															<outline text="&lt;li&gt;&lt;a href=&quot;https://github.com/scripting/Scripting-News/tree/master/blog/opml&quot; tabindex=&quot;-1&quot; target=&quot;_blank&quot;&gt;Blog archive&lt;/a&gt;&lt;/li&gt;"/>
															</outline>
														<outline text="&lt;/ul&gt;"/>
														</outline>
													<outline text="&lt;/li&gt;"/>
													</outline>
												<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;" isComment="true"/>
												<outline text="&lt;li class=&quot;dropdown-submenu&quot;&gt;" isComment="true">
													<outline text="&lt;a href=&quot;#&quot; tabindex=&quot;-1&quot;&gt;Developers...&lt;/a&gt;">
														<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
															<outline text="&lt;li&gt;&lt;a href=&quot;https://github.com/scripting/opmlPackage&quot; tabindex=&quot;-1&quot; target=&quot;_blank&quot;&gt;OPML package&lt;/a&gt;&lt;/li&gt;"/>
															<outline text="&lt;li&gt;&lt;a href=&quot;https://github.com/scripting/opml.org/tree/main/opmlValidator&quot; tabindex=&quot;-1&quot; target=&quot;_blank&quot;&gt;OPML validator&lt;/a&gt;&lt;/li&gt;"/>
															<outline text="&lt;li&gt;&lt;a href=&quot;https://github.com/scripting/instantOutlines&quot; tabindex=&quot;-1&quot; target=&quot;_blank&quot;&gt;Instant outlines&lt;/a&gt;&lt;/li&gt;"/>
															</outline>
														<outline text="&lt;/ul&gt;"/>
														</outline>
													<outline text="&lt;/li&gt;"/>
													</outline>
												<outline text="&lt;/ul&gt;"/>
												</outline>
											<outline text="&lt;/li&gt;" created="Thu, 19 Aug 2021 13:51:26 GMT"/>
											</outline>
										<outline text="&lt;/ul&gt;" created="Thu, 19 Aug 2021 13:48:02 GMT"/>
										</outline>
									<outline text="&lt;/div&gt;" created="Thu, 19 Aug 2021 14:01:02 GMT"/>
									</outline>
								<outline text="&lt;/div&gt;" created="Thu, 19 Aug 2021 14:07:57 GMT"/>
								</outline>
							<outline text="&lt;/div&gt;" created="Thu, 19 Aug 2021 13:25:12 GMT"/>
							</outline>
						<outline text="&lt;div class=&quot;divPageBody&quot;&gt;">
							<outline text="&lt;div class=&quot;divOutlineContainer&quot; id=&quot;idOutlineContainer&quot; style=&quot;display: block;&quot;&gt;">
								<outline text="&lt;div class=&quot;divXmlIcon&quot; id=&quot;idXmlIcon&quot;&gt;&lt;/div&gt;"/>
								<outline text="&lt;div class=&quot;divLastUpdate&quot;&gt;&lt;b&gt;Last update&lt;/b&gt;: &lt;span id=&quot;idWhenLastUpdate&quot;&gt;&lt;/span&gt;.&lt;/div&gt;"/>
								<outline text="&lt;div class=&quot;divOutlineTitle&quot; id=&quot;idOutlineTitle&quot;&gt;">
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;div class=&quot;divOutlineDescription&quot; id=&quot;idOutlineDescription&quot;&gt;">
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;div class=&quot;divOutlineDisplayer&quot; id=&quot;idOutlineDisplayer&quot;&gt;">
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;div class=&quot;divWhenCreated&quot;&gt;&lt;b&gt;Posted&lt;/b&gt;: &lt;span id=&quot;idWhenCreated&quot;&gt;&lt;/span&gt;.&lt;/div&gt;"/>
								<outline text="&lt;div class=&quot;divOutlineFooter&quot; id=&quot;idOutlineFooter&quot;&gt;">
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;div class=&quot;divComments&quot; id=&quot;idComments&quot;&gt;">
									<outline text="&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;"/>
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;/div&gt;"/>
								</outline>
							<outline text="&lt;/div&gt;"/>
							</outline>
						<outline text="&lt;script&gt;">
							<outline text="$(document).ready (function () {">
								<outline text="startup ();" created="Wed, 30 Oct 2013 15:20:06 GMT" pgfnum="30656"/>
								<outline text="});"/>
								</outline>
							<outline text="&lt;/script&gt;"/>
							</outline>
						<outline text="&lt;/body&gt;"/>
						</outline>
					<outline text="&lt;/html&gt;"/>
					</outline>
				</outline>
			</outline>
		<outline text="dropbox:miami:pagepark:domains:reallysimple.org:templates:opml:" isComment="true">
			<outline text="code.js">
				<outline text="var appConsts = {">
					<outline text="domain: stringNthField (window.location.href, &quot;/&quot;, 3)"/>
					<outline text="};"/>
					</outline>
				<outline text="var savedState = { //9/22/17 by DW">
					<outline text="expansionStates: {">
						<outline text="}"/>
						</outline>
					<outline text="};"/>
					</outline>
				<outline text="function collapseEverything () {">
					<outline text="$(&quot;.aOutlineWedgeLink i&quot;).each (function () {">
						<outline text="var id = $(this).attr (&quot;id&quot;); //something like idOutlineWedge17"/>
						<outline text="var idnum = stringDelete (id, 1, &quot;idOutlineWedge&quot;.length);"/>
						<outline text="if (idnum != 0) {">
							<outline text="var idWedge = &quot;#idOutlineWedge&quot; + idnum;"/>
							<outline text="var idLevel = &quot;#idOutlineLevel&quot; + idnum;"/>
							<outline text="" isComment="true"/>
							<outline text="console.log (&quot;idWedge == &quot; + idWedge + &quot;, idLevel == &quot; + idLevel);" isComment="true"/>
							<outline text="" isComment="true"/>
							<outline text="$(idWedge).attr (&quot;class&quot;, &quot;fa fa-caret-right&quot;);"/>
							<outline text="$(idWedge).css (&quot;color&quot;, &quot;black&quot;);"/>
							<outline text="$(idLevel).css (&quot;display&quot;, &quot;none&quot;);"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function saveState () { //9/22/17 by DW">
					<outline text="localStorage.savedState = jsonStringify (savedState);"/>
					<outline text="console.log (&quot;saveState: localStorage.savedState == &quot; + localStorage.savedState);"/>
					<outline text="}"/>
					</outline>
				<outline text="function restoreExpansionState () { //9/26/17 by DW">
					<outline text="try {">
						<outline text="if (savedState.expansionStates [window.location.href] !== undefined) {">
							<outline text="collapseEverything ();"/>
							<outline text="applyExpansionState (savedState.expansionStates [window.location.href]);"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="catch (err) {">
						<outline text="console.log (&quot;restoreExpansionState: err.message == &quot; + err.message);"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function getOpmlHeadElements (xstruct) {">
					<outline text="var adropml = xmlGetAddress (xstruct, &quot;opml&quot;);" created="Wed, 30 Oct 2013 17:54:25 GMT" pgfnum="30678"/>
					<outline text="var adrhead = xmlGetAddress (adropml, &quot;head&quot;);" created="Wed, 30 Oct 2013 17:54:25 GMT" pgfnum="30678"/>
					<outline text="return (xmlGetSubValues (adrhead));"/>
					<outline text="}"/>
					</outline>
				<outline text="function startDisqus (disqusGroup) {">
					<outline text="(function() {">
						<outline text="var dsq = document.createElement ('script'); dsq.type = 'text/javascript'; dsq.async = true;"/>
						<outline text="dsq.src = '//' + disqusGroup + '.disqus.com/embed.js';"/>
						<outline text="(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);"/>
						<outline text="})();"/>
						</outline>
					<outline text="(function() {">
						<outline text="var s = document.createElement('script'); s.async = true;"/>
						<outline text="s.type = 'text/javascript';"/>
						<outline text="s.src = '//' + disqusGroup + '.disqus.com/count.js';"/>
						<outline text="(document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);"/>
						<outline text="}());"/>
						</outline>
					<outline text="}"/>
					<outline text=""/>
					</outline>
				<outline text="function typeToClass (type) {">
					<outline text="switch (type) {">
						<outline text="case &quot;blogpost&quot;:">
							<outline text="return (&quot;divtypeblogpost&quot;);"/>
							</outline>
						<outline text="case &quot;gist&quot;:">
							<outline text="return (&quot;divtypegist&quot;);"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="return (&quot;divtypedefault&quot;);"/>
					<outline text="}"/>
					</outline>
				<outline text="function readGlossary (urlOpmlFile, glossary, callback) {">
					<outline text="var whenstart = new Date ();"/>
					<outline text="if ((urlOpmlFile !== undefined) &amp;&amp; (urlOpmlFile.length &gt; 0)) {">
						<outline text="readHttpFileThruProxy (urlOpmlFile, undefined, function (opmltext) {">
							<outline text="if (opmltext != undefined) {">
								<outline text="var xstruct = $($.parseXML (opmltext)), ctread = 0;"/>
								<outline text="var adropml = xmlGetAddress (xstruct, &quot;opml&quot;);" created="Wed, 30 Oct 2013 17:54:25 GMT" pgfnum="30678"/>
								<outline text="var adrbody = xmlGetAddress (adropml, &quot;body&quot;);" created="Wed, 30 Oct 2013 17:54:25 GMT" pgfnum="30678"/>
								<outline text="xmlOneLevelVisit (adrbody, function (adrx) {" created="Tue, 26 Nov 2013 16:56:00 GMT" pgfnum="32314">
									<outline text="if (!xmlIsComment (adrx)) {" created="Wed, 06 Nov 2013 15:29:41 GMT" pgfnum="30984">
										<outline text="var name = xmlGetTextAtt (adrx);" created="Wed, 06 Nov 2013 13:33:56 GMT" pgfnum="30927"/>
										<outline text="if (name.length &gt; 0) {" created="Wed, 06 Nov 2013 13:38:57 GMT" pgfnum="30933">
											<outline text="var subtext = xmlGetSubText (adrx, false); //8/11/16 by DW -- don't add tabs and newlines to the glossary text" created="Wed, 08 Jan 2014 16:34:38 GMT" pgfnum="35513"/>
											<outline text="console.log (&quot;readGlossary: &quot; + name + &quot; == &quot; + subtext);" isComment="true"/>
											<outline text="ctread++;"/>
											<outline text="glossary [name] = subtext;" created="Wed, 06 Nov 2013 15:01:28 GMT" pgfnum="30982"/>
											<outline text="}" created="Wed, 06 Nov 2013 13:39:05 GMT" pgfnum="30934"/>
											</outline>
										<outline text="}" created="Wed, 06 Nov 2013 15:29:51 GMT" pgfnum="30985"/>
										</outline>
									<outline text="return (true);" created="Tue, 26 Nov 2013 17:10:43 GMT" pgfnum="32320"/>
									<outline text="});" created="Tue, 26 Nov 2013 16:56:16 GMT" pgfnum="32318"/>
									</outline>
								<outline text="console.log (&quot;readGlossary: read &quot; + ctread + &quot; items in &quot; + secondsSince (whenstart) + &quot; secs.&quot;);"/>
								<outline text="}"/>
								</outline>
							<outline text="if (callback !== undefined) {">
								<outline text="callback ();"/>
								<outline text="}"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="else {">
						<outline text="if (callback !== undefined) {">
							<outline text="callback ();"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function getHtmlFromOutline (theOutline) { //8/19/21 by DW" created="Thu, 19 Aug 2021 20:32:51 GMT">
					<outline text="var htmltext = &quot;&quot;, indentlevel = 0;" created="Thu, 19 Aug 2021 20:33:44 GMT"/>
					<outline text="function add (s) {" created="Thu, 19 Aug 2021 20:35:34 GMT">
						<outline text="if (s !== undefined) {" created="Thu, 19 Aug 2021 20:38:11 GMT">
							<outline text="htmltext += filledString (&quot;\t&quot;, indentlevel) + s + &quot;\n&quot;;" created="Thu, 19 Aug 2021 20:35:39 GMT"/>
							<outline text="}" created="Thu, 19 Aug 2021 20:38:15 GMT"/>
							</outline>
						<outline text="}" created="Thu, 19 Aug 2021 20:36:11 GMT"/>
						</outline>
					<outline text="function addLevel (subs) {" created="Thu, 19 Aug 2021 20:36:24 GMT">
						<outline text="if (subs !== undefined) {" created="Thu, 19 Aug 2021 20:37:32 GMT">
							<outline text="subs.forEach (function (sub) {" created="Thu, 19 Aug 2021 20:36:45 GMT">
								<outline text="add (sub.text);" created="Thu, 19 Aug 2021 20:37:53 GMT"/>
								<outline text="addLevel (sub.subs);" created="Thu, 19 Aug 2021 20:38:06 GMT"/>
								<outline text="});" created="Thu, 19 Aug 2021 20:36:54 GMT"/>
								</outline>
							<outline text="}" created="Thu, 19 Aug 2021 20:37:39 GMT"/>
							</outline>
						<outline text="}" created="Thu, 19 Aug 2021 20:36:40 GMT"/>
						</outline>
					<outline text="addLevel (theOutline.subs);" created="Thu, 19 Aug 2021 20:36:56 GMT"/>
					<outline text="return (htmltext);" created="Thu, 19 Aug 2021 20:33:44 GMT"/>
					<outline text="}" created="Thu, 19 Aug 2021 20:32:58 GMT"/>
					</outline>
				<outline text="function viewTypedOutline (head, theOutline, callback) {">
					<outline text="function ifDefinedSet (id, val) {">
						<outline text="if (val !== undefined) {">
							<outline text="$(&quot;#&quot; + id).html (val);"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="function dateString (theDate) {">
						<outline text="Changes" isComment="true" created="Wed, 18 Aug 2021 14:30:20 GMT">
							<outline text="8/18/21; 10:30:22 AM by DW" created="Wed, 18 Aug 2021 14:30:21 GMT">
								<outline text="If the OPML file is missing a header the value might be &lt;%dateModified%&gt; or somesuch." created="Wed, 18 Aug 2021 14:30:22 GMT"/>
								</outline>
							</outline>
						<outline text="if (theDate === undefined) { //5/9/20 by DW">
							<outline text="return (&quot;&quot;);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="try { //8/18/21 by DW" created="Wed, 18 Aug 2021 14:29:52 GMT">
								<outline text="return (dateFormat (new Date (theDate), &quot;dddd mmmm d, yyyy; h:MM TT Z&quot;));"/>
								<outline text="}" created="Wed, 18 Aug 2021 14:29:53 GMT"/>
								</outline>
							<outline text="catch (err) {" created="Wed, 18 Aug 2021 14:30:01 GMT">
								<outline text="return (&quot;&quot;);" created="Wed, 18 Aug 2021 14:30:05 GMT"/>
								<outline text="}" created="Wed, 18 Aug 2021 14:30:09 GMT"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="ifDefinedSet (&quot;idOutlineTitle&quot;, head.title);"/>
					<outline text="ifDefinedSet (&quot;idOutlineDescription&quot;, head.description);"/>
					<outline text="ifDefinedSet (&quot;idOutlineFooter&quot;, head.footer);"/>
					<outline text="ifDefinedSet (&quot;idWhenLastUpdate&quot;, dateString (head.dateModified));"/>
					<outline text="ifDefinedSet (&quot;idWhenCreated&quot;, dateString (head.dateCreated));"/>
					<outline text=""/>
					<outline text="var type = head.type || &quot;blogpost&quot;;"/>
					<outline text="$(&quot;#idOutlineDisplayer&quot;).addClass (typeToClass (type));"/>
					<outline text=""/>
					<outline text="var outlineHtml;" created="Thu, 19 Aug 2021 20:31:17 GMT"/>
					<outline text="switch (type) {" created="Thu, 19 Aug 2021 20:31:17 GMT">
						<outline text="case &quot;blogpost&quot;:" created="Thu, 19 Aug 2021 20:31:27 GMT">
							<outline text="outlineHtml = renderOutlineBrowser (theOutline, false, undefined, undefined, true);"/>
							<outline text="outlineHtml = emojiProcess (outlineHtml);"/>
							<outline text="break;" created="Thu, 19 Aug 2021 20:31:35 GMT"/>
							</outline>
						<outline text="case &quot;html&quot;:" created="Thu, 19 Aug 2021 20:31:39 GMT">
							<outline text="outlineHtml = getHtmlFromOutline (theOutline);" created="Thu, 19 Aug 2021 20:32:22 GMT"/>
							<outline text="break;" created="Thu, 19 Aug 2021 20:31:47 GMT"/>
							</outline>
						<outline text="}" created="Thu, 19 Aug 2021 20:31:26 GMT"/>
						</outline>
					<outline text=""/>
					<outline text="function finishStart () {">
						<outline text="if (getBoolean (head.flDisqusComments)) {">
							<outline text="var disqusGroup = head.disqusGroup || &quot;smallpict&quot;;"/>
							<outline text="startDisqus (disqusGroup);"/>
							<outline text="$(&quot;#idComments&quot;).css (&quot;display&quot;, &quot;block&quot;);"/>
							<outline text="}"/>
							</outline>
						<outline text="if (head.urlCustomCss !== undefined) {">
							<outline text="http://stackoverflow.com/questions/14028113/load-different-css-stylesheet-with-javascript" isComment="true"/>
							<outline text="console.log (&quot;Inserting custom css: &quot; + head.urlCustomCss);"/>
							<outline text="var header = document.getElementsByTagName (&quot;head&quot;) [0];"/>
							<outline text="var styleSheet = document.createElement (&quot;link&quot;);"/>
							<outline text="styleSheet.rel = &quot;stylesheet&quot;;"/>
							<outline text="styleSheet.type = &quot;text/css&quot;;"/>
							<outline text="styleSheet.href = head.urlCustomCss;"/>
							<outline text="styleSheet.media = &quot;all&quot;;" isComment="true"/>
							<outline text="header.appendChild (styleSheet);"/>
							<outline text="}"/>
							</outline>
						<outline text="$(&quot;#idOutlineDisplayer&quot;).html (outlineHtml);"/>
						<outline text="callback ();"/>
						<outline text="}"/>
						</outline>
					<outline text=""/>
					<outline text="if (head.urlGlossary !== undefined) {">
						<outline text="var glossary = new Object ();"/>
						<outline text="readGlossary (head.urlGlossary, glossary, function () {">
							<outline text="outlineHtml = multipleReplaceAll (outlineHtml, glossary);"/>
							<outline text="finishStart ();"/>
							<outline text="});"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="else {">
						<outline text="finishStart ();"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function viewTypedOutline (headElements, theOutline, callback) {" isComment="true">
					<outline text="var flDisqusComments = getBoolean (headElements.flDisqusComments), disqusGroup = &quot;smallpict&quot;;"/>
					<outline text="if (headElements.disqusGroup !== undefined) {">
						<outline text="disqusGroup = headElements.disqusGroup;"/>
						<outline text="}"/>
						</outline>
					<outline text="$(&quot;#idOutlineTitle&quot;).html (headElements.title);"/>
					<outline text=""/>
					<outline text="if (headElements.description !== undefined) { //3/18/20 by DW">
						<outline text="$(&quot;#idOutlineDescription&quot;).html (headElements.description);"/>
						<outline text="}"/>
						</outline>
					<outline text="if (headElements.footer !== undefined) { //3/18/20 by DW">
						<outline text="$(&quot;#idOutlineFooter&quot;).html (headElements.footer);"/>
						<outline text="}"/>
						</outline>
					<outline text=""/>
					<outline text="$(&quot;#idPageTitle&quot;).html (theOutline.text);" isComment="true"/>
					<outline text=""/>
					<outline text="if (headElements.dateModified !== undefined) {">
						<outline text="$(&quot;#idWhenLastUpdate&quot;).html (dateFormat (new Date (headElements.dateModified), &quot;dddd mmmm d, yyyy; h:MM TT Z&quot;));"/>
						<outline text="}"/>
						</outline>
					<outline text="if (headElements.dateCreated !== undefined) {">
						<outline text="$(&quot;#idWhenCreated&quot;).html (dateFormat (new Date (headElements.dateCreated), &quot;dddd mmmm d, yyyy; h:MM TT Z&quot;));"/>
						<outline text="}"/>
						</outline>
					<outline text=""/>
					<outline text="var type = (headElements.type === undefined) ? &quot;blogpost&quot; : headElements.type;"/>
					<outline text="$(&quot;#idOutlineDisplayer&quot;).addClass (typeToClass (type));"/>
					<outline text=""/>
					<outline text="var outlineHtml = renderOutlineBrowser (theOutline, false, undefined, undefined, true);"/>
					<outline text="outlineHtml = emojiProcess (outlineHtml);"/>
					<outline text=""/>
					<outline text="function finishStart () {">
						<outline text="if (flDisqusComments) {">
							<outline text="startDisqus (disqusGroup);"/>
							<outline text="$(&quot;#idComments&quot;).css (&quot;display&quot;, &quot;block&quot;);"/>
							<outline text="}"/>
							</outline>
						<outline text="if (headElements.urlCustomCss !== undefined) {">
							<outline text="http://stackoverflow.com/questions/14028113/load-different-css-stylesheet-with-javascript" isComment="true"/>
							<outline text="console.log (&quot;Inserting custom css: &quot; + headElements.urlCustomCss);"/>
							<outline text="var header = document.getElementsByTagName (&quot;head&quot;) [0];"/>
							<outline text="var styleSheet = document.createElement (&quot;link&quot;);"/>
							<outline text="styleSheet.rel = &quot;stylesheet&quot;;"/>
							<outline text="styleSheet.type = &quot;text/css&quot;;"/>
							<outline text="styleSheet.href = headElements.urlCustomCss;"/>
							<outline text="styleSheet.media = &quot;all&quot;;" isComment="true"/>
							<outline text="header.appendChild (styleSheet);"/>
							<outline text="}"/>
							</outline>
						<outline text="callback ();"/>
						<outline text="}"/>
						</outline>
					<outline text=""/>
					<outline text="$(&quot;#idOutlineDisplayer&quot;).html (outlineHtml);"/>
					<outline text="if (headElements.urlGlossary !== undefined) {">
						<outline text="var glossary = new Object ();"/>
						<outline text="readGlossary (headElements.urlGlossary, glossary, function () {">
							<outline text="outlineHtml = multipleReplaceAll (outlineHtml, glossary);"/>
							<outline text="$(&quot;#idOutlineDisplayer&quot;).html (outlineHtml);"/>
							<outline text="finishStart ();"/>
							<outline text="});"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="else {">
						<outline text="finishStart ();"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function everySecond () {">
					<outline text="}"/>
					</outline>
				<outline text="function setXmlIcon (urlOpml) {">
					<outline text="$(&quot;#idXmlIcon&quot;).html (&quot;&lt;a href=\&quot;&quot; + urlOpml + &quot;\&quot;&gt;&lt;img src=\&quot;http://scripting.com/images/xml.gif\&quot; widt=\&quot;36\&quot; height=\&quot;14\&quot;&gt;&lt;/a&gt;&quot;);"/>
					<outline text="console.log (&quot;setXmlIcon: urlOpmlFile == &quot; + urlOpml);"/>
					<outline text="}"/>
					</outline>
				<outline text="function addPermalinks () { //6/24/21 by DW" created="Thu, 24 Jun 2021 13:54:01 GMT">
					<outline text="Changes" isComment="true" created="Thu, 24 Jun 2021 13:54:20 GMT">
						<outline text="6/24/21; 9:54:24 AM by DW" created="Thu, 24 Jun 2021 13:54:22 GMT">
							<outline text="In previous versions we just put the permalinks at the top level. Now we're putting them on all lines in the outline. " created="Thu, 24 Jun 2021 13:54:24 GMT"/>
							</outline>
						</outline>
					<outline text="function addToSubs (theSubs) {" created="Thu, 24 Jun 2021 13:54:53 GMT">
						<outline text="theSubs.forEach (function (sub) {" created="Thu, 24 Jun 2021 13:56:41 GMT">
							<outline text="sub.flPermalink = true;"/>
							<outline text="if (sub.subs !== undefined) {" created="Thu, 24 Jun 2021 13:57:08 GMT">
								<outline text="addToSubs (sub.subs);" created="Thu, 24 Jun 2021 13:57:21 GMT"/>
								<outline text="}" created="Thu, 24 Jun 2021 13:57:15 GMT"/>
								</outline>
							<outline text="});" created="Thu, 24 Jun 2021 13:56:48 GMT"/>
							</outline>
						<outline text="}" created="Thu, 24 Jun 2021 13:56:07 GMT"/>
						</outline>
					<outline text="addToSubs (jstruct.opml.body.subs);" created="Thu, 24 Jun 2021 13:54:53 GMT"/>
					<outline text="" isComment="true" created="Thu, 24 Jun 2021 13:54:53 GMT"/>
					<outline text="//add top level permalinks" isComment="true">
						<outline text="var toplevel = jstruct.opml.body.subs;"/>
						<outline text="for (var i = 0; i &lt; toplevel.length; i++) {">
							<outline text="toplevel [i].flPermalink = true;"/>
							<outline text="}"/>
							</outline>
						</outline>
					<outline text="}" created="Thu, 24 Jun 2021 13:54:19 GMT"/>
					</outline>
				<outline text="function startup () {">
					<outline text="console.log (&quot;startupppp&quot;);"/>
					<outline text=""/>
					<outline text="if (localStorage.savedState !== undefined) { //9/22/17 by DW">
						<outline text="savedState = JSON.parse (localStorage.savedState);"/>
						<outline text="}"/>
						</outline>
					<outline text=""/>
					<outline text="hitCounter (); "/>
					<outline text="initGoogleAnalytics (); "/>
					<outline text=""/>
					<outline text="addPermalinks (); //6/24/21 by DW" created="Thu, 24 Jun 2021 13:55:05 GMT"/>
					<outline text="" created="Thu, 24 Jun 2021 13:55:18 GMT"/>
					<outline text="outlineBrowserData.flTextBasedPermalinks = false;"/>
					<outline text=""/>
					<outline text="viewTypedOutline (jstruct.opml.head, jstruct.opml.body, function () {">
						<outline text="setXmlIcon (getAppUrl () + &quot;?format=opml&quot;);"/>
						<outline text="restoreExpansionState (); //9/26/17 by DW" isComment="true"/>
						<outline text="outlineBrowserData.expandCollapseCallback = function (idnum) {">
							<outline text="if (savedState.expansionStates === undefined) {">
								<outline text="savedState.expansionStates = new Object ();"/>
								<outline text="}"/>
								</outline>
							<outline text="savedState.expansionStates [window.location.href] = getExpansionState ();"/>
							<outline text="saveState ();"/>
							<outline text="}"/>
							</outline>
						<outline text=""/>
						<outline text="$(&quot;#idOutlineContainer&quot;).css (&quot;display&quot;, &quot;block&quot;);"/>
						<outline text=""/>
						<outline text="self.setInterval (everySecond, 1000); "/>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="styles.css">
				<outline text="@import url('https://fonts.googleapis.com/css?family=Oswald:400,700');"/>
				<outline text=""/>
				<outline text="body {">
					<outline text="font-family: &quot;Ubuntu&quot;;"/>
					<outline text="font-size: 18px;"/>
					<outline text="line-height: 140%;"/>
					<outline text="background-color: whitesmoke;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divPageBody {">
					<outline text="width: 65%;"/>
					<outline text="margin-top: 85px;"/>
					<outline text="margin-left: auto;"/>
					<outline text="margin-right: auto;"/>
					<outline text="border: 1px solid silver;" isComment="true"/>
					<outline text="margin-bottom: 400px;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divTopPageMessage {">
					<outline text="margin-top: 45px;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divOutlineContainer {">
					<outline text="margin-left: 50px;"/>
					<outline text="margin-right: 25px;"/>
					<outline text="margin-top: 10px;"/>
					<outline text="margin-bottom: 35px;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divOutlineTitle {">
					<outline text="font-size: 52px;"/>
					<outline text="font-weight: bold;"/>
					<outline text="line-height: 110%;"/>
					<outline text=""/>
					<outline text="/* 9/27/17 DW */">
						<outline text="font-family: &quot;Oswald&quot;;"/>
						<outline text="font-weight: 700;"/>
						<outline text="font-style: normal;"/>
						<outline text="letter-spacing: -0.04em;"/>
						<outline text="line-height: 1.1;"/>
						<outline text="text-shadow: 1px 1px black;" isComment="true"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text=".divOutlineDisplayer {">
					<outline text="font-family: &quot;Georgia&quot;;"/>
					<outline text="font-size: 24px;"/>
					<outline text="line-height: 140%;"/>
					<outline text="margin-left: -25px;"/>
					<outline text="margin-top: 28px;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divOutlineHead {">
					<outline text="display: none;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divOutlineText {">
					<outline text="line-height: 145%;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divLastUpdate {">
					<outline text="margin-top: 30px;"/>
					<outline text="margin-bottom: 30px;"/>
					<outline text="letter-spacing: -0.01em;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divWhenCreated {">
					<outline text="margin-top: 50px;"/>
					<outline text="border-top: 1px solid silver;"/>
					<outline text="padding-top: 5px;"/>
					<outline text="margin-bottom: 30px;"/>
					<outline text="letter-spacing: -0.01em;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divOutlineDescription {">
					<outline text="font-family: &quot;Georgia&quot;;" isComment="true"/>
					<outline text="font-size: 20px;"/>
					<outline text="line-height: 140%;"/>
					<outline text="margin-left: 3px;"/>
					<outline text="margin-top: 5px;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divOutlineDescription {" isComment="true">
					<outline text="margin-top: 2px;" isComment="true"/>
					<outline text="margin-left: 4px;" isComment="true"/>
					<outline text="margin-bottom: 5px;" isComment="true"/>
					<outline text="" isComment="true"/>
					<outline text="font-size: 1.15em;" isComment="true"/>
					<outline text="line-height: 130%;"/>
					<outline text="margin-top: 10px;"/>
					<outline text="margin-bottom: 35px;"/>
					<outline text="margin-left: 7%;" isComment="true"/>
					<outline text="margin-right: 7%;" isComment="true"/>
					<outline text=""/>
					<outline text="previous version -- 7/9/20 by DW" isComment="true">
						<outline text="font-size: 1.5em;"/>
						<outline text="line-height: 120%;"/>
						<outline text="margin-top: 35px;"/>
						<outline text="margin-bottom: 35px;"/>
						<outline text="margin-left: 7%;"/>
						<outline text="margin-right: 7%;"/>
						</outline>
					<outline text=""/>
					<outline text="color: black;"/>
					<outline text="opacity: 0.7;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divOutlineFooter {">
					<outline text="}"/>
					</outline>
				<outline text=""/>
				<outline text="/* blogpost type */">
					<outline text=".divtypeblogpost .ulLevel0 {">
						<outline text="font-weight: bold;"/>
						<outline text="font-family: &quot;Ubuntu&quot;;"/>
						<outline text="margin-bottom: 10px;"/>
						<outline text="margin-left: 32px;"/>
						<outline text=""/>
						<outline text="/* 9/27/17 DW */">
							<outline text="font-family: &quot;Oswald&quot;;" isComment="true"/>
							<outline text="letter-spacing: -0.01em;"/>
							</outline>
						<outline text=""/>
						<outline text=""/>
						<outline text=""/>
						<outline text="}"/>
						</outline>
					<outline text=".divtypeblogpost .ulLevel1 {">
						<outline text="font-family: &quot;Georgia&quot;;"/>
						<outline text="font-weight: normal;"/>
						<outline text="margin-left: 0;"/>
						<outline text="margin-bottom: 25px;"/>
						<outline text="}"/>
						</outline>
					<outline text=".divtypeblogpost .ulLevel2, .divtypeblogpost .ulLevel3, .divtypeblogpost .ulLevel4, .divtypeblogpost .ulLevel5 {">
						<outline text="font-family: &quot;Georgia&quot;;"/>
						<outline text="font-weight: normal;"/>
						<outline text="margin-bottom: 10px;"/>
						<outline text="}"/>
						</outline>
					</outline>
				<outline text="/* default type  */">
					<outline text=".divtypedefault .ulLevel0 {">
						<outline text="margin-left: 30px;"/>
						<outline text="}"/>
						</outline>
					<outline text=".divtypedefault .ulLevel1 {">
						<outline text="font-family: &quot;Georgia&quot;;"/>
						<outline text="font-weight: normal;"/>
						<outline text="margin-left: 0;" isComment="true"/>
						<outline text="margin-bottom: 25px;"/>
						<outline text="}"/>
						</outline>
					<outline text=".divtypedefault .ulLevel2, .divtypedefault .ulLevel3, .divtypedefault .ulLevel4, .divtypedefault .ulLevel5 {">
						<outline text="font-family: &quot;Georgia&quot;;"/>
						<outline text="font-weight: normal;"/>
						<outline text="margin-bottom: 10px;"/>
						<outline text="}"/>
						</outline>
					</outline>
				<outline text=""/>
				<outline text=".divComments {">
					<outline text="display: none;"/>
					<outline text="border: 1px solid silver;" created="Fri, 07 Mar 2014 17:08:19 GMT" pgfnum="38600"/>
					<outline text="padding: 8px;"/>
					<outline text="background-color: whitesmoke;"/>
					<outline text="margin-top: 60px;"/>
					<outline text="margin-bottom: 50px;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divXmlIcon {">
					<outline text="float: right;"/>
					<outline text="padding-top: 2px;"/>
					<outline text="}"/>
					</outline>
				<outline text=".spNodePermalink a {">
					<outline text="font-weight: normal;"/>
					<outline text="font-size: 14px;"/>
					<outline text="vertical-align: middle;"/>
					<outline text="margin-top: 2px;"/>
					<outline text="opacity: 0.2;"/>
					<outline text="}"/>
					</outline>
				<outline text=""/>
				<outline text="/* 9/3/18 by DW */">
					<outline text=".spIndexFileLink {">
						<outline text="color: black;"/>
						<outline text="cursor: pointer;"/>
						<outline text="}"/>
						</outline>
					</outline>
				<outline text="/* 8/18/21 by DW */" created="Wed, 18 Aug 2021 14:17:29 GMT">
					<outline text=".divControlPanel {" created="Thu, 19 Aug 2021 13:25:32 GMT">
						<outline text="width: 100%;" created="Thu, 19 Aug 2021 13:25:40 GMT"/>
						<outline text="height: 55px;" created="Thu, 19 Aug 2021 13:25:47 GMT"/>
						<outline text="color: #777777;" created="Thu, 19 Aug 2021 13:39:27 GMT"/>
						<outline text="background-color: #FCFCFC;" created="Thu, 19 Aug 2021 13:25:53 GMT"/>
						<outline text="border-bottom: 1px solid silver;" created="Thu, 19 Aug 2021 13:39:36 GMT"/>
						<outline text="}" created="Thu, 19 Aug 2021 13:25:36 GMT"/>
						</outline>
					<outline text=".divControlPanel .divContainer {" created="Thu, 19 Aug 2021 14:07:10 GMT">
						<outline text="width: 65%;" created="Thu, 19 Aug 2021 13:25:40 GMT"/>
						<outline text="margin-left: auto;"/>
						<outline text="margin-right: auto;"/>
						<outline text="}" created="Thu, 19 Aug 2021 14:07:25 GMT"/>
						</outline>
					<outline text=".spSiteTitle {" created="Thu, 19 Aug 2021 13:31:41 GMT">
						<outline text="font-family: &quot;Rancho&quot;;" created="Thu, 19 Aug 2021 13:31:46 GMT"/>
						<outline text="font-size: 38px;" created="Thu, 19 Aug 2021 13:31:56 GMT"/>
						<outline text="line-height: 50px;" created="Thu, 19 Aug 2021 13:37:01 GMT"/>
						<outline text="vertical-align: middle;" created="Thu, 19 Aug 2021 13:37:10 GMT"/>
						<outline text="margin-left: 50px;" created="Thu, 19 Aug 2021 13:40:17 GMT"/>
						<outline text="}" created="Thu, 19 Aug 2021 13:32:02 GMT"/>
						</outline>
					<outline text=".spSiteTitle a {" created="Thu, 19 Aug 2021 14:16:21 GMT">
						<outline text="color: inherit;" created="Thu, 19 Aug 2021 14:16:24 GMT"/>
						<outline text="}" created="Thu, 19 Aug 2021 14:16:28 GMT"/>
						</outline>
					<outline text=".divTheMenu {" created="Thu, 19 Aug 2021 13:46:04 GMT">
						<outline text="display: inline-block;" created="Thu, 19 Aug 2021 13:46:17 GMT"/>
						<outline text="margin-top: 6px;" created="Thu, 19 Aug 2021 14:20:27 GMT"/>
						<outline text="line-height: 50px;" created="Thu, 19 Aug 2021 13:37:01 GMT"/>
						<outline text="vertical-align: middle;" created="Thu, 19 Aug 2021 13:37:10 GMT"/>
						<outline text="margin-left: 30px;" created="Thu, 19 Aug 2021 13:54:18 GMT"/>
						<outline text="font-size: 16px;" created="Thu, 19 Aug 2021 13:55:08 GMT"/>
						<outline text="font-weight: bold;" created="Thu, 19 Aug 2021 13:55:15 GMT"/>
						<outline text="}" created="Thu, 19 Aug 2021 13:46:09 GMT"/>
						</outline>
					<outline text=".divTheMenu a {">
						<outline text="color: inherit;" created="Thu, 19 Aug 2021 13:54:33 GMT"/>
						<outline text="}" created="Thu, 19 Aug 2021 13:54:37 GMT"/>
						</outline>
					<outline text=".divTheMenu .nav {" created="Thu, 19 Aug 2021 13:52:47 GMT">
						<outline text="margin-bottom: 0;" created="Thu, 19 Aug 2021 13:53:01 GMT"/>
						<outline text="}" created="Thu, 19 Aug 2021 13:52:59 GMT"/>
						</outline>
					<outline text=".divTheMenu .dropdown-menu {" created="Thu, 19 Aug 2021 14:09:18 GMT">
						<outline text="font-size: 15px;" created="Thu, 19 Aug 2021 14:09:20 GMT"/>
						<outline text="}" created="Thu, 19 Aug 2021 14:09:27 GMT"/>
						</outline>
					<outline text=".divTheMenu .caret {" created="Thu, 19 Aug 2021 14:10:37 GMT">
						<outline text="color: inherit;" created="Thu, 19 Aug 2021 14:10:42 GMT"/>
						<outline text="}" created="Thu, 19 Aug 2021 14:10:46 GMT"/>
						</outline>
					<outline text=".divTheMenu .nav .dropdown-toggle .caret {">
						<outline text="margin-top: 10px;"/>
						<outline text="border-top-color: inherit;"/>
						<outline text="border-bottom-color: inherit;"/>
						<outline text="}"/>
						</outline>
					<outline text=".divPageBody {">
						<outline text="width: 65%;"/>
						<outline text="margin-left: auto;"/>
						<outline text="margin-right: auto;"/>
						<outline text="margin-top: 0;"/>
						<outline text="border: 1px solid silver;" isComment="true"/>
						<outline text="margin-bottom: 400px;"/>
						<outline text="}"/>
						</outline>
					<outline text="" created="Thu, 19 Aug 2021 13:25:32 GMT"/>
					<outline text=".navbar-inner {" isComment="true" created="Wed, 18 Aug 2021 14:18:10 GMT">
						<outline text="margin-top: -24;" created="Wed, 18 Aug 2021 14:18:22 GMT"/>
						<outline text="}" created="Wed, 18 Aug 2021 14:18:12 GMT"/>
						</outline>
					<outline text=".divMenubar .brand {" isComment="true" created="Wed, 18 Aug 2021 14:17:31 GMT">
						<outline text="margin-top: 2px;" created="Wed, 18 Aug 2021 14:17:34 GMT"/>
						<outline text="}" created="Wed, 18 Aug 2021 14:17:39 GMT"/>
						</outline>
					</outline>
				<outline text=""/>
				<outline text="/* styles for tablet */" created="Sun, 09 Mar 2014 19:11:13 GMT" pgfnum="38719">
					<outline text="@media only screen "/>
					<outline text="and (min-device-width : 481px) "/>
					<outline text="and (max-device-width : 800px) {">
						<outline text=".divPageBody {">
							<outline text="width: 80%;"/>
							<outline text="margin-top: 0px;"/>
							<outline text="}"/>
							</outline>
						<outline text=".divControlPanel .divContainer {" created="Thu, 19 Aug 2021 14:07:10 GMT">
							<outline text="width: 80%;" created="Thu, 19 Aug 2021 13:25:40 GMT"/>
							<outline text="}" created="Thu, 19 Aug 2021 14:07:25 GMT"/>
							</outline>
						<outline text=".spSiteTitle { " created="Sun, 12 Sep 2021 13:55:00 GMT">
							<outline text="margin-left: 0;" created="Sun, 12 Sep 2021 13:55:03 GMT"/>
							<outline text="}" created="Sun, 12 Sep 2021 13:55:14 GMT"/>
							</outline>
						<outline text=".divOutlineContainer {">
							<outline text="margin-left: 0;"/>
							<outline text="margin-right: 0;"/>
							<outline text="}"/>
							</outline>
						<outline text=".divWhenCreated, .divLastUpdate {">
							<outline text="font-size: .9em;"/>
							<outline text="}"/>
							</outline>
						<outline text=".divOutlineText {">
							<outline text="font-size: .8em;"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					</outline>
				<outline text="/* styles for phone */">
					<outline text="@media only screen "/>
					<outline text="and (min-device-width : 320px) "/>
					<outline text="and (max-device-width : 480px) {">
						<outline text=".divPageBody {">
							<outline text="width: 85%;"/>
							<outline text="margin-top: 10px;"/>
							<outline text="}"/>
							</outline>
						<outline text=".divControlPanel .divContainer {" created="Thu, 19 Aug 2021 14:07:10 GMT">
							<outline text="width: 85%;" created="Thu, 19 Aug 2021 13:25:40 GMT"/>
							<outline text="}" created="Thu, 19 Aug 2021 14:07:25 GMT"/>
							</outline>
						<outline text=".spSiteTitle { " created="Sun, 12 Sep 2021 13:55:00 GMT">
							<outline text="margin-left: 0;" created="Sun, 12 Sep 2021 13:55:03 GMT"/>
							<outline text="}" created="Sun, 12 Sep 2021 13:55:14 GMT"/>
							</outline>
						<outline text=".divOutlineContainer {">
							<outline text="margin-left: 0;"/>
							<outline text="margin-right: 0;"/>
							<outline text="}"/>
							</outline>
						<outline text=".divWhenCreated, .divLastUpdate {">
							<outline text="font-size: .7em;"/>
							<outline text="margin-top: 0;"/>
							<outline text="margin-bottom: 20px;"/>
							<outline text="}"/>
							</outline>
						<outline text=".divOutlineTitle {">
							<outline text="font-size: 36px;"/>
							<outline text="0.7 * 52" isComment="true">
								<outline text="36.4" isComment="true"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					</outline>
				</outline>
			<outline text="template.txt" created="Wed, 18 Aug 2021 13:28:44 GMT">
				<outline text="&lt;html&gt;">
					<outline text="&lt;head&gt;">
						<outline text="&lt;title id=&quot;idPageTitle&quot;&gt;[%title%]&lt;/title&gt;"/>
						<outline text="&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;"/>
						<outline text="&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;"/>
						<outline text=""/>
						<outline text="&lt;%basicIncludes2%&gt;"/>
						<outline text="&lt;%riverBrowserIncludesCdn%&gt;" isComment="true"/>
						<outline text="&lt;script src=&quot;http://api.nodestorage.io/api.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;script src=&quot;http://fargo.io/code/shared/emojify.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;link rel=&quot;stylesheet&quot; href=&quot;http://fargo.io/code/shared/emojify.css&quot;/&gt;"/>
						<outline text="&lt;script src=&quot;http://fargo.io/code/markdownConverter.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;script src=&quot;http://fargo.io/cms/dateFormat.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;script src=&quot;http://fargo.io/code/browsers/outlinebrowser.js&quot;&gt;&lt;/script&gt;" created="Thu, 08 May 2014 14:04:18 GMT" pgfnum="41269"/>
						<outline text="&lt;link href=&quot;http://fargo.io/code/browsers/outlinebrowser.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;"/>
						<outline text="&lt;link href=&quot;http://fargo.io/code/shared/menus.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;" isComment="true"/>
						<outline text=""/>
						<outline text="&lt;%basicIncludesCdn%&gt;" isComment="true"/>
						<outline text="&lt;%riverBrowserIncludesCdn%&gt;" isComment="true"/>
						<outline text="" isComment="true"/>
						<outline text="&lt;script src=&quot;http://fargo.io/code/shared/xml.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;script src=&quot;http://fargo.io/code/shared/reader.js&quot;&gt;&lt;/script&gt;" created="Thu, 08 May 2014 14:04:18 GMT" pgfnum="41269"/>
						<outline text=""/>
						<outline text="&lt;script src=&quot;http://reallysimple.org/templates/opml/code.js&quot;&gt;&lt;/script&gt;" created="Thu, 08 May 2014 14:04:18 GMT" pgfnum="41269"/>
						<outline text="&lt;link href=&quot;http://reallysimple.org/templates/opml/styles.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;"/>
						<outline text="" created="Wed, 18 Aug 2021 13:42:41 GMT"/>
						<outline text="&lt;script src=&quot;http://scripting.com/code/pagepark/templates/opml/code.js&quot;&gt;&lt;/script&gt;" isComment="true" created="Thu, 08 May 2014 14:04:18 GMT" pgfnum="41269"/>
						<outline text="&lt;link href=&quot;http://scripting.com/code/pagepark/templates/opml/styles.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;" isComment="true"/>
						<outline text=""/>
						<outline text="&lt;!-- Facebook metadata --&gt;">
							<outline text="&lt;meta property=&quot;og:url&quot; content=&quot;[%url%]&quot; /&gt;"/>
							<outline text="&lt;meta property=&quot;og:type&quot; content=&quot;website&quot; /&gt;"/>
							<outline text="&lt;meta property=&quot;og:title&quot; content=&quot;[%title%]&quot; /&gt;"/>
							<outline text="&lt;meta property=&quot;og:description&quot; content=&quot;[%description%]&quot; /&gt;"/>
							<outline text="&lt;meta property=&quot;og:image&quot; content=&quot;[%image%]&quot; /&gt;"/>
							<outline text="&lt;meta property=&quot;og:site_name&quot; content=&quot;[%sitename%]&quot; /&gt;"/>
							</outline>
						<outline text="&lt;!-- Twitter metadata --&gt;">
							<outline text="&lt;meta name=&quot;twitter:card&quot; content=&quot;summary_large_image&quot;&gt;"/>
							<outline text="&lt;meta name=&quot;twitter:site&quot; content=&quot;@[%ownerTwitterScreenName%]&quot;&gt;"/>
							<outline text="&lt;meta name=&quot;twitter:title&quot; content=&quot;[%title%]&quot;&gt;"/>
							<outline text="&lt;meta name=&quot;twitter:description&quot; content=&quot;[%description%]&quot;&gt;"/>
							<outline text="&lt;meta name=&quot;twitter:image:src&quot; content=&quot;[%image%]&quot;&gt;"/>
							</outline>
						<outline text=""/>
						<outline text="&lt;script&gt;" created="Thu, 12 Dec 2013 17:06:51 GMT" pgfnum="33502">
							<outline text="var jstruct = [%bodytext%];"/>
							<outline text="&lt;/script&gt;" created="Thu, 12 Dec 2013 17:07:17 GMT" pgfnum="33504"/>
							</outline>
						<outline text="&lt;style&gt;" isComment="true" created="Tue, 17 Aug 2021 21:29:28 GMT">
							<outline text=".divMenubar {">
								<outline text="margin-top: -45px;"/>
								<outline text="}"/>
								</outline>
							<outline text="&lt;/style&gt;" created="Tue, 17 Aug 2021 21:29:37 GMT"/>
							</outline>
						<outline text="&lt;style&gt;" isComment="true" created="Wed, 11 Sep 2013 14:27:45 GMT" pgfnum="30095">
							<outline text="body {">
								<outline text="font-family: &quot;Ubuntu&quot;;"/>
								<outline text="font-size: 18px;"/>
								<outline text="background-color: whitesmoke;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divTopPageMessage {">
								<outline text="margin-top: 45px;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divPageBody {">
								<outline text="width: 60%;"/>
								<outline text="margin-top: 45px;"/>
								<outline text="margin-left: auto;"/>
								<outline text="margin-right: auto;"/>
								<outline text="border: 1px solid silver;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divOutlineContainer {">
								<outline text="margin-left: 50px;"/>
								<outline text="margin-right: 25px;"/>
								<outline text="margin-top: 10px;"/>
								<outline text="margin-bottom: 35px;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divOutlineTitle {">
								<outline text="font-size: 52px;"/>
								<outline text="font-weight: bold;"/>
								<outline text="line-height: 110%;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divOutlineDisplayer {">
								<outline text="font-family: &quot;Georgia&quot;;"/>
								<outline text="font-size: 24px;"/>
								<outline text="line-height: 140%;"/>
								<outline text="margin-left: -25px;"/>
								<outline text="margin-top: 1em;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divOutlineHead {">
								<outline text="display: none;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divRenderedOutline .divOutlineText {">
								<outline text="line-height: 145%;"/>
								<outline text="}"/>
								</outline>
							<outline text="&lt;/style&gt;" created="Wed, 11 Sep 2013 14:30:17 GMT" pgfnum="30105"/>
							</outline>
						<outline text="&lt;/head&gt;"/>
						</outline>
					<outline text="&lt;body&gt;">
						<outline text="&lt;div class=&quot;divControlPanel&quot;&gt;" created="Thu, 19 Aug 2021 13:25:01 GMT">
							<outline text="&lt;div class=&quot;divContainer&quot;&gt; " created="Thu, 19 Aug 2021 14:07:50 GMT">
								<outline text="&lt;span class=&quot;spSiteTitle&quot;&gt;&lt;a href=&quot;/&quot;&gt;opml.org&lt;/a&gt;&lt;/span&gt;" created="Thu, 19 Aug 2021 13:31:12 GMT"/>
								<outline text="&lt;div class=&quot;divTheMenu&quot;&gt;">
									<outline text="&lt;ul class=&quot;nav&quot; id=&quot;idMainMenuList&quot;&gt;" created="Thu, 19 Aug 2021 13:48:01 GMT">
										<outline text="&lt;li class=&quot;dropdown&quot;&gt;" created="Thu, 19 Aug 2021 13:51:22 GMT">
											<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;Menu&amp;nbsp;&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;"/>
											<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
												<outline text="&lt;li&gt;&lt;a href=&quot;/&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;"/>
												<outline text="&lt;li&gt;&lt;a href=&quot;/spec2.opml&quot;&gt;OPML 2.0 spec&lt;/a&gt;&lt;/li&gt;"/>
												<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
												<outline text="&lt;li&gt;&lt;a href=&quot;/compatibleApps.opml&quot;&gt;OPML-compatible apps&lt;/a&gt;&lt;/li&gt;"/>
												<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
												<outline text="&lt;li class=&quot;dropdown-submenu&quot;&gt;">
													<outline text="&lt;a href=&quot;#&quot; tabindex=&quot;-1&quot;&gt;Examples...&lt;/a&gt;">
														<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
															<outline text="&lt;li&gt;&lt;a href=&quot;/examples/states.opml?format=opml&quot; tabindex=&quot;-1&quot; target=&quot;_blank&quot;&gt;states.opml&lt;/a&gt;&lt;/li&gt;"/>
															<outline text="&lt;li&gt;&lt;a href=&quot;/examples/subscriptionList.opml?format=opml&quot; tabindex=&quot;-1&quot; target=&quot;_blank&quot;&gt;subscriptionList.opml&lt;/a&gt;&lt;/li&gt;"/>
															<outline text="&lt;li&gt;&lt;a href=&quot;/examples/directory.opml?format=opml&quot; tabindex=&quot;-1&quot; target=&quot;_blank&quot;&gt;directory.opml&lt;/a&gt;&lt;/li&gt;"/>
															<outline text="&lt;li&gt;&lt;a href=&quot;/examples/category.opml?format=opml&quot; tabindex=&quot;-1&quot; target=&quot;_blank&quot;&gt;category.opml&lt;/a&gt;&lt;/li&gt;"/>
															<outline text="&lt;li&gt;&lt;a href=&quot;/examples/simpleScript.opml?format=opml&quot; tabindex=&quot;-1&quot; target=&quot;_blank&quot;&gt;simpleScript.opml&lt;/a&gt;&lt;/li&gt;"/>
															<outline text="&lt;li&gt;&lt;a href=&quot;/examples/placesLived.opml?format=opml&quot; tabindex=&quot;-1&quot; target=&quot;_blank&quot;&gt;placesLived.opml&lt;/a&gt;&lt;/li&gt;"/>
															<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
															<outline text="&lt;li&gt;&lt;a href=&quot;https://github.com/scripting/Scripting-News/tree/master/blog/opml&quot; tabindex=&quot;-1&quot; target=&quot;_blank&quot;&gt;Blog archive&lt;/a&gt;&lt;/li&gt;"/>
															</outline>
														<outline text="&lt;/ul&gt;"/>
														</outline>
													<outline text="&lt;/li&gt;"/>
													</outline>
												<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
												<outline text="&lt;li class=&quot;dropdown-submenu&quot;&gt;">
													<outline text="&lt;a href=&quot;#&quot; tabindex=&quot;-1&quot;&gt;Developers...&lt;/a&gt;">
														<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
															<outline text="&lt;li&gt;&lt;a href=&quot;https://github.com/scripting/opmlPackage&quot; tabindex=&quot;-1&quot; target=&quot;_blank&quot;&gt;OPML package&lt;/a&gt;&lt;/li&gt;"/>
															<outline text="&lt;li&gt;&lt;a href=&quot;https://github.com/scripting/opml.org/tree/main/opmlValidator&quot; tabindex=&quot;-1&quot; target=&quot;_blank&quot;&gt;OPML validator&lt;/a&gt;&lt;/li&gt;"/>
															<outline text="&lt;li&gt;&lt;a href=&quot;https://github.com/scripting/instantOutlines&quot; tabindex=&quot;-1&quot; target=&quot;_blank&quot;&gt;Instant outlines&lt;/a&gt;&lt;/li&gt;"/>
															</outline>
														<outline text="&lt;/ul&gt;"/>
														</outline>
													<outline text="&lt;/li&gt;"/>
													</outline>
												<outline text="&lt;/ul&gt;"/>
												</outline>
											<outline text="&lt;/li&gt;" created="Thu, 19 Aug 2021 13:51:26 GMT"/>
											</outline>
										<outline text="&lt;/ul&gt;" created="Thu, 19 Aug 2021 13:48:02 GMT"/>
										</outline>
									<outline text="&lt;/div&gt;" created="Thu, 19 Aug 2021 14:01:02 GMT"/>
									</outline>
								<outline text="&lt;/div&gt;" created="Thu, 19 Aug 2021 14:07:57 GMT"/>
								</outline>
							<outline text="&lt;/div&gt;" created="Thu, 19 Aug 2021 13:25:12 GMT"/>
							</outline>
						<outline text="&lt;div class=&quot;divPageBody&quot;&gt;">
							<outline text="&lt;div class=&quot;divOutlineContainer&quot; id=&quot;idOutlineContainer&quot; style=&quot;display: block;&quot;&gt;">
								<outline text="&lt;div class=&quot;divXmlIcon&quot; id=&quot;idXmlIcon&quot;&gt;&lt;/div&gt;"/>
								<outline text="&lt;div class=&quot;divLastUpdate&quot;&gt;&lt;b&gt;Last update&lt;/b&gt;: &lt;span id=&quot;idWhenLastUpdate&quot;&gt;&lt;/span&gt;.&lt;/div&gt;"/>
								<outline text="&lt;div class=&quot;divOutlineTitle&quot; id=&quot;idOutlineTitle&quot;&gt;">
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;div class=&quot;divOutlineDescription&quot; id=&quot;idOutlineDescription&quot;&gt;">
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;div class=&quot;divOutlineDisplayer&quot; id=&quot;idOutlineDisplayer&quot;&gt;">
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;div class=&quot;divWhenCreated&quot;&gt;&lt;b&gt;Posted&lt;/b&gt;: &lt;span id=&quot;idWhenCreated&quot;&gt;&lt;/span&gt;.&lt;/div&gt;"/>
								<outline text="&lt;div class=&quot;divOutlineFooter&quot; id=&quot;idOutlineFooter&quot;&gt;">
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;div class=&quot;divComments&quot; id=&quot;idComments&quot;&gt;">
									<outline text="&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;"/>
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;/div&gt;"/>
								</outline>
							<outline text="&lt;/div&gt;"/>
							</outline>
						<outline text="&lt;script&gt;">
							<outline text="$(document).ready (function () {">
								<outline text="startup ();" created="Wed, 30 Oct 2013 15:20:06 GMT" pgfnum="30656"/>
								<outline text="});"/>
								</outline>
							<outline text="&lt;/script&gt;"/>
							</outline>
						<outline text="&lt;/body&gt;"/>
						</outline>
					<outline text="&lt;/html&gt;"/>
					</outline>
				</outline>
			</outline>
		<outline text="build script" created="Sun, 06 Mar 2022 16:28:51 GMT">
			<outline text="nodeEditorSuite.utilities.buildReallySimple ()"/>
			</outline>
		</body>
	</opml>
